apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-08-30T16:45:09-05:00"
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-19T04:01:04Z"
    generateName: aws-lbc-868c8d6897-
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/name: aws-load-balancer-controller
      pod-template-hash: 868c8d6897
    name: aws-lbc-868c8d6897-hgzl2
    namespace: aws-lbc
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: aws-lbc-868c8d6897
      uid: 5f8841ae-a80c-4011-8e47-2f2597eb196c
    resourceVersion: "7825427"
    uid: b5cc759e-f9cc-487c-8ff1-53ca4a5f0009
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - aws-load-balancer-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --cluster-name=dev-2025
      - --ingress-class=alb
      - --aws-region=us-east-2
      - --aws-vpc-id=vpc-0e580f5ae96de51c7
      - --log-level=error
      - --default-target-type=ip
      - --load-balancer-class=service.k8s.aws/nlb
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--aws-lbc
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /healthz
          port: 61779
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-load-balancer-controller
      ports:
      - containerPort: 9443
        name: webhook-server
        protocol: TCP
      - containerPort: 8080
        name: metrics-server
        protocol: TCP
      readinessProbe:
        failureThreshold: 2
        httpGet:
          path: /readyz
          port: 61779
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tlwvt
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
    serviceAccount: aws-lbc
    serviceAccountName: aws-lbc
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - name: cert
      secret:
        defaultMode: 420
        secretName: aws-load-balancer-tls
    - name: kube-api-access-tlwvt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 512Mi
      containerID: containerd://991484a66480c441a6ccda8ea431f5a8bd61cd862bf9e46d848c829a48ca7c2a
      image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
      imageID: public.ecr.aws/eks/aws-load-balancer-controller@sha256:3a2d5b5ad26460b0f6c50b3e270945611af709e796de03c8fd270212feb1acdb
      lastState: {}
      name: aws-load-balancer-controller
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:20Z"
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tlwvt
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.17.88
    podIPs:
    - ip: 10.64.17.88
    qosClass: Guaranteed
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-08-30T16:45:09-05:00"
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-19T04:01:04Z"
    generateName: aws-lbc-868c8d6897-
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/name: aws-load-balancer-controller
      pod-template-hash: 868c8d6897
    name: aws-lbc-868c8d6897-rjgvk
    namespace: aws-lbc
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: aws-lbc-868c8d6897
      uid: 5f8841ae-a80c-4011-8e47-2f2597eb196c
    resourceVersion: "7825440"
    uid: 1d9a745a-7b93-40e6-b14e-cb1d39db6b9a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - aws-load-balancer-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --cluster-name=dev-2025
      - --ingress-class=alb
      - --aws-region=us-east-2
      - --aws-vpc-id=vpc-0e580f5ae96de51c7
      - --log-level=error
      - --default-target-type=ip
      - --load-balancer-class=service.k8s.aws/nlb
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--aws-lbc
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /healthz
          port: 61779
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-load-balancer-controller
      ports:
      - containerPort: 9443
        name: webhook-server
        protocol: TCP
      - containerPort: 8080
        name: metrics-server
        protocol: TCP
      readinessProbe:
        failureThreshold: 2
        httpGet:
          path: /readyz
          port: 61779
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lwvf
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
    serviceAccount: aws-lbc
    serviceAccountName: aws-lbc
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - name: cert
      secret:
        defaultMode: 420
        secretName: aws-load-balancer-tls
    - name: kube-api-access-8lwvf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 512Mi
      containerID: containerd://07260d52e248c81d63567a379e56105ef7427c7a37e2d8c285a2bea17e9c398e
      image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
      imageID: public.ecr.aws/eks/aws-load-balancer-controller@sha256:3a2d5b5ad26460b0f6c50b3e270945611af709e796de03c8fd270212feb1acdb
      lastState: {}
      name: aws-load-balancer-controller
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 512Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:19Z"
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lwvf
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.17.79
    podIPs:
    - ip: 10.64.17.79
    qosClass: Guaranteed
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9402"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-24T09:40:56Z"
    generateName: cert-manager-867ff9dbb8-
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      component: controller
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 867ff9dbb8
    name: cert-manager-867ff9dbb8-dpqtg
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-867ff9dbb8
      uid: df962b13-fa2c-49cc-829a-1e2ecaec005e
    resourceVersion: "10368082"
    uid: c8d4f177-caec-4940-bc5c-0c6f4c38c3a1
  spec:
    containers:
    - args:
      - --v=2
      - --cluster-resource-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=kube-system
      - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2
      - --default-issuer-name=le-production
      - --default-issuer-kind=ClusterIssuer
      - --max-concurrent-challenges=60
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--cert-manager--route53
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: quay.io/jetstack/cert-manager-controller:v1.18.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          path: /livez
          port: http-healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: cert-manager-controller
      ports:
      - containerPort: 9402
        name: http-metrics
        protocol: TCP
      - containerPort: 9403
        name: http-healthz
        protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 250m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82c5l
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager
    serviceAccountName: cert-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - name: kube-api-access-82c5l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:40:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:40:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:40:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:40:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:40:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 128Mi
      containerID: containerd://f4d8f441b447de1a77f705712990d9109f0b87a337cc990184b6d76e1cd470f6
      image: quay.io/jetstack/cert-manager-controller:v1.18.2
      imageID: quay.io/jetstack/cert-manager-controller@sha256:81316365dc0b713eddddfbf9b8907b2939676e6c0e12beec0f9625f202a36d16
      lastState: {}
      name: cert-manager-controller
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 250m
          memory: 128Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-24T09:40:58Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82c5l
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.23.141
    podIPs:
    - ip: 10.64.23.141
    qosClass: Burstable
    startTime: "2025-09-24T09:40:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9402"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-19T04:01:05Z"
    generateName: cert-manager-cainjector-6dddf8d484-
    generation: 1
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 6dddf8d484
    name: cert-manager-cainjector-6dddf8d484-qngvl
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-cainjector-6dddf8d484
      uid: 83cedd58-9940-4661-a36a-3fbeb5c0c2e4
    resourceVersion: "7825235"
    uid: e4cf6d91-147a-4bfe-9540-e77dea88a220
  spec:
    containers:
    - args:
      - --v=2
      - --leader-election-namespace=kube-system
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/jetstack/cert-manager-cainjector:v1.18.2
      imagePullPolicy: IfNotPresent
      name: cert-manager-cainjector
      ports:
      - containerPort: 9402
        name: http-metrics
        protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-48sf2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager-cainjector
    serviceAccountName: cert-manager-cainjector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-48sf2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 128Mi
      containerID: containerd://c260f9bf7d658620e981edbcc201bbf909aad4f7a3b969f05b3e84eed9118c09
      image: quay.io/jetstack/cert-manager-cainjector:v1.18.2
      imageID: quay.io/jetstack/cert-manager-cainjector@sha256:af59e01ad9756a1034fbf948330e75702e5d79b3577f323f6a9947707ba262fc
      lastState: {}
      name: cert-manager-cainjector
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-48sf2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.18.40
    podIPs:
    - ip: 10.64.18.40
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9402"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-19T04:01:04Z"
    generateName: cert-manager-webhook-84b958b657-
    generation: 1
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.18.2
      component: webhook
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 84b958b657
    name: cert-manager-webhook-84b958b657-vx495
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-webhook-84b958b657
      uid: 185aa557-400e-4d9b-9ad9-4e1c9a81142a
    resourceVersion: "7825511"
    uid: 20de2935-829f-4b22-a580-e9225c74ea58
  spec:
    containers:
    - args:
      - --v=2
      - --secure-port=10250
      - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
      - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
      - --dynamic-serving-dns-names=cert-manager-webhook
      - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
      - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/jetstack/cert-manager-webhook:v1.18.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: healthcheck
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cert-manager-webhook
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      - containerPort: 6080
        name: healthcheck
        protocol: TCP
      - containerPort: 9402
        name: http-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthcheck
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ln7vr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager-webhook
    serviceAccountName: cert-manager-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ln7vr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 128Mi
      containerID: containerd://46e7c5201c63fb48175b1c40e0e20a209a1c364e8f499ce4b9eb32f9d2712e4d
      image: quay.io/jetstack/cert-manager-webhook:v1.18.2
      imageID: quay.io/jetstack/cert-manager-webhook@sha256:9431f0d8b5103b06cc6138564f471ac02c6b2638c2fa399d81e28a01d817ae73
      lastState: {}
      name: cert-manager-webhook
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:33Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ln7vr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.19.196
    podIPs:
    - ip: 10.64.19.196
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-24T09:34:11Z"
    generateName: tester-76fd8fd9d9-
    generation: 1
    labels:
      app: tester
      pod-template-hash: 76fd8fd9d9
    name: tester-76fd8fd9d9-rw7lj
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: tester-76fd8fd9d9
      uid: 89f40ab9-483e-4522-815f-0a5297c36b65
    resourceVersion: "10365426"
    uid: e379d97d-57f5-4faa-ac17-3e2978c84f5f
  spec:
    containers:
    - env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--cert-manager--route53
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/misc:util-pg16
      imagePullPolicy: IfNotPresent
      name: misc
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-74c5q
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cert-manager
    serviceAccountName: cert-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - name: kube-api-access-74c5q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:34:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:34:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:34:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:34:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T09:34:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2881fd10d25e1f6a11b8dfd6a95396fbe85da2b60ae79f006ce128e0c3cf5665
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/misc:util-pg16
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/misc@sha256:704233d6c52d4fce934148485030f2a948b055a3d8a320ee7a6165e7c3fe08fd
      lastState: {}
      name: misc
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-24T09:34:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-74c5q
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.22.4
    podIPs:
    - ip: 10.64.22.4
    qosClass: BestEffort
    startTime: "2025-09-24T09:34:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-24T10:19:18Z"
    generateName: foundation-576956ff46-
    generation: 1
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 576956ff46
    name: foundation-576956ff46-56kmv
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: foundation-576956ff46
      uid: 9eedeb50-2190-4213-843c-ce52dfd1de04
    resourceVersion: "11676314"
    uid: 50ec54cb-34e4-46b9-8049-f0286ff8f929
  spec:
    automountServiceAccountToken: false
    containers:
    - envFrom:
      - secretRef:
          name: env-thk9f96mkk
      - configMapRef:
          name: env-cfhd8296kk
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imagePullPolicy: IfNotPresent
      name: main
      resources:
        limits:
          memory: 640Mi
        requests:
          cpu: 450m
          memory: 640Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /code/deployed_static
        name: static
    - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 25m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /etc/nginx/nginx.conf
        name: proxy-config
        subPath: nginx.conf
      - mountPath: /code/deployed_static
        name: static
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    initContainers:
    - args:
      - migrate
      - --no-input
      command:
      - django-admin
      envFrom:
      - secretRef:
          name: env-thk9f96mkk
      - configMapRef:
          name: env-cfhd8296kk
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imagePullPolicy: IfNotPresent
      name: migrate
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    - args:
      - collectstatic
      - --noinput
      command:
      - django-admin
      envFrom:
      - secretRef:
          name: env-thk9f96mkk
      - configMapRef:
          name: env-cfhd8296kk
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imagePullPolicy: IfNotPresent
      name: collectstatic
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /code/deployed_static
        name: static
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000
    priorityClassName: django
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache
    - configMap:
        defaultMode: 416
        name: proxy-config-b5t7dm96f7
        optional: false
      name: proxy-config
    - emptyDir: {}
      name: run
    - emptyDir: {}
      name: static
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T10:19:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T10:19:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T10:19:18Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T10:19:18Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T10:19:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 450m
        memory: 640Mi
      containerID: containerd://b5b15198c5355f46cd6203d9d69a645002135423fea162ca8d2f2966aed5702d
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation@sha256:0b2404d8df6563cfa1ef898ec98caeb9d24391613181a0723f2ca38c29ef0417
      lastState: {}
      name: main
      ready: true
      resources:
        limits:
          memory: 640Mi
        requests:
          cpu: 450m
          memory: 640Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-24T10:19:57Z"
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /code/deployed_static
        name: static
    - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: 'Back-off pulling image "572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine":
            ErrImagePull: rpc error: code = NotFound desc = failed to pull and unpack
            image "572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine":
            failed to resolve reference "572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine":
            572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine: not
            found'
          reason: ImagePullBackOff
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /etc/nginx/nginx.conf
        name: proxy-config
      - mountPath: /code/deployed_static
        name: static
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    initContainerStatuses:
    - allocatedResources:
        cpu: 200m
        memory: 128Mi
      containerID: containerd://a8a047064492d5f7ba7bacf834ba55354b963c29133bfdbad52deb41773a52c3
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation@sha256:0b2404d8df6563cfa1ef898ec98caeb9d24391613181a0723f2ca38c29ef0417
      lastState: {}
      name: migrate
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a8a047064492d5f7ba7bacf834ba55354b963c29133bfdbad52deb41773a52c3
          exitCode: 0
          finishedAt: "2025-09-24T10:19:37Z"
          reason: Completed
          startedAt: "2025-09-24T10:19:34Z"
    - allocatedResources:
        cpu: 200m
        memory: 128Mi
      containerID: containerd://7268582fd34e4ccbd3424c349349eef4adf561a297292f8ad0a96f36747b5d4e
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation@sha256:0b2404d8df6563cfa1ef898ec98caeb9d24391613181a0723f2ca38c29ef0417
      lastState: {}
      name: collectstatic
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7268582fd34e4ccbd3424c349349eef4adf561a297292f8ad0a96f36747b5d4e
          exitCode: 0
          finishedAt: "2025-09-24T10:19:57Z"
          reason: Completed
          startedAt: "2025-09-24T10:19:54Z"
      volumeMounts:
      - mountPath: /code/deployed_static
        name: static
    phase: Pending
    podIP: 10.64.22.212
    podIPs:
    - ip: 10.64.22.212
    qosClass: Burstable
    startTime: "2025-09-24T10:19:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T10:52:09Z"
    generateName: foundation-5fd4b8f9bb-
    generation: 1
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 5fd4b8f9bb
    name: foundation-5fd4b8f9bb-kf4v8
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: foundation-5fd4b8f9bb
      uid: 8e3d8c84-7f8f-4833-847d-1095e495e26d
    resourceVersion: "7959084"
    uid: 65e5e996-ca71-4b69-b227-d96173f6a5da
  spec:
    automountServiceAccountToken: false
    containers:
    - envFrom:
      - secretRef:
          name: env-thk9f96mkk
      - configMapRef:
          name: env-2mmtb52hhc
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imagePullPolicy: IfNotPresent
      name: main
      resources:
        limits:
          memory: 640Mi
        requests:
          cpu: 450m
          memory: 640Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /code/deployed_static
        name: static
    - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 25m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /etc/nginx/nginx.conf
        name: proxy-config
        subPath: nginx.conf
      - mountPath: /code/deployed_static
        name: static
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    initContainers:
    - args:
      - migrate
      - --no-input
      command:
      - django-admin
      envFrom:
      - secretRef:
          name: env-thk9f96mkk
      - configMapRef:
          name: env-2mmtb52hhc
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imagePullPolicy: IfNotPresent
      name: migrate
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    - args:
      - collectstatic
      - --noinput
      command:
      - django-admin
      envFrom:
      - secretRef:
          name: env-thk9f96mkk
      - configMapRef:
          name: env-2mmtb52hhc
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imagePullPolicy: IfNotPresent
      name: collectstatic
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /code/deployed_static
        name: static
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000
    priorityClassName: django
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache
    - configMap:
        defaultMode: 416
        name: proxy-config-b5t7dm96f7
        optional: false
      name: proxy-config
    - emptyDir: {}
      name: run
    - emptyDir: {}
      name: static
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T10:52:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T10:52:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T10:52:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T10:52:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T10:52:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 450m
        memory: 640Mi
      containerID: containerd://68f4dc6161c61b0ae100ca2d9ac9984ade5e308647864751f764fbb1200b8981
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation@sha256:0b2404d8df6563cfa1ef898ec98caeb9d24391613181a0723f2ca38c29ef0417
      lastState: {}
      name: main
      ready: true
      resources:
        limits:
          memory: 640Mi
        requests:
          cpu: 450m
          memory: 640Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T10:52:17Z"
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /code/deployed_static
        name: static
    - allocatedResources:
        cpu: 25m
        memory: 128Mi
      containerID: containerd://a7d2d93dd7d9f9f62afae3c87e6baccf5a59fabcdc65f682bd7b72da81704da0
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8
      lastState: {}
      name: nginx
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 25m
          memory: 128Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T10:52:17Z"
      volumeMounts:
      - mountPath: /run
        name: run
      - mountPath: /etc/nginx/nginx.conf
        name: proxy-config
      - mountPath: /code/deployed_static
        name: static
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    initContainerStatuses:
    - allocatedResources:
        cpu: 200m
        memory: 128Mi
      containerID: containerd://82352ae854f2b6f072ad590f6e6335b8c3ac63b8ae1fb16d4658a9485291004e
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation@sha256:0b2404d8df6563cfa1ef898ec98caeb9d24391613181a0723f2ca38c29ef0417
      lastState: {}
      name: migrate
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://82352ae854f2b6f072ad590f6e6335b8c3ac63b8ae1fb16d4658a9485291004e
          exitCode: 0
          finishedAt: "2025-09-19T10:52:13Z"
          reason: Completed
          startedAt: "2025-09-19T10:52:10Z"
    - allocatedResources:
        cpu: 200m
        memory: 128Mi
      containerID: containerd://5bd6601800549f710b03fc40fa94232f204c6a888e80e96e096a7b8a453923ed
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation@sha256:0b2404d8df6563cfa1ef898ec98caeb9d24391613181a0723f2ca38c29ef0417
      lastState: {}
      name: collectstatic
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 128Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5bd6601800549f710b03fc40fa94232f204c6a888e80e96e096a7b8a453923ed
          exitCode: 0
          finishedAt: "2025-09-19T10:52:16Z"
          reason: Completed
          startedAt: "2025-09-19T10:52:14Z"
      volumeMounts:
      - mountPath: /code/deployed_static
        name: static
    phase: Running
    podIP: 10.64.21.117
    podIPs:
    - ip: 10.64.21.117
    qosClass: Burstable
    startTime: "2025-09-19T10:52:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap: bfbcca6a30caf03dc0d5830d5745825cc1419f948971f31682e08f9e8935a62c
      checksum/health: 04e9b0b9fd0b12243a38f8e04b04f67886cf98315eab9f45ffa4e848b2a31f05
      checksum/scripts: 041214bdb4c892bf83f4c9a6f3b97f7d0ba06aefd0b31c222e3810da5752880d
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      prometheus.io/port: "9121"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: redis-master-77647c7dcf-
    generation: 1
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      helm.sh/chart: redis-16.13.0
      pod-template-hash: 77647c7dcf
    name: redis-master-77647c7dcf-ssf7f
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-master-77647c7dcf
      uid: 84b866fa-83bf-4132-8661-c8af22e417c7
    resourceVersion: "10035387"
    uid: 010fb577-860c-4bd9-b0c1-7333c2a0c144
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: master
                app.kubernetes.io/instance: redis
                app.kubernetes.io/name: redis
            namespaces:
            - dev-foundation
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - -c
      - /opt/bitnami/scripts/start-scripts/start-master.sh
      command:
      - /bin/bash
      env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: REDIS_REPLICATION_MODE
        value: master
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT
        value: "6379"
      image: docker.io/bitnami/redis:6.2.7-debian-11-r3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 20
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 20
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/bitnami/scripts/start-scripts
        name: start-scripts
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/mounted-etc
        name: config
      - mountPath: /opt/bitnami/redis/etc/
        name: redis-tmp-conf
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h7h7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        if [[ -f '/secrets/redis-password' ]]; then
        export REDIS_PASSWORD=$(cat /secrets/redis-password)
        fi
        redis_exporter
      env:
      - name: REDIS_ALIAS
        value: redis
      image: docker.io/bitnami/redis-exporter:1.40.0-debian-11-r0
      imagePullPolicy: IfNotPresent
      name: metrics
      ports:
      - containerPort: 9121
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h7h7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
    serviceAccount: redis
    serviceAccountName: redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: redis-scripts
      name: start-scripts
    - configMap:
        defaultMode: 493
        name: redis-health
      name: health
    - configMap:
        defaultMode: 420
        name: redis-configuration
      name: config
    - emptyDir: {}
      name: redis-tmp-conf
    - emptyDir: {}
      name: tmp
    - name: redis-data
      persistentVolumeClaim:
        claimName: redis-data-redis-master
    - name: kube-api-access-8h7h7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:04:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:04:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:04:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 128Mi
      containerID: containerd://751ba24faa47efcfa8f217bdb7ea452a305e00944ef42baf0bf9ac13d0d4deab
      image: docker.io/bitnami/redis-exporter:1.40.0-debian-11-r0
      imageID: docker.io/bitnami/redis-exporter@sha256:0150765630c45223a04e4636996c4721cf89f36d1e2e967640f8bb1e3fb435ab
      lastState: {}
      name: metrics
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:04:26Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h7h7
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 200m
        memory: 512Mi
      containerID: containerd://36eef4f1b5bf5528ab1455cfb5a2cb9c0e2cfa10fecbfb96fc378467a6f3baee
      image: docker.io/bitnami/redis:6.2.7-debian-11-r3
      imageID: docker.io/bitnami/redis@sha256:7788b908dd0dfd1793c6d6e5fe007e2eee9143837b05449f195cafa63bfd19ca
      lastState: {}
      name: redis
      ready: true
      resources:
        limits:
          cpu: 200m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 512Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:04:25Z"
      volumeMounts:
      - mountPath: /opt/bitnami/scripts/start-scripts
        name: start-scripts
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/mounted-etc
        name: config
      - mountPath: /opt/bitnami/redis/etc/
        name: redis-tmp-conf
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h7h7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.20.160
    podIPs:
    - ip: 10.64.20.160
    qosClass: Guaranteed
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: charts-7f5c8564d7-
    generation: 1
    labels:
      app: charts
      pod-template-hash: 7f5c8564d7
    name: charts-7f5c8564d7-msm49
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: charts-7f5c8564d7
      uid: d746d617-35ed-40da-834c-51f7b2fce60c
    resourceVersion: "10032672"
    uid: f7849beb-b66a-4e12-ab0a-83ea547f527f
  spec:
    containers:
    - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
      imagePullPolicy: Always
      name: helm-registry
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 500m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4w8c2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: role
      operator: Equal
      value: util
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4w8c2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 500m
        memory: 64Mi
      containerID: containerd://fd2dc553182c4598303c779faceb579ea7cb4709e784bcb89dea75cbad960acf
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry@sha256:f34ff633a4923ff6d450bbb2190cb99d1935128663a11908b59176647250ca5b
      lastState: {}
      name: helm-registry
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 500m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:21Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4w8c2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.20.112
    podIPs:
    - ip: 10.64.20.112
    qosClass: Burstable
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T20:48:37Z"
    generateName: charts-7f5c8564d7-
    generation: 1
    labels:
      app: charts
      pod-template-hash: 7f5c8564d7
    name: charts-7f5c8564d7-msnpt
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: charts-7f5c8564d7
      uid: d746d617-35ed-40da-834c-51f7b2fce60c
    resourceVersion: "8153152"
    uid: f342ffc2-753f-4dba-9462-a56196326fb9
  spec:
    containers:
    - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
      imagePullPolicy: Always
      name: helm-registry
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 500m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5bg4t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: role
      operator: Equal
      value: util
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5bg4t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T20:48:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T20:48:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T20:48:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T20:48:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T20:48:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 500m
        memory: 64Mi
      containerID: containerd://8c43f208674848cf0c658c2cc51367cd72cbf1fbd41b5dd566475b276c047415
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry@sha256:f34ff633a4923ff6d450bbb2190cb99d1935128663a11908b59176647250ca5b
      lastState: {}
      name: helm-registry
      ready: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 500m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T20:48:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5bg4t
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.160
    podIPs:
    - ip: 10.64.16.160
    qosClass: Burstable
    startTime: "2025-09-19T20:48:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-22T19:43:52Z"
    generateName: helm-controller-7cfbb6d6c9-
    generation: 1
    labels:
      app: helm-controller
      pod-template-hash: 7cfbb6d6c9
    name: helm-controller-7cfbb6d6c9-plkq9
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: helm-controller-7cfbb6d6c9
      uid: e0f9951e-a66a-43a1-bffd-e232be460dff
    resourceVersion: "9538889"
    uid: 9899b8c1-1e2b-488f-a1f9-31e7ef04143b
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - helm-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/helm-controller:v1.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l95zk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: helm-controller
    serviceAccountName: helm-controller
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-l95zk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://70a193777e24aadd3c774e62f0ae17695875742e9faea4ec092f7ceac14973b9
      image: ghcr.io/fluxcd/helm-controller:v1.3.0
      imageID: ghcr.io/fluxcd/helm-controller@sha256:db55d9d9f9b5106acd8c21da6916b8e285fcfc5572f214361ececd1a8571a4f0
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-22T19:43:52Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l95zk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.18.190
    podIPs:
    - ip: 10.64.18.190
    qosClass: Burstable
    startTime: "2025-09-22T19:43:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-22T19:43:53Z"
    generateName: helm-controller-7cfbb6d6c9-
    generation: 1
    labels:
      app: helm-controller
      pod-template-hash: 7cfbb6d6c9
    name: helm-controller-7cfbb6d6c9-sgmq4
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: helm-controller-7cfbb6d6c9
      uid: e0f9951e-a66a-43a1-bffd-e232be460dff
    resourceVersion: "9539080"
    uid: 56a69c95-f201-4aed-85b6-d474e1357c2e
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - helm-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/helm-controller:v1.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9cpsf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: helm-controller
    serviceAccountName: helm-controller
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-9cpsf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://6f785e80ceec2c386ead9accad09171e9113593759ad23ab85227abca03057c9
      image: ghcr.io/fluxcd/helm-controller:v1.3.0
      imageID: ghcr.io/fluxcd/helm-controller@sha256:db55d9d9f9b5106acd8c21da6916b8e285fcfc5572f214361ececd1a8571a4f0
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-22T19:43:55Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9cpsf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.15
    podIPs:
    - ip: 10.64.22.15
    qosClass: Burstable
    startTime: "2025-09-22T19:43:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-22T19:45:16Z"
    generateName: image-automation-controller-78b9bc8df6-
    generation: 1
    labels:
      app: image-automation-controller
      pod-template-hash: 78b9bc8df6
    name: image-automation-controller-78b9bc8df6-526zm
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: image-automation-controller-78b9bc8df6
      uid: abeb6181-4c9a-4bc0-a057-d2a9d40e9989
    resourceVersion: "9539750"
    uid: fe87e566-cd8f-49ca-9ce7-e840037a1ca8
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - image-automation-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/image-automation-controller:v0.41.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zjwgt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: image-automation-controller
    serviceAccountName: image-automation-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-zjwgt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://cda03a531098da4d829378bc30bd0719a7adeacc21ebc4b47909b024cbab189e
      image: ghcr.io/fluxcd/image-automation-controller:v0.41.2
      imageID: ghcr.io/fluxcd/image-automation-controller@sha256:e5b90e065e0d91690dbcd83dab3d03207ed030b068e26e9dac88c8d7b4fdfbe4
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-22T19:45:18Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zjwgt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.17.42
    podIPs:
    - ip: 10.64.17.42
    qosClass: Burstable
    startTime: "2025-09-22T19:45:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: image-automation-controller-78b9bc8df6-
    generation: 1
    labels:
      app: image-automation-controller
      pod-template-hash: 78b9bc8df6
    name: image-automation-controller-78b9bc8df6-hknc7
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: image-automation-controller-78b9bc8df6
      uid: abeb6181-4c9a-4bc0-a057-d2a9d40e9989
    resourceVersion: "10032751"
    uid: 21a89455-927b-40d4-9a94-0a7c253f6eaa
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - image-automation-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/image-automation-controller:v0.41.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-978jq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: image-automation-controller
    serviceAccountName: image-automation-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-978jq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://3c4141dbccde0696920af46e1a9cd8ac47497003d891fee517a4a8b03c12f3ef
      image: ghcr.io/fluxcd/image-automation-controller:v0.41.2
      imageID: ghcr.io/fluxcd/image-automation-controller@sha256:e5b90e065e0d91690dbcd83dab3d03207ed030b068e26e9dac88c8d7b4fdfbe4
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-978jq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.243
    podIPs:
    - ip: 10.64.22.243
    qosClass: Burstable
    startTime: "2025-09-23T18:58:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: image-reflector-controller-6cf8b4584c-
    generation: 1
    labels:
      app: image-reflector-controller
      pod-template-hash: 6cf8b4584c
    name: image-reflector-controller-6cf8b4584c-ntnfx
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: image-reflector-controller-6cf8b4584c
      uid: 3d35b3e1-0739-4a9c-9a4b-354108f4226c
    resourceVersion: "10032748"
    uid: c3d061ca-055f-4ec2-9094-c95b49f546c5
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - image-reflector-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/image-reflector-controller:v0.35.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z6g75
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: image-reflector-controller
    serviceAccountName: image-reflector-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - emptyDir: {}
      name: data
    - name: kube-api-access-z6g75
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://cfaded94c668b3a7e3a90737c631bef731c078029f6fdd856f3f16343b16397d
      image: ghcr.io/fluxcd/image-reflector-controller:v0.35.2
      imageID: ghcr.io/fluxcd/image-reflector-controller@sha256:4df89798b23a1ba7ec86bab327dcb50417af1517fe7986e511e28f62f40b8f61
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z6g75
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.21.57
    podIPs:
    - ip: 10.64.21.57
    qosClass: Burstable
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-22T19:45:16Z"
    generateName: image-reflector-controller-6cf8b4584c-
    generation: 1
    labels:
      app: image-reflector-controller
      pod-template-hash: 6cf8b4584c
    name: image-reflector-controller-6cf8b4584c-p6n5m
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: image-reflector-controller-6cf8b4584c
      uid: 3d35b3e1-0739-4a9c-9a4b-354108f4226c
    resourceVersion: "9539747"
    uid: e8b6ec96-d922-48c4-b8c3-1978f6a0139c
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - image-reflector-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/image-reflector-controller:v0.35.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tg9s9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: image-reflector-controller
    serviceAccountName: image-reflector-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - emptyDir: {}
      name: data
    - name: kube-api-access-tg9s9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:45:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://355f50560ef77e7ce3cf64525321ecd3cce1685c4061cbe99651a901686cf0f2
      image: ghcr.io/fluxcd/image-reflector-controller:v0.35.2
      imageID: ghcr.io/fluxcd/image-reflector-controller@sha256:4df89798b23a1ba7ec86bab327dcb50417af1517fe7986e511e28f62f40b8f61
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-22T19:45:18Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tg9s9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.19.168
    podIPs:
    - ip: 10.64.19.168
    qosClass: Burstable
    startTime: "2025-09-22T19:45:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: kustomize-controller-669b8bf874-
    generation: 1
    labels:
      app: kustomize-controller
      pod-template-hash: 669b8bf874
    name: kustomize-controller-669b8bf874-46km5
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kustomize-controller-669b8bf874
      uid: f900cd0e-7e45-444c-b52c-319b47a663db
    resourceVersion: "10032711"
    uid: 8939fed6-f343-4728-a8af-0536f47bca00
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - kustomize-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=debug
      - --log-encoding=json
      - --enable-leader-election
      - --requeue-dependency=10s
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--sops--kms
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k6bbc
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: kustomize-controller
    serviceAccountName: kustomize-controller
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - emptyDir: {}
      name: temp
    - name: kube-api-access-k6bbc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://02015e42e45b3919a0df12fb8e17e2834771df32be47a0ef026a9cbbef787258
      image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
      imageID: ghcr.io/fluxcd/kustomize-controller@sha256:1a50730537bafb7827365b9af95c4eb71ca3d9b0bed9bc9bc765880e976972ef
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:21Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k6bbc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.18.234
    podIPs:
    - ip: 10.64.18.234
    qosClass: Burstable
    startTime: "2025-09-23T18:58:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-22T19:43:53Z"
    generateName: kustomize-controller-669b8bf874-
    generation: 1
    labels:
      app: kustomize-controller
      pod-template-hash: 669b8bf874
    name: kustomize-controller-669b8bf874-chv28
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kustomize-controller-669b8bf874
      uid: f900cd0e-7e45-444c-b52c-319b47a663db
    resourceVersion: "9539133"
    uid: 29984d3b-d413-4558-9291-1b774ffc5c75
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - kustomize-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=debug
      - --log-encoding=json
      - --enable-leader-election
      - --requeue-dependency=10s
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--sops--kms
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d2w7k
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: kustomize-controller
    serviceAccountName: kustomize-controller
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - emptyDir: {}
      name: temp
    - name: kube-api-access-d2w7k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://d92219c3bed1e9b63813ea589357d43d2e4d232b75d8ab3a3693aeeeae80cdeb
      image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
      imageID: ghcr.io/fluxcd/kustomize-controller@sha256:1a50730537bafb7827365b9af95c4eb71ca3d9b0bed9bc9bc765880e976972ef
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-22T19:43:57Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d2w7k
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.231
    podIPs:
    - ip: 10.64.22.231
    qosClass: Burstable
    startTime: "2025-09-22T19:43:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T18:58:19Z"
    generateName: notification-controller-b877689d5-
    generation: 1
    labels:
      app: notification-controller
      pod-template-hash: b877689d5
    name: notification-controller-b877689d5-7nfz5
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: notification-controller-b877689d5
      uid: faf509a8-d5b6-49ce-bc3e-517c35029605
    resourceVersion: "10032676"
    uid: 9edc8531-0593-4f28-9277-58019945f723
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - notification-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/notification-controller:v1.6.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      - containerPort: 9292
        name: http-webhook
        protocol: TCP
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9w44
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: notification-controller
    serviceAccountName: notification-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-v9w44
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://0ec86fdc0ca242b12682b48e5dfbe018525b1b05e0abe1901c35e0908c628fb4
      image: ghcr.io/fluxcd/notification-controller:v1.6.0
      imageID: ghcr.io/fluxcd/notification-controller@sha256:80174ff676407af7a6feff67b0c2f100de9f7f89df4c26fc871e4d4c4006544d
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9w44
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.184
    podIPs:
    - ip: 10.64.22.184
    qosClass: Burstable
    startTime: "2025-09-23T18:58:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-22T19:43:53Z"
    generateName: notification-controller-b877689d5-
    generation: 1
    labels:
      app: notification-controller
      pod-template-hash: b877689d5
    name: notification-controller-b877689d5-crd26
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: notification-controller-b877689d5
      uid: faf509a8-d5b6-49ce-bc3e-517c35029605
    resourceVersion: "9539029"
    uid: fa9c796f-bb34-4af7-94a3-0ae4aafb287f
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - notification-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/notification-controller:v1.6.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      - containerPort: 9292
        name: http-webhook
        protocol: TCP
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kv6hd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: notification-controller
    serviceAccountName: notification-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-kv6hd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T19:43:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://5dbbf6b1e53a5723274fb54de88c04b04d082d9c083e36170a73a38932196def
      image: ghcr.io/fluxcd/notification-controller:v1.6.0
      imageID: ghcr.io/fluxcd/notification-controller@sha256:80174ff676407af7a6feff67b0c2f100de9f7f89df4c26fc871e4d4c4006544d
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-22T19:43:54Z"
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kv6hd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.17.234
    podIPs:
    - ip: 10.64.17.234
    qosClass: Burstable
    startTime: "2025-09-22T19:43:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T18:58:19Z"
    generateName: source-controller-58466bbdb4-
    generation: 1
    labels:
      app: source-controller
      pod-template-hash: 58466bbdb4
    name: source-controller-58466bbdb4-m8rfz
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: source-controller-58466bbdb4
      uid: a9aa91b7-9048-49eb-85f8-44c5715c6250
    resourceVersion: "10032699"
    uid: 5c844ab4-6a85-44d7-9a6f-0bdf8ced182b
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: source-controller
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      - --storage-path=/data
      - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: TUF_ROOT
        value: /tmp/.sigstore
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/source-controller:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xn98l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: source-controller
    serviceAccountName: source-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-xn98l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 64Mi
      containerID: containerd://4783d8c40980d896a5f4b37499859d37d4ecba4ef0ed18fa1d40a9e2559306f0
      image: ghcr.io/fluxcd/source-controller:v1.6.2
      imageID: ghcr.io/fluxcd/source-controller@sha256:11c8e14df885eff86586533d9941293ec8a1e9fff71bacf119edc79fdf3c63e3
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xn98l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.20.78
    podIPs:
    - ip: 10.64.20.78
    qosClass: Burstable
    startTime: "2025-09-23T18:58:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:57:38Z"
    generateName: nginx-ingress-controller-
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.2
      controller-revision-hash: c5cc887dd
      helm.sh/chart: ingress-nginx-4.13.2
      pod-template-generation: "1"
    name: nginx-ingress-controller-nx2h4
    namespace: ingress-nginx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: nginx-ingress-controller
      uid: 2150b90f-07a5-4ef9-87fa-d250e3db1a47
    resourceVersion: "10036905"
    uid: d3e9ae45-def2-4d0d-b5e2-8c9fc75060e1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-23-88.us-east-2.compute.internal
    automountServiceAccountToken: true
    containers:
    - args:
      - /nginx-ingress-controller
      - --election-id=nginx-ingress-leader
      - --controller-class=k8s.io/ingress-nginx
      - --ingress-class=nginx
      - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller
      - --validating-webhook=:8443
      - --validating-webhook-certificate=/usr/local/certificates/cert
      - --validating-webhook-key=/usr/local/certificates/key
      - --enable-metrics=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LD_PRELOAD
        value: /usr/local/lib/libmimalloc.so
      image: registry.k8s.io/ingress-nginx/controller:v1.13.2@sha256:1f7eaeb01933e719c8a9f4acd8181e555e582330c7d50f24484fb64d2ba9b2ef
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /wait-shutdown
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 10254
        name: metrics
        protocol: TCP
      - containerPort: 8443
        name: webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsGroup: 82
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6rb4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: nginx-ingress
    serviceAccountName: nginx-ingress
    terminationGracePeriodSeconds: 300
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: nginx-ingress-admission
    - name: kube-api-access-p6rb4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:08:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:08:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:08:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 256Mi
      containerID: containerd://e6065f8e3b95c9f6d1cd87ea76e51312656a1e008b79df2b42ee64931770cc24
      image: sha256:1bec18b3728e7489d64104958b9da774a7d1c7f0f8b2bae7330480b4891f6f56
      imageID: registry.k8s.io/ingress-nginx/controller@sha256:1f7eaeb01933e719c8a9f4acd8181e555e582330c7d50f24484fb64d2ba9b2ef
      lastState: {}
      name: controller
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:08:13Z"
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6rb4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.22.210
    podIPs:
    - ip: 10.64.22.210
    qosClass: Burstable
    startTime: "2025-09-23T18:57:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:33:08Z"
    generateName: nginx-ingress-controller-
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.2
      controller-revision-hash: c5cc887dd
      helm.sh/chart: ingress-nginx-4.13.2
      pod-template-generation: "1"
    name: nginx-ingress-controller-pm9bb
    namespace: ingress-nginx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: nginx-ingress-controller
      uid: 2150b90f-07a5-4ef9-87fa-d250e3db1a47
    resourceVersion: "7831744"
    uid: 9911ccda-e032-40c0-876c-02c338dde669
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-16-55.us-east-2.compute.internal
    automountServiceAccountToken: true
    containers:
    - args:
      - /nginx-ingress-controller
      - --election-id=nginx-ingress-leader
      - --controller-class=k8s.io/ingress-nginx
      - --ingress-class=nginx
      - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller
      - --validating-webhook=:8443
      - --validating-webhook-certificate=/usr/local/certificates/cert
      - --validating-webhook-key=/usr/local/certificates/key
      - --enable-metrics=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LD_PRELOAD
        value: /usr/local/lib/libmimalloc.so
      image: registry.k8s.io/ingress-nginx/controller:v1.13.2@sha256:1f7eaeb01933e719c8a9f4acd8181e555e582330c7d50f24484fb64d2ba9b2ef
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /wait-shutdown
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 10254
        name: metrics
        protocol: TCP
      - containerPort: 8443
        name: webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsGroup: 82
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d4cxc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: nginx-ingress
    serviceAccountName: nginx-ingress
    terminationGracePeriodSeconds: 300
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: nginx-ingress-admission
    - name: kube-api-access-d4cxc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 256Mi
      containerID: containerd://8c2af2cec9d9aece61d711cd495b1a4849af428854eaeae319770c2ced20a237
      image: sha256:1bec18b3728e7489d64104958b9da774a7d1c7f0f8b2bae7330480b4891f6f56
      imageID: registry.k8s.io/ingress-nginx/controller@sha256:1f7eaeb01933e719c8a9f4acd8181e555e582330c7d50f24484fb64d2ba9b2ef
      lastState: {}
      name: controller
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:33:11Z"
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d4cxc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.19.182
    podIPs:
    - ip: 10.64.19.182
    qosClass: Burstable
    startTime: "2025-09-19T04:33:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:33:08Z"
    generateName: nginx-ingress-controller-
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.2
      controller-revision-hash: c5cc887dd
      helm.sh/chart: ingress-nginx-4.13.2
      pod-template-generation: "1"
    name: nginx-ingress-controller-sbd9p
    namespace: ingress-nginx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: nginx-ingress-controller
      uid: 2150b90f-07a5-4ef9-87fa-d250e3db1a47
    resourceVersion: "7831756"
    uid: bd39aa1e-4513-484d-95a5-3e046e0eba1a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-22-126.us-east-2.compute.internal
    automountServiceAccountToken: true
    containers:
    - args:
      - /nginx-ingress-controller
      - --election-id=nginx-ingress-leader
      - --controller-class=k8s.io/ingress-nginx
      - --ingress-class=nginx
      - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller
      - --validating-webhook=:8443
      - --validating-webhook-certificate=/usr/local/certificates/cert
      - --validating-webhook-key=/usr/local/certificates/key
      - --enable-metrics=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LD_PRELOAD
        value: /usr/local/lib/libmimalloc.so
      image: registry.k8s.io/ingress-nginx/controller:v1.13.2@sha256:1f7eaeb01933e719c8a9f4acd8181e555e582330c7d50f24484fb64d2ba9b2ef
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /wait-shutdown
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 10254
        name: metrics
        protocol: TCP
      - containerPort: 8443
        name: webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsGroup: 82
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l96d4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: nginx-ingress
    serviceAccountName: nginx-ingress
    terminationGracePeriodSeconds: 300
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: nginx-ingress-admission
    - name: kube-api-access-l96d4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:33:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 256Mi
      containerID: containerd://af7625fdbdb1337d9b12ff767bd085b8a135479c34d0b161d51beec760957553
      image: sha256:1bec18b3728e7489d64104958b9da774a7d1c7f0f8b2bae7330480b4891f6f56
      imageID: registry.k8s.io/ingress-nginx/controller@sha256:1f7eaeb01933e719c8a9f4acd8181e555e582330c7d50f24484fb64d2ba9b2ef
      lastState: {}
      name: controller
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:33:11Z"
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l96d4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.21.39
    podIPs:
    - ip: 10.64.21.39
    qosClass: Burstable
    startTime: "2025-09-19T04:33:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-23T14:07:45-05:00"
    creationTimestamp: "2025-09-23T19:07:50Z"
    generateName: aws-node-
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: b454b9d75
      k8s-app: aws-node
      pod-template-generation: "3"
    name: aws-node-bnh5g
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: 37f2bc17-6adc-49b1-8619-130afb7a24d2
    resourceVersion: "10036672"
    uid: 3cd2730a-88d0-45bb-b9fe-a07859e37bb3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-16-55.us-east-2.compute.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_ENDPOINT
        value: https://D5F354783F731271B1F1EBBBC9ADD58A.yl4.us-east-2.eks.amazonaws.com
      - name: CLUSTER_NAME
        value: dev-2025
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.19.5
      - name: VPC_ID
        value: vpc-0e580f5ae96de51c7
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcr4d
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imagePullPolicy: Always
      name: aws-eks-nodeagent
      ports:
      - containerPort: 8162
        hostPort: 8162
        name: agentmetrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcr4d
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imagePullPolicy: Always
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcr4d
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-hcr4d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://53884747797d822d756edf5ccf57bf203b5fcc65095e87c8c321282b61b8812a
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent@sha256:cd2942d29e128e2b1028ba44567863e8473581684c8e2a701c88993bb6652ba3
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:07:52Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcr4d
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 25m
      containerID: containerd://ade8f0bc400ac6bd9ab1e6470e471559cd751fe8ab46c592ee09191dba2e120a
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni@sha256:a1d7b4bb07c9c30b583858cec8a374ab1cdbbd0d83231004a740fef3eee53a6f
      lastState: {}
      name: aws-node
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:07:51Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcr4d
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    initContainerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://d22a9a2443ab30cc50079d84f0ef35fc8a7a813bb11b82aa0216ecc175a26892
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init@sha256:b39519ca70b1ba2346111609b0ad9f7e5bb64823de02ce8627ba05dc58f13b8e
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d22a9a2443ab30cc50079d84f0ef35fc8a7a813bb11b82aa0216ecc175a26892
          exitCode: 0
          finishedAt: "2025-09-23T19:07:51Z"
          reason: Completed
          startedAt: "2025-09-23T19:07:51Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcr4d
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.64.16.55
    podIPs:
    - ip: 10.64.16.55
    qosClass: Burstable
    startTime: "2025-09-23T19:07:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-23T14:07:45-05:00"
    creationTimestamp: "2025-09-23T19:07:55Z"
    generateName: aws-node-
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: b454b9d75
      k8s-app: aws-node
      pod-template-generation: "3"
    name: aws-node-fhmwk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: 37f2bc17-6adc-49b1-8619-130afb7a24d2
    resourceVersion: "10036720"
    uid: 0b09e8e3-168a-417c-9e58-5b3759ac6dd0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-23-88.us-east-2.compute.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_ENDPOINT
        value: https://D5F354783F731271B1F1EBBBC9ADD58A.yl4.us-east-2.eks.amazonaws.com
      - name: CLUSTER_NAME
        value: dev-2025
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.19.5
      - name: VPC_ID
        value: vpc-0e580f5ae96de51c7
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vzw74
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imagePullPolicy: Always
      name: aws-eks-nodeagent
      ports:
      - containerPort: 8162
        hostPort: 8162
        name: agentmetrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vzw74
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imagePullPolicy: Always
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vzw74
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-vzw74
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://d16487301806b3962a4b3c3ec8eb1d2ec0d370741755ac176fdcf800d88b1cac
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent@sha256:cd2942d29e128e2b1028ba44567863e8473581684c8e2a701c88993bb6652ba3
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:07:56Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vzw74
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 25m
      containerID: containerd://b3bb4abba8601bb6ece9fd9d97dbe520d8111e03eaeb24445ca5bff5446b6a71
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni@sha256:a1d7b4bb07c9c30b583858cec8a374ab1cdbbd0d83231004a740fef3eee53a6f
      lastState: {}
      name: aws-node
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:07:56Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vzw74
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    initContainerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://22ce733ca67afe12275106d2740c2253bcdb82f0b74e4e472309a97ec803be04
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init@sha256:b39519ca70b1ba2346111609b0ad9f7e5bb64823de02ce8627ba05dc58f13b8e
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://22ce733ca67afe12275106d2740c2253bcdb82f0b74e4e472309a97ec803be04
          exitCode: 0
          finishedAt: "2025-09-23T19:07:56Z"
          reason: Completed
          startedAt: "2025-09-23T19:07:56Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vzw74
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.64.23.88
    podIPs:
    - ip: 10.64.23.88
    qosClass: Burstable
    startTime: "2025-09-23T19:07:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-23T14:07:45-05:00"
    creationTimestamp: "2025-09-23T19:07:45Z"
    generateName: aws-node-
    generation: 1
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      controller-revision-hash: b454b9d75
      k8s-app: aws-node
      pod-template-generation: "3"
    name: aws-node-tkrst
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aws-node
      uid: 37f2bc17-6adc-49b1-8619-130afb7a24d2
    resourceVersion: "10036612"
    uid: d6bbdb44-1d45-4cb0-861d-90c7e1eba602
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-22-126.us-east-2.compute.internal
    containers:
    - env:
      - name: ADDITIONAL_ENI_TAGS
        value: '{}'
      - name: ANNOTATE_POD_IP
        value: "false"
      - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
        value: "true"
      - name: AWS_VPC_ENI_MTU
        value: "9001"
      - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
        value: "false"
      - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
        value: "false"
      - name: AWS_VPC_K8S_CNI_LOGLEVEL
        value: DEBUG
      - name: AWS_VPC_K8S_CNI_LOG_FILE
        value: /host/var/log/aws-routed-eni/ipamd.log
      - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
        value: prng
      - name: AWS_VPC_K8S_CNI_VETHPREFIX
        value: eni
      - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
        value: /var/log/aws-routed-eni/plugin.log
      - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
        value: DEBUG
      - name: CLUSTER_ENDPOINT
        value: https://D5F354783F731271B1F1EBBBC9ADD58A.yl4.us-east-2.eks.amazonaws.com
      - name: CLUSTER_NAME
        value: dev-2025
      - name: DISABLE_INTROSPECTION
        value: "false"
      - name: DISABLE_METRICS
        value: "false"
      - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
        value: "false"
      - name: ENABLE_IPv4
        value: "true"
      - name: ENABLE_IPv6
        value: "false"
      - name: ENABLE_POD_ENI
        value: "false"
      - name: ENABLE_PREFIX_DELEGATION
        value: "false"
      - name: ENABLE_SUBNET_DISCOVERY
        value: "true"
      - name: NETWORK_POLICY_ENFORCING_MODE
        value: standard
      - name: VPC_CNI_VERSION
        value: v1.19.5
      - name: VPC_ID
        value: vpc-0e580f5ae96de51c7
      - name: WARM_ENI_TARGET
        value: "1"
      - name: WARM_PREFIX_TARGET
        value: "1"
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: aws-node
      ports:
      - containerPort: 61678
        hostPort: 61678
        name: metrics
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /app/grpc-health-probe
          - -addr=:50051
          - -connect-timeout=5s
          - -rpc-timeout=5s
        failureThreshold: 3
        initialDelaySeconds: 1
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jkbl4
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --enable-ipv6=false
      - --enable-network-policy=false
      - --enable-cloudwatch-logs=false
      - --enable-policy-event-logs=false
      - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
      - --metrics-bind-addr=:8162
      - --health-probe-bind-addr=:8163
      - --conntrack-cache-cleanup-period=300
      env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imagePullPolicy: Always
      name: aws-eks-nodeagent
      ports:
      - containerPort: 8162
        hostPort: 8162
        name: agentmetrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jkbl4
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: DISABLE_TCP_EARLY_DEMUX
        value: "false"
      - name: ENABLE_IPv6
        value: "false"
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev-2025--eks-vpc-cni
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imagePullPolicy: Always
      name: aws-vpc-cni-init
      resources:
        requests:
          cpu: 25m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jkbl4
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aws-node
    serviceAccountName: aws-node
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf-pin-path
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/aws-routed-eni
        type: DirectoryOrCreate
      name: log-dir
    - hostPath:
        path: /var/run/aws-node
        type: DirectoryOrCreate
      name: run-dir
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-jkbl4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://f5f269d0f46798989ecd4d170fea75f54da6370d6d5b406b30f9d29de986d3c3
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent@sha256:cd2942d29e128e2b1028ba44567863e8473581684c8e2a701c88993bb6652ba3
      lastState: {}
      name: aws-eks-nodeagent
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:07:46Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /sys/fs/bpf
        name: bpf-pin-path
      - mountPath: /var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jkbl4
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 25m
      containerID: containerd://b4d5a39b9a833392808479ea01605bd6e9bb95ee8b58b345cec5f84be2d97b4c
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni@sha256:a1d7b4bb07c9c30b583858cec8a374ab1cdbbd0d83231004a740fef3eee53a6f
      lastState: {}
      name: aws-node
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:07:46Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/var/log/aws-routed-eni
        name: log-dir
      - mountPath: /var/run/aws-node
        name: run-dir
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jkbl4
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    initContainerStatuses:
    - allocatedResources:
        cpu: 25m
      containerID: containerd://d0c40a6d26f2f597281849ff7f25d76ab77dfa607be87f6a58c907d14f89471f
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init@sha256:b39519ca70b1ba2346111609b0ad9f7e5bb64823de02ce8627ba05dc58f13b8e
      lastState: {}
      name: aws-vpc-cni-init
      ready: true
      resources:
        requests:
          cpu: 25m
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d0c40a6d26f2f597281849ff7f25d76ab77dfa607be87f6a58c907d14f89471f
          exitCode: 0
          finishedAt: "2025-09-23T19:07:46Z"
          reason: Completed
          startedAt: "2025-09-23T19:07:46Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jkbl4
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.64.22.126
    podIPs:
    - ip: 10.64.22.126
    qosClass: Burstable
    startTime: "2025-09-23T19:07:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:05Z"
    generateName: coredns-7b8b87fbd8-
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 7b8b87fbd8
    name: coredns-7b8b87fbd8-bmqnx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-7b8b87fbd8
      uid: b445a4c4-a03e-4495-946b-f3e52930528d
    resourceVersion: "7825163"
    uid: bd7b90f4-ebb8-4eec-a23b-7bd7fea05943
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9fkxx
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-9fkxx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://c30944da4df2d837a24de70108d313f3b63fdadd3b21b90c503bf301a0696f0d
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns@sha256:0e6933e6d213752941bf9576656169915e79a7b555634da4b6deb1a0af86ec89
      lastState: {}
      name: coredns
      ready: true
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:19Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9fkxx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.19.221
    podIPs:
    - ip: 10.64.19.221
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:04Z"
    generateName: coredns-7b8b87fbd8-
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 7b8b87fbd8
    name: coredns-7b8b87fbd8-tt9d9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-7b8b87fbd8
      uid: b445a4c4-a03e-4495-946b-f3e52930528d
    resourceVersion: "7825160"
    uid: 9b42508b-d967-4bd2-9755-39e9c693e0e7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ckplq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: kube-dns
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-ckplq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://695f24f09153ac77992c6365d34bb72e8d5727ffc2ce5fb9dc157f936caa5028
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns@sha256:0e6933e6d213752941bf9576656169915e79a7b555634da4b6deb1a0af86ec89
      lastState: {}
      name: coredns
      ready: true
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:19Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ckplq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.17.250
    podIPs:
    - ip: 10.64.17.250
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:06Z"
    generateName: ebs-csi-controller-85857479c4-
    generation: 1
    labels:
      app: ebs-csi-controller
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
      pod-template-hash: 85857479c4
    name: ebs-csi-controller-85857479c4-dw742
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ebs-csi-controller-85857479c4
      uid: 69e3616f-ac15-4918-9ff3-7e5449ce9e7c
    resourceVersion: "7825435"
    uid: 610ed082-abc9-47ad-85a7-55d83e056889
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
              - auto
              - hybrid
          weight: 1
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ebs-csi-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - controller
      - --endpoint=$(CSI_ENDPOINT)
      - --k8s-tag-cluster-id=dev-2025
      - --batching=true
      - --logging-format=text
      - --user-agent-extra=eks
      - --v=2
      env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
      - name: CSI_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            key: key_id
            name: aws-secret
            optional: true
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: access_key
            name: aws-secret
            optional: true
      - name: AWS_EC2_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: endpoint
            name: aws-meta
            optional: true
      - name: AWS_SAGEMAKER_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: sagemaker_endpoint
            name: aws-meta
            optional: true
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: ebs-plugin
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --timeout=60s
      - --csi-address=$(ADDRESS)
      - --v=2
      - --feature-gates=Topology=true
      - --extra-create-metadata
      - --leader-election=true
      - --default-fstype=ext4
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --worker-threads=100
      - --retry-interval-max=30m
      - --feature-gates=VolumeAttributesClass=true
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner:v5.3.0-eksbuild.4
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --timeout=6m
      - --csi-address=$(ADDRESS)
      - --v=2
      - --leader-election=true
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --worker-threads=100
      - --retry-interval-max=5m
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher:v4.9.0-eksbuild.4
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --leader-election=true
      - --v=2
      - --extra-create-metadata
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --worker-threads=100
      - --retry-interval-max=30m
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter:v8.3.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --timeout=60s
      - --extra-modify-metadata
      - --csi-address=$(ADDRESS)
      - --v=2
      - --handle-volume-inuse-error=false
      - --leader-election=true
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --workers=100
      - --retry-interval-max=30m
      - --feature-gates=VolumeAttributesClass=true
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer:v1.14.0-eksbuild.4
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: ebs-csi-controller-sa
    serviceAccountName: ebs-csi-controller-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - emptyDir: {}
      name: socket-dir
    - name: kube-api-access-24jx6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://bfba11c7da8636d6a0e50250b5bc512a910e2683bdc2596e7b7e53a69efa343e
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher:v4.9.0-eksbuild.4
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher@sha256:4e1f6591185a06946cb38c126d5fad73c0eb50f1e3adccab0b61faf842786873
      lastState: {}
      name: csi-attacher
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:30Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://5012a33a22abb0ac2fca05ce2dc7a46b462fe2a9f173cf6432da6eeb67e2751d
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner:v5.3.0-eksbuild.4
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner@sha256:f1a0ade1d61042dfdcd5ef0b99562ec39384968b731a07f5318e0e8b1fb7dba8
      lastState: {}
      name: csi-provisioner
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:18Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://5a6519c081123522a2f0661a77b05842166f958cf8a09446cafa565c91e6da3f
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer:v1.14.0-eksbuild.4
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer@sha256:9d80c48d0f3194f87441c555b06255294a9f95434dd49229f7ccabd776ffe804
      lastState: {}
      name: csi-resizer
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:30Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://f2a4df0948f64bd2b7b32822cee28e6bec70c29510c1ddeb613cffea2158cbbf
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter:v8.3.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter@sha256:7266c1fb88473c947a8fad84db000f3317d18d706cfc8e9c14d8d250bb9c3a9f
      lastState: {}
      name: csi-snapshotter
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:30Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://1294640573344c0748b4f4b000cc41784c10f29bf7d61b6fea9c50e275d3e442
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver@sha256:f3221bb078b3a2d5bab281aeae6ef663c967953bd2badffb4e9859df174a18af
      lastState: {}
      name: ebs-plugin
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:18Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://0a06ab2ed1eb11df2ee14c876af1388b837952925da213b1d366f5f218a139f6
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe@sha256:4893b2cc0157e092833512e36fbd8987682a32dff02a1ec2ecd9e3604c0be163
      lastState: {}
      name: liveness-probe
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:19Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-24jx6
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.179
    podIPs:
    - ip: 10.64.16.179
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:04Z"
    generateName: ebs-csi-controller-85857479c4-
    generation: 1
    labels:
      app: ebs-csi-controller
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
      pod-template-hash: 85857479c4
    name: ebs-csi-controller-85857479c4-v5j86
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ebs-csi-controller-85857479c4
      uid: 69e3616f-ac15-4918-9ff3-7e5449ce9e7c
    resourceVersion: "7825384"
    uid: 9f12b260-04e8-4f64-b04b-83ac183ec3b0
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
              - auto
              - hybrid
          weight: 1
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ebs-csi-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - controller
      - --endpoint=$(CSI_ENDPOINT)
      - --k8s-tag-cluster-id=dev-2025
      - --batching=true
      - --logging-format=text
      - --user-agent-extra=eks
      - --v=2
      env:
      - name: CSI_ENDPOINT
        value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
      - name: CSI_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            key: key_id
            name: aws-secret
            optional: true
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: access_key
            name: aws-secret
            optional: true
      - name: AWS_EC2_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: endpoint
            name: aws-meta
            optional: true
      - name: AWS_SAGEMAKER_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: sagemaker_endpoint
            name: aws-meta
            optional: true
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: ebs-plugin
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --timeout=60s
      - --csi-address=$(ADDRESS)
      - --v=2
      - --feature-gates=Topology=true
      - --extra-create-metadata
      - --leader-election=true
      - --default-fstype=ext4
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --worker-threads=100
      - --retry-interval-max=30m
      - --feature-gates=VolumeAttributesClass=true
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner:v5.3.0-eksbuild.4
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --timeout=6m
      - --csi-address=$(ADDRESS)
      - --v=2
      - --leader-election=true
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --worker-threads=100
      - --retry-interval-max=5m
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher:v4.9.0-eksbuild.4
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --leader-election=true
      - --v=2
      - --extra-create-metadata
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --worker-threads=100
      - --retry-interval-max=30m
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter:v8.3.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --timeout=60s
      - --extra-modify-metadata
      - --csi-address=$(ADDRESS)
      - --v=2
      - --handle-volume-inuse-error=false
      - --leader-election=true
      - --kube-api-qps=20
      - --kube-api-burst=100
      - --workers=100
      - --retry-interval-max=30m
      - --feature-gates=VolumeAttributesClass=true
      env:
      - name: ADDRESS
        value: /var/lib/csi/sockets/pluginproxy/csi.sock
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer:v1.14.0-eksbuild.4
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      - name: AWS_DEFAULT_REGION
        value: us-east-2
      - name: AWS_REGION
        value: us-east-2
      - name: AWS_ROLE_ARN
        value: arn:aws:iam::572430232445:role/dev--eks-csi-ebs
      - name: AWS_WEB_IDENTITY_TOKEN_FILE
        value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: ebs-csi-controller-sa
    serviceAccountName: ebs-csi-controller-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: aws-iam-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
    - emptyDir: {}
      name: socket-dir
    - name: kube-api-access-jtfjh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://1c85d82d72ba9c4bb4f8d7046d6f8e8ba5f1a8cf2dd651b891177b96ab7ebc9a
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher:v4.9.0-eksbuild.4
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher@sha256:4e1f6591185a06946cb38c126d5fad73c0eb50f1e3adccab0b61faf842786873
      lastState: {}
      name: csi-attacher
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:21Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://95b8b3157890c7acf2f91050d39e1a1e0187f69e4ed4b1b5850ebae3061eb72a
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner:v5.3.0-eksbuild.4
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner@sha256:f1a0ade1d61042dfdcd5ef0b99562ec39384968b731a07f5318e0e8b1fb7dba8
      lastState: {}
      name: csi-provisioner
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:18Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://fc71156c5c0c202cd96f0a7b7b57164c564f72376324177e7b4e17e1aa7cb728
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer:v1.14.0-eksbuild.4
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer@sha256:9d80c48d0f3194f87441c555b06255294a9f95434dd49229f7ccabd776ffe804
      lastState: {}
      name: csi-resizer
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:23Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://829b67d782b055e2982c6928c2c1e4d1d31eebd5dff391266e53bc4f46b6149e
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter:v8.3.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter@sha256:7266c1fb88473c947a8fad84db000f3317d18d706cfc8e9c14d8d250bb9c3a9f
      lastState: {}
      name: csi-snapshotter
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:22Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://6462ce4a09bc34f584e44abeea4a5775f95e02816f59b9ebf17aab499404a221
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver@sha256:f3221bb078b3a2d5bab281aeae6ef663c967953bd2badffb4e9859df174a18af
      lastState: {}
      name: ebs-plugin
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:16Z"
      volumeMounts:
      - mountPath: /var/lib/csi/sockets/pluginproxy/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://b9d09513833f18f85cc2c2629e5da71beb32be842a260f2a8f56440a363170ad
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe@sha256:4893b2cc0157e092833512e36fbd8987682a32dff02a1ec2ecd9e3604c0be163
      lastState: {}
      name: liveness-probe
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:23Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtfjh
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/eks.amazonaws.com/serviceaccount
        name: aws-iam-token
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.54
    podIPs:
    - ip: 10.64.16.54
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:28Z"
    generateName: ebs-csi-node-
    generation: 1
    labels:
      app: ebs-csi-node
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
      controller-revision-hash: 664f6fb6bf
      pod-template-generation: "1"
    name: ebs-csi-node-bfxw8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ebs-csi-node
      uid: 617429c9-e681-4131-86c2-e2af28f8c035
    resourceVersion: "7825085"
    uid: d172c0cb-94bf-44f7-b23b-65026c7dd2a6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-16-55.us-east-2.compute.internal
    containers:
    - args:
      - node
      - --endpoint=$(CSI_ENDPOINT)
      - --csi-mount-point-prefix=/var/lib/kubelet/plugins/kubernetes.io/csi/ebs.csi.aws.com/
      - --logging-format=text
      - --v=2
      env:
      - name: CSI_ENDPOINT
        value: unix:/csi/csi.sock
      - name: CSI_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/aws-ebs-csi-driver
            - pre-stop-hook
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: ebs-plugin
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r4n6
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 90
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        name: probe-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r4n6
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r4n6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 0
      runAsGroup: 0
      runAsNonRoot: false
      runAsUser: 0
    serviceAccount: ebs-csi-node-sa
    serviceAccountName: ebs-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - emptyDir: {}
      name: probe-dir
    - name: kube-api-access-5r4n6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://505a0656c139c5027c9de1293b8d2ef94111ddcbc022baf374bda39c7785e758
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver@sha256:f3221bb078b3a2d5bab281aeae6ef663c967953bd2badffb4e9859df174a18af
      lastState: {}
      name: ebs-plugin
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:10Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r4n6
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://1aa00b38728552729b942cd0d6eb83d03d9cd29430aae93eacf475d15f1131c1
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe@sha256:4893b2cc0157e092833512e36fbd8987682a32dff02a1ec2ecd9e3604c0be163
      lastState: {}
      name: liveness-probe
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:11Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r4n6
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://1b8efe9b76bc4b22aaa6a87f436ef4668936d373880ab13b7c6acfd7810a4a94
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar@sha256:d6826436945095d8b61a9c01d3c5aeeb40ac2e259b119ead4f31fb516919c6f5
      lastState: {}
      name: node-driver-registrar
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:11Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        name: probe-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r4n6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.17.83
    podIPs:
    - ip: 10.64.17.83
    qosClass: Burstable
    startTime: "2025-09-19T04:01:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:16:14Z"
    generateName: ebs-csi-node-
    generation: 1
    labels:
      app: ebs-csi-node
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
      controller-revision-hash: 664f6fb6bf
      pod-template-generation: "1"
    name: ebs-csi-node-hxm4s
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ebs-csi-node
      uid: 617429c9-e681-4131-86c2-e2af28f8c035
    resourceVersion: "7826084"
    uid: 9f77076d-9677-42d5-9caf-b43e52b9f6bd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-22-126.us-east-2.compute.internal
    containers:
    - args:
      - node
      - --endpoint=$(CSI_ENDPOINT)
      - --csi-mount-point-prefix=/var/lib/kubelet/plugins/kubernetes.io/csi/ebs.csi.aws.com/
      - --logging-format=text
      - --v=2
      env:
      - name: CSI_ENDPOINT
        value: unix:/csi/csi.sock
      - name: CSI_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/aws-ebs-csi-driver
            - pre-stop-hook
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: ebs-plugin
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zk84j
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 90
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        name: probe-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zk84j
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zk84j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 0
      runAsGroup: 0
      runAsNonRoot: false
      runAsUser: 0
    serviceAccount: ebs-csi-node-sa
    serviceAccountName: ebs-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - emptyDir: {}
      name: probe-dir
    - name: kube-api-access-zk84j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:16:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:16:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:16:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:16:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:16:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://3bdcd5206aaf1a2633262f0831404a457540320b75c5d7f2b68268bc3afa63af
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver@sha256:f3221bb078b3a2d5bab281aeae6ef663c967953bd2badffb4e9859df174a18af
      lastState: {}
      name: ebs-plugin
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:16:35Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zk84j
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://7d7cc683941a798344ecdae007d0c46c30018fcfbf71cf2f10225cb68a4500ad
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe@sha256:4893b2cc0157e092833512e36fbd8987682a32dff02a1ec2ecd9e3604c0be163
      lastState: {}
      name: liveness-probe
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:16:37Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zk84j
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://7b4f65cb8eae429fd92ab89519391e39e31c253b0035e213fc75defa489712c7
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar@sha256:d6826436945095d8b61a9c01d3c5aeeb40ac2e259b119ead4f31fb516919c6f5
      lastState: {}
      name: node-driver-registrar
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:16:36Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        name: probe-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zk84j
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.23.63
    podIPs:
    - ip: 10.64.23.63
    qosClass: Burstable
    startTime: "2025-09-19T04:16:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:57:39Z"
    generateName: ebs-csi-node-
    generation: 1
    labels:
      app: ebs-csi-node
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
      controller-revision-hash: 664f6fb6bf
      pod-template-generation: "1"
    name: ebs-csi-node-vnpm5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ebs-csi-node
      uid: 617429c9-e681-4131-86c2-e2af28f8c035
    resourceVersion: "10036273"
    uid: 3776d3a8-389f-43fc-ad3c-3783f76c20d7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-23-88.us-east-2.compute.internal
    containers:
    - args:
      - node
      - --endpoint=$(CSI_ENDPOINT)
      - --csi-mount-point-prefix=/var/lib/kubelet/plugins/kubernetes.io/csi/ebs.csi.aws.com/
      - --logging-format=text
      - --v=2
      env:
      - name: CSI_ENDPOINT
        value: unix:/csi/csi.sock
      - name: CSI_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/aws-ebs-csi-driver
            - pre-stop-hook
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: ebs-plugin
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ptn2j
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 90
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        name: probe-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ptn2j
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ptn2j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 0
      runAsGroup: 0
      runAsNonRoot: false
      runAsUser: 0
    serviceAccount: ebs-csi-node-sa
    serviceAccountName: ebs-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - emptyDir: {}
      name: probe-dir
    - name: kube-api-access-ptn2j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:06:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://d0780852707478984bb33363aa4fd2220f5faee965cc249ac80b441dacb1e9f9
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver@sha256:f3221bb078b3a2d5bab281aeae6ef663c967953bd2badffb4e9859df174a18af
      lastState: {}
      name: ebs-plugin
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:06:54Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ptn2j
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://65c105ac21303e1ee7854e2eab2901fbfb8dc4527183cb058950c9159ebdfbda
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe@sha256:4893b2cc0157e092833512e36fbd8987682a32dff02a1ec2ecd9e3604c0be163
      lastState: {}
      name: liveness-probe
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:06:56Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ptn2j
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 40Mi
      containerID: containerd://a2624b9768931e38e2bbb6ec57b45f13d7445a4b3b53606c0c4dc68e3d5d2e93
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar@sha256:d6826436945095d8b61a9c01d3c5aeeb40ac2e259b119ead4f31fb516919c6f5
      lastState: {}
      name: node-driver-registrar
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:06:55Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/lib/kubelet/plugins/ebs.csi.aws.com/
        name: probe-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ptn2j
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.23.35
    podIPs:
    - ip: 10.64.23.35
    qosClass: Burstable
    startTime: "2025-09-23T18:57:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:28Z"
    generateName: eks-node-monitoring-agent-
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.4.0
      controller-revision-hash: 7f4d5cd45d
      pod-template-generation: "1"
    name: eks-node-monitoring-agent-9gqm2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: eks-node-monitoring-agent
      uid: cc01585a-fdc1-406e-b514-0e477216d541
    resourceVersion: "10227802"
    uid: ddda384a-70e4-4ddc-82d1-853fb2c46a59
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-16-55.us-east-2.compute.internal
    containers:
    - args:
      - --probe-address=:8002
      - --metrics-address=:8003
      env:
      - name: HOST_ROOT
        value: /host
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent:v1.4.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8002
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: eks-node-monitoring-agent
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wwpfw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: eks-node-monitoring-agent
    serviceAccountName: eks-node-monitoring-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - name: kube-api-access-wwpfw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T03:31:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-24T03:31:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 30Mi
      containerID: containerd://c20e6980e93178f8c6bab168f1cd44ffcb14aa978b55178d4e998b2966b93e8f
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent:v1.4.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent@sha256:1e6868782a167ba923e8d7135d44fb24c8ee4029229bfa7d9535c08a9c69db17
      lastState:
        terminated:
          containerID: containerd://b7c27b82db391318b9841dea0827aeac834ae4a08f76c95f7a91de21a2232823
          exitCode: 137
          finishedAt: "2025-09-24T03:31:37Z"
          reason: OOMKilled
          startedAt: "2025-09-19T04:01:33Z"
      name: eks-node-monitoring-agent
      ready: true
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 30Mi
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-09-24T03:31:38Z"
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wwpfw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.55
    podIPs:
    - ip: 10.64.16.55
    qosClass: Burstable
    startTime: "2025-09-19T04:01:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:57:38Z"
    generateName: eks-node-monitoring-agent-
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.4.0
      controller-revision-hash: 7f4d5cd45d
      pod-template-generation: "1"
    name: eks-node-monitoring-agent-nccd7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: eks-node-monitoring-agent
      uid: cc01585a-fdc1-406e-b514-0e477216d541
    resourceVersion: "10032116"
    uid: f96139d5-25c4-4856-be33-7fa454e589ba
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-23-88.us-east-2.compute.internal
    containers:
    - args:
      - --probe-address=:8002
      - --metrics-address=:8003
      env:
      - name: HOST_ROOT
        value: /host
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent:v1.4.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8002
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: eks-node-monitoring-agent
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8qggc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: eks-node-monitoring-agent
    serviceAccountName: eks-node-monitoring-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - name: kube-api-access-8qggc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 30Mi
      containerID: containerd://4485adec27b273d459f4be42e896ebee40585992b009e2cdc19d7e2149a1fb34
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent:v1.4.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent@sha256:1e6868782a167ba923e8d7135d44fb24c8ee4029229bfa7d9535c08a9c69db17
      lastState: {}
      name: eks-node-monitoring-agent
      ready: true
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:57:44Z"
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8qggc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.23.88
    podIPs:
    - ip: 10.64.23.88
    qosClass: Burstable
    startTime: "2025-09-23T18:57:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T03:57:45Z"
    generateName: eks-node-monitoring-agent-
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.4.0
      controller-revision-hash: 7f4d5cd45d
      pod-template-generation: "1"
    name: eks-node-monitoring-agent-p45lc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: eks-node-monitoring-agent
      uid: cc01585a-fdc1-406e-b514-0e477216d541
    resourceVersion: "9617368"
    uid: 81b76927-1c7b-4276-a4ec-8cda4debfdd0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-22-126.us-east-2.compute.internal
    containers:
    - args:
      - --probe-address=:8002
      - --metrics-address=:8003
      env:
      - name: HOST_ROOT
        value: /host
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent:v1.4.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8002
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: eks-node-monitoring-agent
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-98msw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: eks-node-monitoring-agent
    serviceAccountName: eks-node-monitoring-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - name: kube-api-access-98msw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T23:27:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-22T23:27:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 30Mi
      containerID: containerd://4268de461b4833cbb130ba214c052a60d9d06f0cd88bbf923810debe4b885b65
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent:v1.4.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent@sha256:1e6868782a167ba923e8d7135d44fb24c8ee4029229bfa7d9535c08a9c69db17
      lastState:
        terminated:
          containerID: containerd://c315715894141dfc2eadbd578eef1b561a1c3a645a3494e0ad208cab5cc7ea24
          exitCode: 137
          finishedAt: "2025-09-22T23:27:53Z"
          reason: OOMKilled
          startedAt: "2025-09-19T03:57:49Z"
      name: eks-node-monitoring-agent
      ready: true
      resources:
        limits:
          cpu: 250m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 30Mi
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-09-22T23:27:54Z"
      volumeMounts:
      - mountPath: /host
        name: host-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-98msw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.126
    podIPs:
    - ip: 10.64.22.126
    qosClass: Burstable
    startTime: "2025-09-19T03:57:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:57:39Z"
    generateName: kube-proxy-
    generation: 1
    labels:
      controller-revision-hash: 854d9c667c
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-2gp5r
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 340bec0b-f283-4ffe-9480-f4b4751bc845
    resourceVersion: "10032104"
    uid: ae297c5f-2b58-4570-9a52-e9b6f387cbea
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-23-88.us-east-2.compute.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ldsfq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-ldsfq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://bb50bbdf257d95ed29688bd836e4bfd6b3823d6f73149bc7e0c6f50f13188ecf
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy@sha256:c72783adb747a5f3222cb5b5c640b79b5df24d1922b15b94bb269bccf2a0880d
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:57:42Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ldsfq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.23.88
    podIPs:
    - ip: 10.64.23.88
    qosClass: Burstable
    startTime: "2025-09-23T18:57:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:28Z"
    generateName: kube-proxy-
    generation: 1
    labels:
      controller-revision-hash: 854d9c667c
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-nmtv4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 340bec0b-f283-4ffe-9480-f4b4751bc845
    resourceVersion: "7822402"
    uid: 8d4fd380-afa0-4115-aeab-d35601a2d2d4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-16-55.us-east-2.compute.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5dwhn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-5dwhn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:01:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://1018b7cafc79abab5ebb8a376569c3b89ff2d2303633e769a384798516c4df7e
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy@sha256:c72783adb747a5f3222cb5b5c640b79b5df24d1922b15b94bb269bccf2a0880d
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:01:32Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5dwhn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.55
    podIPs:
    - ip: 10.64.16.55
    qosClass: Burstable
    startTime: "2025-09-19T04:01:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T03:57:45Z"
    generateName: kube-proxy-
    generation: 1
    labels:
      controller-revision-hash: 854d9c667c
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-z24hx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 340bec0b-f283-4ffe-9480-f4b4751bc845
    resourceVersion: "7820925"
    uid: ee5409d3-0958-4727-bbb7-769d6946a320
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-22-126.us-east-2.compute.internal
    containers:
    - command:
      - kube-proxy
      - --v=2
      - --config=/var/lib/kube-proxy-config/config
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m58dn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kubeconfig
    - configMap:
        defaultMode: 420
        name: kube-proxy-config
      name: config
    - name: kube-api-access-m58dn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:49Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T03:57:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://d0052b18f3c50f05beb25981d2cadcbb5031e6cf6c7cf2bcb9061a8abaf4dba1
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy@sha256:c72783adb747a5f3222cb5b5c640b79b5df24d1922b15b94bb269bccf2a0880d
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T03:57:48Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kube-proxy/
        name: kubeconfig
      - mountPath: /var/lib/kube-proxy-config/
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m58dn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.126
    podIPs:
    - ip: 10.64.22.126
    qosClass: Burstable
    startTime: "2025-09-19T03:57:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:05Z"
    generateName: metrics-server-7954c754b-
    generation: 1
    labels:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/name: metrics-server
      pod-template-hash: 7954c754b
    name: metrics-server-7954c754b-44rrm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7954c754b
      uid: cdc8c876-c5f2-45e5-a4a4-5e4793f7aaa2
    resourceVersion: "7825525"
    uid: 48e876a6-8578-45a5-b972-f5f0d78f2f65
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --secure-port=10251
      - --cert-dir=/tmp
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server:v0.8.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10251
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgnnm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/instance: metrics-server
          app.kubernetes.io/name: metrics-server
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-qgnnm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 200Mi
      containerID: containerd://a2ee5306d46715383ca7fbc6aaeb5cece1832023d92edcc07c1952f86d8912ad
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server:v0.8.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server@sha256:91e70d0011fe2cde5c0888524931c55c12f898daec4fad139764901f4d145e65
      lastState: {}
      name: metrics-server
      ready: true
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:20Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgnnm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.18.15
    podIPs:
    - ip: 10.64.18.15
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:05Z"
    generateName: metrics-server-7954c754b-
    generation: 1
    labels:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/name: metrics-server
      pod-template-hash: 7954c754b
    name: metrics-server-7954c754b-vkhgg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-7954c754b
      uid: cdc8c876-c5f2-45e5-a4a4-5e4793f7aaa2
    resourceVersion: "7825531"
    uid: de1c82b3-a4a5-444d-a1d5-917355da9542
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --secure-port=10251
      - --cert-dir=/tmp
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server:v0.8.0-eksbuild.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10251
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnmqn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/instance: metrics-server
          app.kubernetes.io/name: metrics-server
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-jnmqn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 200Mi
      containerID: containerd://b5487f70eafdf7e9f2cac1a83bffc7841067e263ce96268dc7d1275cd90a79d8
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server:v0.8.0-eksbuild.2
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server@sha256:91e70d0011fe2cde5c0888524931c55c12f898daec4fad139764901f4d145e65
      lastState: {}
      name: metrics-server
      ready: true
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 100m
          memory: 200Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:20Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnmqn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.18.41
    podIPs:
    - ip: 10.64.18.41
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:06Z"
    generateName: snapshot-controller-75cc6b99db-
    generation: 1
    labels:
      app: snapshot-controller
      pod-template-hash: 75cc6b99db
    name: snapshot-controller-75cc6b99db-68xd8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: snapshot-controller-75cc6b99db
      uid: c55f44b7-5b31-452a-bde0-1a9d3269912c
    resourceVersion: "7825218"
    uid: 491e8909-b5f0-473c-9fcf-48b09831cfe1
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
              - auto
              - hybrid
          weight: 1
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --leader-election=true
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller:v8.3.0-eksbuild.1
      imagePullPolicy: IfNotPresent
      name: snapshot-controller
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpkfk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: snapshot-controller
    serviceAccountName: snapshot-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gpkfk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 40Mi
      containerID: containerd://e293f423354c694f7be263a899fbbfed5759dfd1b59a1142865445346d9aaf81
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller:v8.3.0-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller@sha256:4d385ce67dceca7241e8b051154c43b0f7b6550405913737b681bb0d22f1ef33
      lastState: {}
      name: snapshot-controller
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpkfk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.19.19
    podIPs:
    - ip: 10.64.19.19
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T04:01:06Z"
    generateName: snapshot-controller-75cc6b99db-
    generation: 1
    labels:
      app: snapshot-controller
      pod-template-hash: 75cc6b99db
    name: snapshot-controller-75cc6b99db-df27r
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: snapshot-controller-75cc6b99db
      uid: c55f44b7-5b31-452a-bde0-1a9d3269912c
    resourceVersion: "7825209"
    uid: 09ae2b9a-b51c-4bac-8afd-5cb7c4f578ad
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
              - fargate
              - auto
              - hybrid
          weight: 1
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - snapshot-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --leader-election=true
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller:v8.3.0-eksbuild.1
      imagePullPolicy: IfNotPresent
      name: snapshot-controller
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s4h75
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: snapshot-controller
    serviceAccountName: snapshot-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-s4h75
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T04:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 40Mi
      containerID: containerd://fa470b43a97a48da82392f8056845fa079084c6f628a612d350a42334bb1f4ff
      image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller:v8.3.0-eksbuild.1
      imageID: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller@sha256:4d385ce67dceca7241e8b051154c43b0f7b6550405913737b681bb0d22f1ef33
      lastState: {}
      name: snapshot-controller
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 40Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T04:15:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s4h75
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.18.57
    podIPs:
    - ip: 10.64.18.57
    qosClass: Burstable
    startTime: "2025-09-19T04:15:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
      checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
      checksum/secret: fb04cde2bf3f497cd0599860d82e95106311c4e667bf85e8e83eefb98134c397
      kubectl.kubernetes.io/default-container: grafana
    creationTimestamp: "2025-09-19T21:27:56Z"
    generateName: grafana-749d597bc4-
    generation: 1
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      pod-template-hash: 749d597bc4
    name: grafana-749d597bc4-68nq5
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: grafana-749d597bc4
      uid: 3e7019b3-86cf-4772-acbd-06d43bc0fc48
    resourceVersion: "8167233"
    uid: b305eb29-2cdb-4a16-973d-fe70062e47e4
  spec:
    automountServiceAccountToken: true
    containers:
    - env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: GF_SECURITY_ADMIN_USER
        valueFrom:
          secretKeyRef:
            key: admin-user
            name: grafana
      - name: GF_SECURITY_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: admin-password
            name: grafana
      - name: GF_PATHS_DATA
        value: /var/lib/grafana/
      - name: GF_PATHS_LOGS
        value: /var/log/grafana
      - name: GF_PATHS_PLUGINS
        value: /var/lib/grafana/plugins
      - name: GF_PATHS_PROVISIONING
        value: /etc/grafana/provisioning
      envFrom:
      - secretRef:
          name: grafana-env-46f8b28mk5
      - configMapRef:
          name: grafana-env-k6cb5ffkht
          optional: false
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: grafana
      ports:
      - containerPort: 3000
        name: grafana
        protocol: TCP
      - containerPort: 9094
        name: gossip-tcp
        protocol: TCP
      - containerPort: 9094
        name: gossip-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
        subPath: grafana.ini
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4gdmq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - chown
      - -R
      - 472:472
      - /var/lib/grafana
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
      imagePullPolicy: IfNotPresent
      name: init-chown-data
      resources: {}
      securityContext:
        capabilities:
          add:
          - CHOWN
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4gdmq
        readOnly: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 472
      runAsGroup: 472
      runAsNonRoot: true
      runAsUser: 472
    serviceAccount: grafana
    serviceAccountName: grafana
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: grafana
      name: config
    - name: storage
      persistentVolumeClaim:
        claimName: grafana
    - name: kube-api-access-4gdmq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:28:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:28:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:28:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:28:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:27:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 200m
        memory: 256Mi
      containerID: containerd://4c548225bdc3443d72fca02b15a95b9264190140fc512d102247b3d5d9eb841b
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana@sha256:b8121de93047fd77c77de806bae9706e7d60de21c3bd5381a5db0167f94c6a48
      lastState: {}
      name: grafana
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T21:28:07Z"
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4gdmq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    initContainerStatuses:
    - containerID: containerd://ffb88de6a942fc31712579295c1a20ab4b5894d056a5a6548ade594a196db6b5
      image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
      imageID: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana@sha256:b8121de93047fd77c77de806bae9706e7d60de21c3bd5381a5db0167f94c6a48
      lastState: {}
      name: init-chown-data
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ffb88de6a942fc31712579295c1a20ab4b5894d056a5a6548ade594a196db6b5
          exitCode: 0
          finishedAt: "2025-09-19T21:28:06Z"
          reason: Completed
          startedAt: "2025-09-19T21:28:06Z"
      volumeMounts:
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4gdmq
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.64.20.64
    podIPs:
    - ip: 10.64.20.64
    qosClass: Burstable
    startTime: "2025-09-19T21:27:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
      checksum/sc-dashboard-provider-config: 89ec8c9c059a6a61286174130a15d183be69b7a486acc8437afbaf5d790a0ddd
      checksum/secret: 198af27b92832f7bd2144d122a318809af6c7290eae061236e639e66373b235e
      kubectl.kubernetes.io/default-container: grafana
    creationTimestamp: "2025-09-23T18:58:19Z"
    generateName: victoria-metrics-grafana-5454674d9b-
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 12.0.2
      helm.sh/chart: grafana-9.2.10
      pod-template-hash: 5454674d9b
    name: victoria-metrics-grafana-5454674d9b-kpt7d
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: victoria-metrics-grafana-5454674d9b
      uid: 36ac5788-9ae9-430f-9321-4e70e1e70a17
    resourceVersion: "10032909"
    uid: b04c6d0d-f106-4051-9217-a0e3e5c1cebf
  spec:
    automountServiceAccountToken: true
    containers:
    - env:
      - name: METHOD
        value: WATCH
      - name: LABEL
        value: grafana_dashboard
      - name: FOLDER
        value: /var/lib/grafana/dashboards/default
      - name: RESOURCE
        value: both
      - name: REQ_USERNAME
        valueFrom:
          secretKeyRef:
            key: admin-user
            name: victoria-metrics-grafana
      - name: REQ_PASSWORD
        valueFrom:
          secretKeyRef:
            key: admin-password
            name: victoria-metrics-grafana
      - name: REQ_URL
        value: http://localhost:3000/api/admin/provisioning/dashboards/reload
      - name: REQ_METHOD
        value: POST
      image: quay.io/kiwigrid/k8s-sidecar:1.30.3
      imagePullPolicy: IfNotPresent
      name: grafana-sc-dashboard
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/grafana/dashboards
        name: sc-dashboard-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lck4
        readOnly: true
    - env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: GF_SECURITY_ADMIN_USER
        valueFrom:
          secretKeyRef:
            key: admin-user
            name: victoria-metrics-grafana
      - name: GF_SECURITY_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: admin-password
            name: victoria-metrics-grafana
      - name: GF_PATHS_DATA
        value: /var/lib/grafana/
      - name: GF_PATHS_LOGS
        value: /var/log/grafana
      - name: GF_PATHS_PLUGINS
        value: /var/lib/grafana/plugins
      - name: GF_PATHS_PROVISIONING
        value: /etc/grafana/provisioning
      image: docker.io/grafana/grafana:12.0.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: grafana
      ports:
      - containerPort: 3000
        name: grafana
        protocol: TCP
      - containerPort: 9094
        name: gossip-tcp
        protocol: TCP
      - containerPort: 9094
        name: gossip-udp
        protocol: UDP
      - containerPort: 6060
        name: profiling
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
        subPath: grafana.ini
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/lib/grafana/dashboards
        name: sc-dashboard-volume
      - mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
        name: sc-dashboard-provider
        subPath: provider.yaml
      - mountPath: /etc/grafana/provisioning/datasources
        name: sc-datasources-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lck4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - env:
      - name: METHOD
        value: LIST
      - name: LABEL
        value: grafana_datasource
      - name: FOLDER
        value: /etc/grafana/provisioning/datasources
      - name: RESOURCE
        value: both
      image: quay.io/kiwigrid/k8s-sidecar:1.30.3
      imagePullPolicy: IfNotPresent
      name: grafana-init-sc-datasources
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/grafana/provisioning/datasources
        name: sc-datasources-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lck4
        readOnly: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 472
      runAsGroup: 472
      runAsNonRoot: true
      runAsUser: 472
    serviceAccount: victoria-metrics-grafana
    serviceAccountName: victoria-metrics-grafana
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: victoria-metrics-grafana
      name: config
    - emptyDir: {}
      name: storage
    - emptyDir: {}
      name: sc-dashboard-volume
    - configMap:
        defaultMode: 420
        name: victoria-metrics-grafana-config-dashboards
      name: sc-dashboard-provider
    - emptyDir: {}
      name: sc-datasources-volume
    - name: kube-api-access-8lck4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bb4e7842ef26ad7b3c8f56b8ae94f46ab52c5dd6800585a0aef4723e43a83668
      image: docker.io/grafana/grafana:12.0.2
      imageID: docker.io/grafana/grafana@sha256:b5b59bfc7561634c2d7b136c4543d702ebcc94a3da477f21ff26f89ffd4214fa
      lastState: {}
      name: grafana
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:28Z"
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/lib/grafana/dashboards
        name: sc-dashboard-volume
      - mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
        name: sc-dashboard-provider
      - mountPath: /etc/grafana/provisioning/datasources
        name: sc-datasources-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lck4
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://20f80d4b979e7f954288c7abbb1361885cc2a50ea582289579e717bc14e41fda
      image: quay.io/kiwigrid/k8s-sidecar:1.30.3
      imageID: quay.io/kiwigrid/k8s-sidecar@sha256:49dcce269568b1645b0050f296da787c99119647965229919a136614123f0627
      lastState: {}
      name: grafana-sc-dashboard
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:28Z"
      volumeMounts:
      - mountPath: /var/lib/grafana/dashboards
        name: sc-dashboard-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lck4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    initContainerStatuses:
    - containerID: containerd://b72d48a09ee4ae197b7a57bd4a9a49d26f391872e9df176b19f3e240955819aa
      image: quay.io/kiwigrid/k8s-sidecar:1.30.3
      imageID: quay.io/kiwigrid/k8s-sidecar@sha256:49dcce269568b1645b0050f296da787c99119647965229919a136614123f0627
      lastState: {}
      name: grafana-init-sc-datasources
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b72d48a09ee4ae197b7a57bd4a9a49d26f391872e9df176b19f3e240955819aa
          exitCode: 0
          finishedAt: "2025-09-23T18:58:24Z"
          reason: Completed
          startedAt: "2025-09-23T18:58:21Z"
      volumeMounts:
      - mountPath: /etc/grafana/provisioning/datasources
        name: sc-datasources-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8lck4
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.64.22.18
    podIPs:
    - ip: 10.64.22.18
    qosClass: BestEffort
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: victoria-metrics-kube-state-metrics-6bff77c8c9-
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-6.0.0
      pod-template-hash: 6bff77c8c9
    name: victoria-metrics-kube-state-metrics-6bff77c8c9-gjfkc
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: victoria-metrics-kube-state-metrics-6bff77c8c9
      uid: c5228166-b5c8-4297-a654-7a5c14c88f94
    resourceVersion: "10032856"
    uid: 1bd5e38d-98ed-47f5-ac51-1605a472694d
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-58qbs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: victoria-metrics-kube-state-metrics
    serviceAccountName: victoria-metrics-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-58qbs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://50e121ffd0faf511202e04b7e8698ea9d331b52747d7f7bbdc70824e7311d7a6
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb
      lastState: {}
      name: kube-state-metrics
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-58qbs
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.18.48
    podIPs:
    - ip: 10.64.18.48
    qosClass: BestEffort
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2025-09-23T17:38:29Z"
    generateName: victoria-metrics-prometheus-node-exporter-
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.1
      controller-revision-hash: cb968458
      helm.sh/chart: prometheus-node-exporter-4.47.3
      pod-template-generation: "1"
    name: victoria-metrics-prometheus-node-exporter-7z6kt
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: victoria-metrics-prometheus-node-exporter
      uid: 0720c48b-7001-47ae-aadc-58278352e969
    resourceVersion: "10001535"
    uid: 091b965a-7bae-4de5-9c5d-074d7b664ac5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-16-55.us-east-2.compute.internal
    automountServiceAccountToken: false
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --web.listen-address=[$(HOST_IP)]:9100
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|erofs|sysfs|tracefs)$
      env:
      - name: HOST_IP
        value: 0.0.0.0
      image: quay.io/prometheus/node-exporter:v1.9.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: victoria-metrics-prometheus-node-exporter
    serviceAccountName: victoria-metrics-prometheus-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://192b545728fe18bb05dce1488dcccafd7ccf31f3c818592142b3d4477be4fd2e
      image: quay.io/prometheus/node-exporter:v1.9.1
      imageID: quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a
      lastState: {}
      name: node-exporter
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T17:38:30Z"
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/sys
        name: sys
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/root
        name: root
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.55
    podIPs:
    - ip: 10.64.16.55
    qosClass: BestEffort
    startTime: "2025-09-23T17:38:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2025-09-23T17:38:29Z"
    generateName: victoria-metrics-prometheus-node-exporter-
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.1
      controller-revision-hash: cb968458
      helm.sh/chart: prometheus-node-exporter-4.47.3
      pod-template-generation: "1"
    name: victoria-metrics-prometheus-node-exporter-bmsxh
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: victoria-metrics-prometheus-node-exporter
      uid: 0720c48b-7001-47ae-aadc-58278352e969
    resourceVersion: "10001529"
    uid: 5041a3cc-b3cb-4072-a5d6-23e219aa1a7d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-22-126.us-east-2.compute.internal
    automountServiceAccountToken: false
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --web.listen-address=[$(HOST_IP)]:9100
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|erofs|sysfs|tracefs)$
      env:
      - name: HOST_IP
        value: 0.0.0.0
      image: quay.io/prometheus/node-exporter:v1.9.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: victoria-metrics-prometheus-node-exporter
    serviceAccountName: victoria-metrics-prometheus-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8287e9f682cf198bc6e583584b05656576c37333a1463997318fb2d8ce792234
      image: quay.io/prometheus/node-exporter:v1.9.1
      imageID: quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a
      lastState: {}
      name: node-exporter
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T17:38:30Z"
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/sys
        name: sys
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/root
        name: root
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.126
    podIPs:
    - ip: 10.64.22.126
    qosClass: BestEffort
    startTime: "2025-09-23T17:38:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2025-09-23T18:57:39Z"
    generateName: victoria-metrics-prometheus-node-exporter-
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.1
      controller-revision-hash: cb968458
      helm.sh/chart: prometheus-node-exporter-4.47.3
      pod-template-generation: "1"
    name: victoria-metrics-prometheus-node-exporter-lld46
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: victoria-metrics-prometheus-node-exporter
      uid: 0720c48b-7001-47ae-aadc-58278352e969
    resourceVersion: "10032122"
    uid: 667d426d-1905-486c-abdd-14b37a185f8b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-23-88.us-east-2.compute.internal
    automountServiceAccountToken: false
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --web.listen-address=[$(HOST_IP)]:9100
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|erofs|sysfs|tracefs)$
      env:
      - name: HOST_IP
        value: 0.0.0.0
      image: quay.io/prometheus/node-exporter:v1.9.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: victoria-metrics-prometheus-node-exporter
    serviceAccountName: victoria-metrics-prometheus-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:57:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://73723087ade0cfb8f12aeef0ba0c729e715d40aaa18d79bcc34f3b2cc37f060d
      image: quay.io/prometheus/node-exporter:v1.9.1
      imageID: quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a
      lastState: {}
      name: node-exporter
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:57:41Z"
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/sys
        name: sys
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/root
        name: root
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.23.88
    podIPs:
    - ip: 10.64.23.88
    qosClass: BestEffort
    startTime: "2025-09-23T18:57:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: victoria-metrics-victoria-metrics-operator-689b7d85f-
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-metrics-operator
      pod-template-hash: 689b7d85f
    name: victoria-metrics-victoria-metrics-operator-689b7d85f-mctkw
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: victoria-metrics-victoria-metrics-operator-689b7d85f
      uid: dfd45432-911d-4d02-ac73-8cbbd281e0a0
    resourceVersion: "10032889"
    uid: cab8cab2-07de-4f44-bf98-0afca4fded40
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --zap-log-level=info
      - --leader-elect
      - --health-probe-bind-address=:8081
      - --webhook.enable=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_NAME
        value: victoria-metrics-operator
      - name: VM_ENABLEDPROMETHEUSCONVERTEROWNERREFERENCES
        value: "false"
      image: victoriametrics/operator:v0.62.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 15
        successThreshold: 1
        tcpSocket:
          port: probe
        timeoutSeconds: 5
      name: operator
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 8081
        name: probe
        protocol: TCP
      - containerPort: 9443
        name: webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: probe
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rf2sf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: victoria-metrics-victoria-metrics-operator
    serviceAccountName: victoria-metrics-victoria-metrics-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: victoria-metrics-victoria-metrics-operator-validation
    - name: kube-api-access-rf2sf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://316c2594f2501efc1de8f2a96782cfb7023dd55bb6610e5072e95f4420a61dce
      image: docker.io/victoriametrics/operator:v0.62.0
      imageID: docker.io/victoriametrics/operator@sha256:c4c051f419f7dcbaecd1c939edc1b0c5232d31d435febd268cdd602eb224f695
      lastState: {}
      name: operator
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rf2sf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.226
    podIPs:
    - ip: 10.64.16.226
    qosClass: BestEffort
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T17:37:21Z"
    generateName: victoria-metrics-victoria-metrics-operator-cleanup-hook-
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-metrics-operator
      app.kubernetes.io/version: v0.62.0
      batch.kubernetes.io/controller-uid: bd1c7b1e-9fb9-4ef1-8686-22f35efdd492
      batch.kubernetes.io/job-name: victoria-metrics-victoria-metrics-operator-cleanup-hook
      controller-uid: bd1c7b1e-9fb9-4ef1-8686-22f35efdd492
      helm.sh/chart: victoria-metrics-operator-0.52.1
      job-name: victoria-metrics-victoria-metrics-operator-cleanup-hook
    name: victoria-metrics-victoria-metrics-operator-cleanup-hook-lswgk
    namespace: monitoring
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: victoria-metrics-victoria-metrics-operator-cleanup-hook
      uid: bd1c7b1e-9fb9-4ef1-8686-22f35efdd492
    resourceVersion: "10000866"
    uid: 43b75276-5507-4b1b-ab81-1589a9a351ad
  spec:
    containers:
    - args:
      - delete
      - vlagent,vlcluster,vlogs,vlsingle,vmagent,vmalert,vmalertmanager,vmalertmanagerconfig,vmanomaly,vmauth,vmcluster,vmnodescrape,vmpodscrape,vmprobe,vmrule,vmservicescrape,vmsingle,vmstaticscrape,vmuser
      - --all
      - --ignore-not-found=true
      image: rancher/kubectl:v1.33.3
      imagePullPolicy: IfNotPresent
      name: kubectl
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 56Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8v4w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: victoria-metrics-victoria-metrics-operator-cleanup-hook
    serviceAccountName: victoria-metrics-victoria-metrics-operator-cleanup-hook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-c8v4w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:37:33Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:37:21Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:37:32Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:37:32Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:37:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 56Mi
      containerID: containerd://3b8a9c2097dd9e3a77c5e3847a69a5189600ce4db06daf9fed31c9124a60aa30
      image: docker.io/rancher/kubectl:v1.33.3
      imageID: docker.io/rancher/kubectl@sha256:26d09fcee6eb9a14b81c95e52dd90964a0a24263abb075f58651d2ac62651b59
      lastState: {}
      name: kubectl
      ready: false
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 56Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3b8a9c2097dd9e3a77c5e3847a69a5189600ce4db06daf9fed31c9124a60aa30
          exitCode: 0
          finishedAt: "2025-09-23T17:37:31Z"
          reason: Completed
          startedAt: "2025-09-23T17:37:22Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8v4w
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Succeeded
    podIP: 10.64.18.48
    podIPs:
    - ip: 10.64.18.48
    qosClass: Burstable
    startTime: "2025-09-23T17:37:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T21:37:12Z"
    generateName: vlogs-server-
    generation: 1
    labels:
      app: server
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-logs-single
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: vlogs-server-f67cc647
      statefulset.kubernetes.io/pod-name: vlogs-server-0
    name: vlogs-server-0
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: vlogs-server
      uid: 2d965a92-bc40-47de-80a4-4a3de4f42b53
    resourceVersion: "8170321"
    uid: 29a3ed81-2304-42ef-9915-d0665bd67152
  spec:
    containers:
    - args:
      - --envflag.enable
      - --envflag.prefix=VM_
      - --http.shutdownDelay=15s
      - --httpListenAddr=:9428
      - --loggerFormat=json
      - --retentionPeriod=1
      - --storageDataPath=/storage
      image: victoriametrics/victoria-logs:v1.33.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        tcpSocket:
          port: http
        timeoutSeconds: 5
      name: vlogs
      ports:
      - containerPort: 9428
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: http
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 51Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /storage
        name: server-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4nwbn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: vlogs-server-0
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: default
    serviceAccountName: default
    subdomain: vlogs-server
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: server-volume
      persistentVolumeClaim:
        claimName: server-volume-vlogs-server-0
    - name: kube-api-access-4nwbn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 500m
        memory: 51Mi
      containerID: containerd://c76f659cda98212a9953065b8f5ce80fd10c0b3fddfb010b2187fce541020ccb
      image: docker.io/victoriametrics/victoria-logs:v1.33.0
      imageID: docker.io/victoriametrics/victoria-logs@sha256:23d5987d3e14817bfa40a9b80b4fd44d93531360333b7136dfbdc23f556fb8f9
      lastState: {}
      name: vlogs
      ready: true
      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 51Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T21:37:18Z"
      volumeMounts:
      - mountPath: /storage
        name: server-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4nwbn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.22.158
    podIPs:
    - ip: 10.64.22.158
    qosClass: Burstable
    startTime: "2025-09-19T21:37:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T21:37:12Z"
    generateName: vlogs-vector-
    generation: 1
    labels:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/name: vector
      controller-revision-hash: 56c6765ffc
      pod-template-generation: "1"
      vector.dev/exclude: "true"
    name: vlogs-vector-2z9nr
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: vlogs-vector
      uid: 94ff67f0-8645-47b0-bea0-5be72463fa3a
    resourceVersion: "8170240"
    uid: 00b2e9d5-3665-4973-b29d-cdfaa2af10b5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-22-126.us-east-2.compute.internal
    containers:
    - args:
      - -w
      - --config-dir
      - /etc/vector/
      env:
      - name: VECTOR_LOG
        value: info
      - name: VECTOR_SELF_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: VECTOR_SELF_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: VECTOR_SELF_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: PROCFS_ROOT
        value: /host/proc
      - name: SYSFS_ROOT
        value: /host/sys
      image: timberio/vector:0.44.0-distroless-libc
      imagePullPolicy: IfNotPresent
      name: vector
      ports:
      - containerPort: 9090
        name: prom-exporter
        protocol: TCP
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /vector-data-dir
        name: data
      - mountPath: /etc/vector/
        name: config
        readOnly: true
      - mountPath: /var/log/
        name: var-log
        readOnly: true
      - mountPath: /var/lib
        name: var-lib
        readOnly: true
      - mountPath: /host/proc
        name: procfs
        readOnly: true
      - mountPath: /host/sys
        name: sysfs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cfd7z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vlogs-vector
    serviceAccountName: vlogs-vector
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: config
      projected:
        defaultMode: 420
        sources:
        - configMap:
            name: vl-config
    - hostPath:
        path: /var/lib/vector
        type: ""
      name: data
    - hostPath:
        path: /var/log/
        type: ""
      name: var-log
    - hostPath:
        path: /var/lib/
        type: ""
      name: var-lib
    - hostPath:
        path: /proc
        type: ""
      name: procfs
    - hostPath:
        path: /sys
        type: ""
      name: sysfs
    - name: kube-api-access-cfd7z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 200m
        memory: 256Mi
      containerID: containerd://d972fe0ef85feed94a38e69f4788c6a94657ff662c9ca1df3f539500fd67876b
      image: docker.io/timberio/vector:0.44.0-distroless-libc
      imageID: docker.io/timberio/vector@sha256:ae164a9812e1e3d012bf5cb80c84116eb292ba78824ae568b7828f89dd90dc7f
      lastState: {}
      name: vector
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T21:37:13Z"
      volumeMounts:
      - mountPath: /vector-data-dir
        name: data
      - mountPath: /etc/vector/
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/
        name: var-log
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib
        name: var-lib
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/proc
        name: procfs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/sys
        name: sysfs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cfd7z
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.20.180
    podIPs:
    - ip: 10.64.20.180
    qosClass: Burstable
    startTime: "2025-09-19T21:37:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-19T21:37:12Z"
    generateName: vlogs-vector-
    generation: 1
    labels:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/name: vector
      controller-revision-hash: 56c6765ffc
      pod-template-generation: "1"
      vector.dev/exclude: "true"
    name: vlogs-vector-bl5v9
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: vlogs-vector
      uid: 94ff67f0-8645-47b0-bea0-5be72463fa3a
    resourceVersion: "8170230"
    uid: fe4cda8d-b358-4e33-bd96-783c285795cd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-16-55.us-east-2.compute.internal
    containers:
    - args:
      - -w
      - --config-dir
      - /etc/vector/
      env:
      - name: VECTOR_LOG
        value: info
      - name: VECTOR_SELF_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: VECTOR_SELF_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: VECTOR_SELF_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: PROCFS_ROOT
        value: /host/proc
      - name: SYSFS_ROOT
        value: /host/sys
      image: timberio/vector:0.44.0-distroless-libc
      imagePullPolicy: IfNotPresent
      name: vector
      ports:
      - containerPort: 9090
        name: prom-exporter
        protocol: TCP
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /vector-data-dir
        name: data
      - mountPath: /etc/vector/
        name: config
        readOnly: true
      - mountPath: /var/log/
        name: var-log
        readOnly: true
      - mountPath: /var/lib
        name: var-lib
        readOnly: true
      - mountPath: /host/proc
        name: procfs
        readOnly: true
      - mountPath: /host/sys
        name: sysfs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6k9q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vlogs-vector
    serviceAccountName: vlogs-vector
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: config
      projected:
        defaultMode: 420
        sources:
        - configMap:
            name: vl-config
    - hostPath:
        path: /var/lib/vector
        type: ""
      name: data
    - hostPath:
        path: /var/log/
        type: ""
      name: var-log
    - hostPath:
        path: /var/lib/
        type: ""
      name: var-lib
    - hostPath:
        path: /proc
        type: ""
      name: procfs
    - hostPath:
        path: /sys
        type: ""
      name: sysfs
    - name: kube-api-access-l6k9q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-19T21:37:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 200m
        memory: 256Mi
      containerID: containerd://6f9932264d861c77a51d06ce5003cea9b94c38ca6bd273ef6b44251a288c79a6
      image: docker.io/timberio/vector:0.44.0-distroless-libc
      imageID: docker.io/timberio/vector@sha256:ae164a9812e1e3d012bf5cb80c84116eb292ba78824ae568b7828f89dd90dc7f
      lastState: {}
      name: vector
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-19T21:37:13Z"
      volumeMounts:
      - mountPath: /vector-data-dir
        name: data
      - mountPath: /etc/vector/
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/
        name: var-log
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib
        name: var-lib
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/proc
        name: procfs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/sys
        name: sysfs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6k9q
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.19.178
    podIPs:
    - ip: 10.64.19.178
    qosClass: Burstable
    startTime: "2025-09-19T21:37:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T19:07:01Z"
    generateName: vlogs-vector-
    generation: 1
    labels:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/name: vector
      controller-revision-hash: 56c6765ffc
      pod-template-generation: "1"
      vector.dev/exclude: "true"
    name: vlogs-vector-vrf8t
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: vlogs-vector
      uid: 94ff67f0-8645-47b0-bea0-5be72463fa3a
    resourceVersion: "10036290"
    uid: 6d7c6f3a-7c95-486a-97d0-a05129882cb1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-64-23-88.us-east-2.compute.internal
    containers:
    - args:
      - -w
      - --config-dir
      - /etc/vector/
      env:
      - name: VECTOR_LOG
        value: info
      - name: VECTOR_SELF_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: VECTOR_SELF_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: VECTOR_SELF_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: PROCFS_ROOT
        value: /host/proc
      - name: SYSFS_ROOT
        value: /host/sys
      image: timberio/vector:0.44.0-distroless-libc
      imagePullPolicy: IfNotPresent
      name: vector
      ports:
      - containerPort: 9090
        name: prom-exporter
        protocol: TCP
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /vector-data-dir
        name: data
      - mountPath: /etc/vector/
        name: config
        readOnly: true
      - mountPath: /var/log/
        name: var-log
        readOnly: true
      - mountPath: /var/lib
        name: var-lib
        readOnly: true
      - mountPath: /host/proc
        name: procfs
        readOnly: true
      - mountPath: /host/sys
        name: sysfs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r8rkt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-23-88.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vlogs-vector
    serviceAccountName: vlogs-vector
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: config
      projected:
        defaultMode: 420
        sources:
        - configMap:
            name: vl-config
    - hostPath:
        path: /var/lib/vector
        type: ""
      name: data
    - hostPath:
        path: /var/log/
        type: ""
      name: var-log
    - hostPath:
        path: /var/lib/
        type: ""
      name: var-lib
    - hostPath:
        path: /proc
        type: ""
      name: procfs
    - hostPath:
        path: /sys
        type: ""
      name: sysfs
    - name: kube-api-access-r8rkt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:07:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 200m
        memory: 256Mi
      containerID: containerd://6b0fc3dad4f0c5b71669bf7e3dcf85cc007563bb9acb293b34a7899d8d7ac934
      image: docker.io/timberio/vector:0.44.0-distroless-libc
      imageID: docker.io/timberio/vector@sha256:ae164a9812e1e3d012bf5cb80c84116eb292ba78824ae568b7828f89dd90dc7f
      lastState: {}
      name: vector
      ready: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:07:03Z"
      volumeMounts:
      - mountPath: /vector-data-dir
        name: data
      - mountPath: /etc/vector/
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/
        name: var-log
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib
        name: var-lib
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/proc
        name: procfs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/sys
        name: sysfs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r8rkt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.23.88
    hostIPs:
    - ip: 10.64.23.88
    phase: Running
    podIP: 10.64.20.194
    podIPs:
    - ip: 10.64.20.194
    qosClass: Burstable
    startTime: "2025-09-23T19:07:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T17:38:47Z"
    generateName: vmagent-vm-6d756f7f89-
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmagent
      managed-by: vm-operator
      pod-template-hash: 6d756f7f89
    name: vmagent-vm-6d756f7f89-6t2db
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: vmagent-vm-6d756f7f89
      uid: 090961ff-cab9-46df-8341-d6ffa7bbe8b4
    resourceVersion: "10001891"
    uid: 9e86c651-41ff-4239-aff3-e030cf09d41f
  spec:
    containers:
    - args:
      - --reload-url=http://localhost:8429/-/reload
      - --config-envsubst-file=/etc/vmagent/config_out/vmagent.env.yaml
      - --config-file=/etc/vmagent/config/vmagent.yaml.gz
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/vmagent/config_out
        name: config-out
      - mountPath: /etc/vmagent/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nclq
        readOnly: true
    - args:
      - -httpListenAddr=:8429
      - -promscrape.config=/etc/vmagent/config_out/vmagent.env.yaml
      - -promscrape.dropOriginalLabels=true
      - -promscrape.streamParse=true
      - -remoteWrite.maxDiskUsagePerURL=1073741824
      - -remoteWrite.tmpDataPath=/tmp/vmagent-remotewrite-data
      - -remoteWrite.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428/api/v1/write
      image: victoriametrics/vmagent:v1.125.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /health
          port: 8429
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      name: vmagent
      ports:
      - containerPort: 8429
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: /health
          port: 8429
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /tmp/vmagent-remotewrite-data
        name: persistent-queue-data
      - mountPath: /etc/vmagent/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/vmagent-tls/certs
        name: tls-assets
        readOnly: true
      - mountPath: /etc/vmagent/config
        name: config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nclq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - -c
      - gunzip -c /etc/vmagent/config/vmagent.yaml.gz > /etc/vmagent/config_out/vmagent.env.yaml
      command:
      - /bin/sh
      image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
      imagePullPolicy: IfNotPresent
      name: config-init
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/vmagent/config
        name: config
      - mountPath: /etc/vmagent/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nclq
        readOnly: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vmagent-vm
    serviceAccountName: vmagent-vm
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: persistent-queue-data
    - name: tls-assets
      secret:
        defaultMode: 420
        secretName: tls-assets-vmagent-vm
    - emptyDir: {}
      name: config-out
    - name: config
      secret:
        defaultMode: 420
        secretName: vmagent-vm
    - name: kube-api-access-6nclq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T17:38:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 25Mi
      containerID: containerd://533a27e87560f920ff1c673ad048f316229923db8b9f5d9dbb10d8b5ea1db807
      image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
      imageID: quay.io/prometheus-operator/prometheus-config-reloader@sha256:22558a49909bf31d75b6a340064c553598bfd66103626868daeb107fe171f124
      lastState: {}
      name: config-reloader
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T17:38:50Z"
      volumeMounts:
      - mountPath: /etc/vmagent/config_out
        name: config-out
      - mountPath: /etc/vmagent/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nclq
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 50m
        memory: 200Mi
      containerID: containerd://5e95923abf2cdec31a96a74944298c2cd35b57f83a551bd85335a16eef47dd36
      image: docker.io/victoriametrics/vmagent:v1.125.1
      imageID: docker.io/victoriametrics/vmagent@sha256:c762ebca033185c528838473a0ac6fa2b798f78e1e02d8f13a0e00d8a68299a3
      lastState: {}
      name: vmagent
      ready: true
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 200Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T17:38:50Z"
      volumeMounts:
      - mountPath: /tmp/vmagent-remotewrite-data
        name: persistent-queue-data
      - mountPath: /etc/vmagent/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/vmagent-tls/certs
        name: tls-assets
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/vmagent/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nclq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 25Mi
      containerID: containerd://4e00badfc200a882cbb133a29e0cc34c9d2a30e2af12b43f1ffe5319ff3890f2
      image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
      imageID: quay.io/prometheus-operator/prometheus-config-reloader@sha256:22558a49909bf31d75b6a340064c553598bfd66103626868daeb107fe171f124
      lastState: {}
      name: config-init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4e00badfc200a882cbb133a29e0cc34c9d2a30e2af12b43f1ffe5319ff3890f2
          exitCode: 0
          finishedAt: "2025-09-23T17:38:49Z"
          reason: Completed
          startedAt: "2025-09-23T17:38:49Z"
      volumeMounts:
      - mountPath: /etc/vmagent/config
        name: config
      - mountPath: /etc/vmagent/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6nclq
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.64.23.192
    podIPs:
    - ip: 10.64.23.192
    qosClass: Burstable
    startTime: "2025-09-23T17:38:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: vmalert-vm-df4f56c4c-
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmalert
      managed-by: vm-operator
      pod-template-hash: df4f56c4c
    name: vmalert-vm-df4f56c4c-pd629
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: vmalert-vm-df4f56c4c
      uid: 136e2488-3988-44ca-ad7a-4fe77b0f5d1a
    resourceVersion: "10032718"
    uid: 4d1c0174-d8a1-4314-8fb4-2df47d759c6f
  spec:
    containers:
    - args:
      - -datasource.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428
      - -evaluationInterval=20s
      - -external.alert.source=explore?left={"datasource":"VictoriaMetrics","queries":[{"expr":{{
        .Expr|jsonEscape|queryEscape }},"refId":"A"}],"range":{"from":"{{ .ActiveAt.UnixMilli
        }}","to":"now"}}
      - -external.url=http://grafana.domain.com
      - -http.pathPrefix=/
      - -httpListenAddr=:8080
      - -notifier.url=http://vmalertmanager-vm-0.vmalertmanager-vm.monitoring.svc.cluster.local.:9093
      - -remoteRead.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428
      - -remoteWrite.disablePathAppend=true
      - -remoteWrite.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428/api/v1/write
      - -rule="/etc/vmalert/config/vm-vm-rulefiles-0/*.yaml"
      image: victoriametrics/vmalert:v1.125.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      name: vmalert
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/vmalert/remote_secrets
        name: config
        readOnly: true
      - mountPath: /etc/vmalert-tls/certs
        name: tls-assets
        readOnly: true
      - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
        name: vm-vm-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mg54n
        readOnly: true
    - args:
      - -webhook-url=http://localhost:8080/-/reload
      - -volume-dir=/etc/vmalert/config/vm-vm-rulefiles-0
      image: jimmidyson/configmap-reload:v0.3.0
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
        name: vm-vm-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mg54n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-16-55.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vmalert-vm
    serviceAccountName: vmalert-vm
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config
      secret:
        defaultMode: 420
        secretName: vmalert-vm
    - name: tls-assets
      secret:
        defaultMode: 420
        secretName: tls-assets-vmalert-vm
    - configMap:
        defaultMode: 420
        name: vm-vm-rulefiles-0
      name: vm-vm-rulefiles-0
    - name: kube-api-access-mg54n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 25Mi
      containerID: containerd://cd64590f728f4d033b12b61a8379ebce5f1c6a54d79b5234acebd69a4c34ddd9
      image: docker.io/jimmidyson/configmap-reload:v0.3.0
      imageID: docker.io/jimmidyson/configmap-reload@sha256:d107c7a235c266273b1c3502a391fec374430e5625539403d0de797fa9c556a2
      lastState: {}
      name: config-reloader
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
        name: vm-vm-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mg54n
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 50m
        memory: 200Mi
      containerID: containerd://5812bc85a2a06728a6b10a6e03d83556b0193e23159833829b59f3410bcbb56d
      image: docker.io/victoriametrics/vmalert:v1.125.1
      imageID: docker.io/victoriametrics/vmalert@sha256:0b822f1af54707a42b55fc3dc0f64ffa76c19031eb4b3bfbca0acd554241c3fc
      lastState: {}
      name: vmalert
      ready: true
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 200Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:21Z"
      volumeMounts:
      - mountPath: /etc/vmalert/remote_secrets
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/vmalert-tls/certs
        name: tls-assets
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
        name: vm-vm-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mg54n
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.16.55
    hostIPs:
    - ip: 10.64.16.55
    phase: Running
    podIP: 10.64.16.195
    podIPs:
    - ip: 10.64.16.195
    qosClass: Burstable
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: vmalertmanager-vm-
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmalertmanager
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: vmalertmanager-vm-74fc667858
      managed-by: vm-operator
      statefulset.kubernetes.io/pod-name: vmalertmanager-vm-0
    name: vmalertmanager-vm-0
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: vmalertmanager-vm
      uid: f2e295c4-9d83-4b4c-8173-246fde0e302c
    resourceVersion: "10032755"
    uid: 88cd1aaf-962b-4506-8648-cf36ea98d31d
  spec:
    containers:
    - args:
      - --cluster.listen-address=
      - --cluster.peer=vmalertmanager-vm-0.vmalertmanager-vm:9094
      - --config.file=/etc/alertmanager/config/alertmanager.yaml
      - --data.retention=120h
      - --enable-feature=utf8-strict-mode
      - --storage.path=/alertmanager
      - --web.listen-address=:9093
      - --web.route-prefix=/
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: prom/alertmanager:v0.28.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /-/healthy
          port: web
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      name: alertmanager
      ports:
      - containerPort: 9093
        name: web
        protocol: TCP
      - containerPort: 9094
        name: mesh-tcp
        protocol: TCP
      - containerPort: 9094
        name: mesh-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: /-/healthy
          port: web
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 30m
          memory: 56Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /alertmanager
        name: vmalertmanager-vm-db
      - mountPath: /etc/alertmanager/tls_assets
        name: tls-assets
        readOnly: true
      - mountPath: /etc/vm/templates/vmalertmanager-vm-monzo-tpl
        name: templates-vmalertmanager-vm-monzo-tpl
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l4vdx
        readOnly: true
    - args:
      - -webhook-url=http://127.0.0.1:9093/-/reload
      - -volume-dir=/etc/alertmanager/config
      - -volume-dir=/etc/alertmanager/tls_assets
      - -volume-dir=/etc/vm/templates/vmalertmanager-vm-monzo-tpl
      image: jimmidyson/configmap-reload:v0.3.0
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/tls_assets
        name: tls-assets
        readOnly: true
      - mountPath: /etc/vm/templates/vmalertmanager-vm-monzo-tpl
        name: templates-vmalertmanager-vm-monzo-tpl
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l4vdx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: vmalertmanager-vm-0
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vmalertmanager-vm
    serviceAccountName: vmalertmanager-vm
    subdomain: vmalertmanager-vm
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config-volume
      secret:
        defaultMode: 420
        secretName: vmalertmanager-vm-config
    - name: tls-assets
      secret:
        defaultMode: 420
        secretName: vmalertmanager-vm-config
    - configMap:
        defaultMode: 420
        name: vmalertmanager-vm-monzo-tpl
      name: templates-vmalertmanager-vm-monzo-tpl
    - emptyDir: {}
      name: vmalertmanager-vm-db
    - name: kube-api-access-l4vdx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 30m
        memory: 56Mi
      containerID: containerd://f32f64a706a605d4ed4bb0e6dd1c4a9879127f1d63f3883cdff0e96f96581371
      image: docker.io/prom/alertmanager:v0.28.1
      imageID: docker.io/prom/alertmanager@sha256:27c475db5fb156cab31d5c18a4251ac7ed567746a2483ff264516437a39b15ba
      lastState: {}
      name: alertmanager
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 30m
          memory: 56Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /alertmanager
        name: vmalertmanager-vm-db
      - mountPath: /etc/alertmanager/tls_assets
        name: tls-assets
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/vm/templates/vmalertmanager-vm-monzo-tpl
        name: templates-vmalertmanager-vm-monzo-tpl
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l4vdx
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 25Mi
      containerID: containerd://b52640b8ee0e1ac5487166ba90dd2d2bab1939ba3078aa4367755bffa2c5a239
      image: docker.io/jimmidyson/configmap-reload:v0.3.0
      imageID: docker.io/jimmidyson/configmap-reload@sha256:d107c7a235c266273b1c3502a391fec374430e5625539403d0de797fa9c556a2
      lastState: {}
      name: config-reloader
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 25Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T18:58:22Z"
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/tls_assets
        name: tls-assets
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/vm/templates/vmalertmanager-vm-monzo-tpl
        name: templates-vmalertmanager-vm-monzo-tpl
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l4vdx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.23.163
    podIPs:
    - ip: 10.64.23.163
    qosClass: Burstable
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-09-23T18:58:20Z"
    generateName: vmsingle-vm-586b8b49f9-
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmsingle
      managed-by: vm-operator
      pod-template-hash: 586b8b49f9
    name: vmsingle-vm-586b8b49f9-vq79c
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: vmsingle-vm-586b8b49f9
      uid: 6e271978-975d-46c9-9f1f-bb68592d326e
    resourceVersion: "10035259"
    uid: dffd38b4-a695-4187-87ad-449448ab4de0
  spec:
    containers:
    - args:
      - -httpListenAddr=:8428
      - -retentionPeriod=7
      - -storageDataPath=/victoria-metrics-data
      - -vmalert.proxyURL=http://vmalert-vm.monitoring.svc.cluster.local.:8080
      image: victoriametrics/victoria-metrics:v1.125.1
      imagePullPolicy: IfNotPresent
      name: vmsingle
      ports:
      - containerPort: 8428
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: /health
          port: 8428
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 1200m
          memory: 1500Mi
        requests:
          cpu: 150m
          memory: 500Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /victoria-metrics-data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8qgvb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-64-22-126.us-east-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vmsingle-vm
    serviceAccountName: vmsingle-vm
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: vmsingle-vm
    - name: kube-api-access-8qgvb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:04:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:04:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T19:04:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T18:58:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 150m
        memory: 500Mi
      containerID: containerd://c06caa83c7db1ba4a5bc203877c401028276b6ab3cb59e513ee5fe02a25dcfef
      image: docker.io/victoriametrics/victoria-metrics:v1.125.1
      imageID: docker.io/victoriametrics/victoria-metrics@sha256:c49f21c0ebbd89a6ea6f7d2b7e93e5793212e9698f367de7512671294d6dbf0c
      lastState: {}
      name: vmsingle
      ready: true
      resources:
        limits:
          cpu: 1200m
          memory: 1500Mi
        requests:
          cpu: 150m
          memory: 500Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T19:04:27Z"
      volumeMounts:
      - mountPath: /victoria-metrics-data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8qgvb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.64.22.126
    hostIPs:
    - ip: 10.64.22.126
    phase: Running
    podIP: 10.64.20.248
    podIPs:
    - ip: 10.64.20.248
    qosClass: Burstable
    startTime: "2025-09-23T18:58:20Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: aws-loadbalancer-controller
      meta.helm.sh/release-namespace: aws-lbc
    creationTimestamp: "2025-08-30T21:03:06Z"
    labels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-load-balancer-controller
      app.kubernetes.io/version: v2.13.4
      helm.sh/chart: aws-load-balancer-controller-1.13.4
      prometheus.io/service-monitor: "false"
    name: aws-load-balancer-webhook-service
    namespace: aws-lbc
    resourceVersion: "281688"
    uid: 892cd5e4-330e-407f-b8cc-71500e3be38f
  spec:
    clusterIP: 10.65.22.11
    clusterIPs:
    - 10.65.22.11
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: webhook-server
      port: 443
      protocol: TCP
      targetPort: webhook-server
    selector:
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/name: aws-load-balancer-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: cert-manager
    namespace: cert-manager
    resourceVersion: "7818191"
    uid: fc1f16e7-b036-4633-8caf-557399d795a3
  spec:
    clusterIP: 10.65.11.76
    clusterIPs:
    - 10.65.11.76
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-prometheus-servicemonitor
      port: 9402
      protocol: TCP
      targetPort: http-metrics
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: cert-manager-cainjector
    namespace: cert-manager
    resourceVersion: "7818183"
    uid: 96204f80-02d9-475d-ac5c-312e9b9c5fc7
  spec:
    clusterIP: 10.65.11.224
    clusterIPs:
    - 10.65.11.224
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 9402
      protocol: TCP
      targetPort: 9402
    selector:
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cainjector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "7818182"
    uid: e795d2d4-1388-4310-a9b6-9be3cb8d2498
  spec:
    clusterIP: 10.65.15.17
    clusterIPs:
    - 10.65.15.17
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: metrics
      port: 9402
      protocol: TCP
      targetPort: http-metrics
    selector:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-08-29T14:53:18Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "215"
    uid: 09c28d0b-4118-4f1b-a50f-c81e4652d3d3
  spec:
    clusterIP: 10.65.0.1
    clusterIPs:
    - 10.65.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-19T06:01:34Z"
    labels:
      app: foundation
      component: django
      env: dev
      kustomize.toolkit.fluxcd.io/name: dev-foundation
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: foundation
    namespace: dev-foundation
    resourceVersion: "7860931"
    uid: 2723542a-f905-4e5a-adb8-eecb4ba9d61b
  spec:
    clusterIP: 10.65.6.242
    clusterIPs:
    - 10.65.6.242
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8000
    selector:
      app: foundation
      component: django
      env: dev
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: redis
      meta.helm.sh/release-namespace: dev-foundation
    creationTimestamp: "2025-09-19T07:40:17Z"
    labels:
      app.kubernetes.io/instance: redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      env: dev
      helm.sh/chart: redis-16.13.0
      helm.toolkit.fluxcd.io/name: redis
      helm.toolkit.fluxcd.io/namespace: dev-foundation
      kustomize.toolkit.fluxcd.io/name: dev-foundation
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: redis
    namespace: dev-foundation
    resourceVersion: "7900196"
    uid: e3abb1c9-8a2b-455d-aeea-bbd397ee037f
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: redis
    selector:
      app.kubernetes.io/component: master
      app.kubernetes.io/name: redis
      env: dev
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: redis
      meta.helm.sh/release-namespace: dev-foundation
    creationTimestamp: "2025-09-19T07:44:28Z"
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      helm.sh/chart: redis-16.13.0
      helm.toolkit.fluxcd.io/name: redis
      helm.toolkit.fluxcd.io/namespace: dev-foundation
    name: redis-master
    namespace: dev-foundation
    resourceVersion: "7897357"
    uid: e45c3627-75c1-4685-8b16-73127733816a
  spec:
    clusterIP: 10.65.21.218
    clusterIPs:
    - 10.65.21.218
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: redis
    selector:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: redis
      app.kubernetes.io/name: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: redis
      meta.helm.sh/release-namespace: dev-foundation
    creationTimestamp: "2025-09-19T07:44:28Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      helm.sh/chart: redis-16.13.0
      helm.toolkit.fluxcd.io/name: redis
      helm.toolkit.fluxcd.io/namespace: dev-foundation
    name: redis-metrics
    namespace: dev-foundation
    resourceVersion: "7897363"
    uid: 5b3fc2ca-51c6-4e8f-b0ce-fb57805ab662
  spec:
    clusterIP: 10.65.6.213
    clusterIPs:
    - 10.65.6.213
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 9121
      protocol: TCP
      targetPort: metrics
    selector:
      app.kubernetes.io/instance: redis
      app.kubernetes.io/name: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-19T03:48:12Z"
    labels:
      app: charts
      kustomize.toolkit.fluxcd.io/name: helm-registry
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: charts
    namespace: flux-system
    resourceVersion: "7817383"
    uid: ac0c7cfa-8b8d-41a2-89d7-f8f6ef41273a
  spec:
    clusterIP: 10.65.12.206
    clusterIPs:
    - 10.65.12.206
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: charts
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-08T19:56:44Z"
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: notification-controller
    namespace: flux-system
    resourceVersion: "9538768"
    uid: 30aa88a4-1931-40f6-89bc-01b99905db92
  spec:
    clusterIP: 10.65.25.202
    clusterIPs:
    - 10.65.25.202
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app: notification-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-08T19:56:44Z"
    labels:
      app.kubernetes.io/component: source-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: source-controller
    namespace: flux-system
    resourceVersion: "9538769"
    uid: 7a25d860-add6-4908-8695-1fedca4a5244
  spec:
    clusterIP: 10.65.19.179
    clusterIPs:
    - 10.65.19.179
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app: source-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-08T19:56:44Z"
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: webhook-receiver
    namespace: flux-system
    resourceVersion: "9538775"
    uid: 1b2105d5-e774-41bd-ab32-f7dd259d3211
  spec:
    clusterIP: 10.65.29.36
    clusterIPs:
    - 10.65.29.36
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http-webhook
    selector:
      app: notification-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true
      service.beta.kubernetes.io/aws-load-balancer-type: external
    creationTimestamp: "2025-08-30T21:51:04Z"
    finalizers:
    - service.k8s.aws/resources
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: terraform
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/version: 1.13.2
    name: nginx-ingress-controller
    namespace: ingress-nginx
    resourceVersion: "291202"
    uid: 5d9865a4-0fed-4daa-866f-8fb6bac656dc
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.65.25.123
    clusterIPs:
    - 10.65.25.123
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    loadBalancerClass: service.k8s.aws/nlb
    ports:
    - appProtocol: http
      name: http
      nodePort: 30537
      port: 80
      protocol: TCP
      targetPort: http
    - appProtocol: https
      name: https
      nodePort: 31441
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: k8s-ingressn-nginxing-624c808068-8fc5c45b9dd6ff11.elb.us-east-2.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-09-19T04:33:08Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.2
      helm.sh/chart: ingress-nginx-4.13.2
      helm.toolkit.fluxcd.io/name: ingress-nginx
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: nginx-ingress-controller-admission
    namespace: ingress-nginx
    resourceVersion: "7831589"
    uid: ee11cbce-8417-44ef-89d7-830f1f99a155
  spec:
    clusterIP: 10.65.27.50
    clusterIPs:
    - 10.65.27.50
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-09-19T04:33:08Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.2
      helm.sh/chart: ingress-nginx-4.13.2
      helm.toolkit.fluxcd.io/name: ingress-nginx
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: nginx-ingress-controller-metrics
    namespace: ingress-nginx
    resourceVersion: "7831585"
    uid: bf334e60-e439-4ac1-a219-07b480c3d805
  spec:
    clusterIP: 10.65.9.217
    clusterIPs:
    - 10.65.9.217
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 10254
      protocol: TCP
      targetPort: metrics
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-08-29T14:53:22Z"
    name: eks-extension-metrics-api
    namespace: kube-system
    resourceVersion: "284"
    uid: f2c092d7-335d-4965-a02e-9c110e34f215
  spec:
    clusterIP: 10.65.22.163
    clusterIPs:
    - 10.65.22.163
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-api
      port: 443
      protocol: TCP
      targetPort: 10443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-08-29T14:54:58Z"
    labels:
      eks.amazonaws.com/component: kube-dns
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "619"
    uid: edb5a0f4-09a4-4e73-83d0-00df620a7f9c
  spec:
    clusterIP: 10.65.0.10
    clusterIPs:
    - 10.65.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-19T03:54:36Z"
    labels:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/version: 0.7.2
    name: metrics-server
    namespace: kube-system
    resourceVersion: "7819631"
    uid: e6cd331f-26aa-47a3-8ceb-86a8fdeff702
  spec:
    clusterIP: 10.65.3.9
    clusterIPs:
    - 10.65.3.9
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/name: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    labels:
      app: vm-core-dns
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-metrics-k8s-stack
      app.kubernetes.io/version: v1.125.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      jobLabel: core-dns
    name: vm-core-dns
    namespace: kube-system
    resourceVersion: "10001346"
    uid: f7eff99b-940d-4216-90d1-ee21f82135f2
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-19T21:27:56Z"
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: "11.5"
      helm.sh/chart: grafana-8.3.6
      helm.toolkit.fluxcd.io/name: grafana
      helm.toolkit.fluxcd.io/namespace: monitoring
    name: grafana
    namespace: monitoring
    resourceVersion: "8167057"
    uid: ba2bf764-dbec-4d9b-82d2-fab661301807
  spec:
    clusterIP: 10.65.1.211
    clusterIPs:
    - 10.65.1.211
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/target: "true"
    creationTimestamp: "2025-09-02T16:59:18Z"
    name: sriov-network-metrics-exporter
    namespace: monitoring
    resourceVersion: "1076134"
    uid: a4eb8497-c9ce-4e82-bff7-757e5a8360a4
  spec:
    clusterIP: 10.65.21.147
    clusterIPs:
    - 10.65.21.147
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 9808
      protocol: TCP
      targetPort: 9808
    selector:
      app.kubernetes.io/name: sriov-network-metrics-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 12.0.2
      helm.sh/chart: grafana-9.2.10
    name: victoria-metrics-grafana
    namespace: monitoring
    resourceVersion: "10001352"
    uid: 162cb946-7eba-469b-8749-843849da30ef
  spec:
    clusterIP: 10.65.24.180
    clusterIPs:
    - 10.65.24.180
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T17:38:29Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-6.0.0
    name: victoria-metrics-kube-state-metrics
    namespace: monitoring
    resourceVersion: "10001358"
    uid: 403cb004-03f7-43b1-91e4-1ae0abc68fec
  spec:
    clusterIP: 10.65.15.57
    clusterIPs:
    - 10.65.15.57
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-09-23T17:38:29Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.1
      helm.sh/chart: prometheus-node-exporter-4.47.3
      jobLabel: node-exporter
    name: victoria-metrics-prometheus-node-exporter
    namespace: monitoring
    resourceVersion: "10001367"
    uid: 10f5e95e-d838-47a5-a5ac-632cdfa8a6fc
  spec:
    clusterIP: 10.65.10.92
    clusterIPs:
    - 10.65.10.92
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: 9100
    selector:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/name: prometheus-node-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-metrics-operator
      app.kubernetes.io/version: v0.62.0
      helm.sh/chart: victoria-metrics-operator-0.52.1
    name: victoria-metrics-victoria-metrics-operator
    namespace: monitoring
    resourceVersion: "10001363"
    uid: 57ac5c5c-ed28-4232-8556-00f08998af44
  spec:
    clusterIP: 10.65.8.93
    clusterIPs:
    - 10.65.8.93
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    - name: webhook
      port: 9443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/name: victoria-metrics-operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: vlogs
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-19T21:37:12Z"
    labels:
      app: server
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-logs-single
      app.kubernetes.io/version: v1.33.0
      helm.sh/chart: victoria-logs-single-0.11.8
    name: vlogs-server
    namespace: monitoring
    resourceVersion: "8170172"
    uid: ab12f673-fac5-412c-9db4-03c2ad372134
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9428
      protocol: TCP
      targetPort: http
    selector:
      app: server
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/name: victoria-logs-single
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: vlogs
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-19T21:37:12Z"
    labels:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vector
      app.kubernetes.io/version: 0.44.0-distroless-libc
      helm.sh/chart: vector-0.40.0
    name: vlogs-vector-headless
    namespace: monitoring
    resourceVersion: "8170174"
    uid: a9bf2dc9-be62-400b-ab24-29b41e47d9d2
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    selector:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/name: vector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmagent
      app.kubernetes.io/version: v1.125.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmagent-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMAgent
      name: vm
      uid: d2686826-d5a7-4f29-b546-1f9ba18d1a0e
    resourceVersion: "10001736"
    uid: 7fdb6819-aa54-4787-b433-d5d52322e1ec
  spec:
    clusterIP: 10.65.7.154
    clusterIPs:
    - 10.65.7.154
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8429
      protocol: TCP
      targetPort: 8429
    selector:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmagent
      managed-by: vm-operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmalert
      app.kubernetes.io/version: v1.125.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmalert-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMAlert
      name: vm
      uid: a22e4625-8d95-4d15-8e9e-082176d6a2c9
    resourceVersion: "10001782"
    uid: 7efad239-4a47-451e-b75d-07052b9c71de
  spec:
    clusterIP: 10.65.8.194
    clusterIPs:
    - 10.65.8.194
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmalert
      managed-by: vm-operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmalertmanager
      app.kubernetes.io/version: v0.28.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmalertmanager-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMAlertmanager
      name: vm
      uid: 0ab751ff-ac8e-4ecb-95cc-21ce14e208c4
    resourceVersion: "10001688"
    uid: f76ed508-f4ab-40bd-932b-be848922103e
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9093
      protocol: TCP
      targetPort: web
    - name: tcp-mesh
      port: 9094
      protocol: TCP
      targetPort: 9094
    - name: udp-mesh
      port: 9094
      protocol: UDP
      targetPort: 9094
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmalertmanager
      managed-by: vm-operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmsingle
      app.kubernetes.io/version: v1.125.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmsingle-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMSingle
      name: vm
      uid: 5dc8f0c8-b8da-4b46-9e4e-56b1fd01879c
    resourceVersion: "10001703"
    uid: b534d4ad-6abe-4050-9c51-a2273963d72c
  spec:
    clusterIP: 10.65.25.8
    clusterIPs:
    - 10.65.25.8
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8428
      protocol: TCP
      targetPort: 8428
    selector:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmsingle
      managed-by: vm-operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: ingress-nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-09-19T04:33:08Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.2
      helm.sh/chart: ingress-nginx-4.13.2
      helm.toolkit.fluxcd.io/name: ingress-nginx
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: nginx-ingress-controller
    namespace: ingress-nginx
    resourceVersion: "10036912"
    uid: 2150b90f-07a5-4ef9-87fa-d250e3db1a47
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: ingress-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
          app.kubernetes.io/version: 1.13.2
          helm.sh/chart: ingress-nginx-4.13.2
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - /nginx-ingress-controller
          - --election-id=nginx-ingress-leader
          - --controller-class=k8s.io/ingress-nginx
          - --ingress-class=nginx
          - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller
          - --validating-webhook=:8443
          - --validating-webhook-certificate=/usr/local/certificates/cert
          - --validating-webhook-key=/usr/local/certificates/key
          - --enable-metrics=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LD_PRELOAD
            value: /usr/local/lib/libmimalloc.so
          image: registry.k8s.io/ingress-nginx/controller:v1.13.2@sha256:1f7eaeb01933e719c8a9f4acd8181e555e582330c7d50f24484fb64d2ba9b2ef
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /wait-shutdown
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 10254
            name: metrics
            protocol: TCP
          - containerPort: 8443
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 82
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/certificates/
            name: webhook-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: nginx-ingress
        serviceAccountName: nginx-ingress
        terminationGracePeriodSeconds: 300
        tolerations:
        - operator: Exists
        volumes:
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: nginx-ingress-admission
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
    creationTimestamp: "2025-08-29T14:54:59Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.19.5
      helm.sh/chart: aws-vpc-cni-1.19.5
      k8s-app: aws-node
    name: aws-node
    namespace: kube-system
    resourceVersion: "10036721"
    uid: 37f2bc17-6adc-49b1-8619-130afb7a24d2
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: aws-node
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-23T14:07:45-05:00"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-vpc-cni
          app.kubernetes.io/name: aws-node
          k8s-app: aws-node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - hybrid
                  - auto
        containers:
        - env:
          - name: ADDITIONAL_ENI_TAGS
            value: '{}'
          - name: ANNOTATE_POD_IP
            value: "false"
          - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
            value: "true"
          - name: AWS_VPC_ENI_MTU
            value: "9001"
          - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
            value: "false"
          - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
            value: "false"
          - name: AWS_VPC_K8S_CNI_LOGLEVEL
            value: DEBUG
          - name: AWS_VPC_K8S_CNI_LOG_FILE
            value: /host/var/log/aws-routed-eni/ipamd.log
          - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
            value: prng
          - name: AWS_VPC_K8S_CNI_VETHPREFIX
            value: eni
          - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
            value: /var/log/aws-routed-eni/plugin.log
          - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
            value: DEBUG
          - name: CLUSTER_ENDPOINT
            value: https://D5F354783F731271B1F1EBBBC9ADD58A.yl4.us-east-2.eks.amazonaws.com
          - name: CLUSTER_NAME
            value: dev-2025
          - name: DISABLE_INTROSPECTION
            value: "false"
          - name: DISABLE_METRICS
            value: "false"
          - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
            value: "false"
          - name: ENABLE_IPv4
            value: "true"
          - name: ENABLE_IPv6
            value: "false"
          - name: ENABLE_POD_ENI
            value: "false"
          - name: ENABLE_PREFIX_DELEGATION
            value: "false"
          - name: ENABLE_SUBNET_DISCOVERY
            value: "true"
          - name: NETWORK_POLICY_ENFORCING_MODE
            value: standard
          - name: VPC_CNI_VERSION
            value: v1.19.5
          - name: VPC_ID
            value: vpc-0e580f5ae96de51c7
          - name: WARM_ENI_TARGET
            value: "1"
          - name: WARM_PREFIX_TARGET
            value: "1"
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni:v1.19.5-eksbuild.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-node
          ports:
          - containerPort: 61678
            name: metrics
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /app/grpc-health-probe
              - -addr=:50051
              - -connect-timeout=5s
              - -rpc-timeout=5s
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - args:
          - --enable-ipv6=false
          - --enable-network-policy=false
          - --enable-cloudwatch-logs=false
          - --enable-policy-event-logs=false
          - --log-file=/var/log/aws-routed-eni/network-policy-agent.log
          - --metrics-bind-addr=:8162
          - --health-probe-bind-addr=:8163
          - --conntrack-cache-cleanup-period=300
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon/aws-network-policy-agent:v1.2.1-eksbuild.1
          imagePullPolicy: Always
          name: aws-eks-nodeagent
          ports:
          - containerPort: 8162
            name: agentmetrics
            protocol: TCP
          resources:
            requests:
              cpu: 25m
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /sys/fs/bpf
            name: bpf-pin-path
          - mountPath: /var/log/aws-routed-eni
            name: log-dir
          - mountPath: /var/run/aws-node
            name: run-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - env:
          - name: DISABLE_TCP_EARLY_DEMUX
            value: "false"
          - name: ENABLE_IPv6
            value: "false"
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/amazon-k8s-cni-init:v1.19.5-eksbuild.1
          imagePullPolicy: Always
          name: aws-vpc-cni-init
          resources:
            requests:
              cpu: 25m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aws-node
        serviceAccountName: aws-node
        terminationGracePeriodSeconds: 10
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /sys/fs/bpf
            type: ""
          name: bpf-pin-path
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/aws-routed-eni
            type: DirectoryOrCreate
          name: log-dir
        - hostPath:
            path: /var/run/aws-node
            type: DirectoryOrCreate
          name: run-dir
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 3
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-02T16:46:57Z"
    generation: 1
    labels:
      k8s-app: dcgm-server
      version: v1
    name: dcgm-server
    namespace: kube-system
    resourceVersion: "1072514"
    uid: 193a07ef-fd00-4f83-9156-85a2a98932a4
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: dcgm-server
        version: v1
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: dcgm-server
          version: v1
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: In
                  values:
                  - g3.16xlarge
                  - g3.4xlarge
                  - g3.8xlarge
                  - g3s.xlarge
                  - g4dn.12xlarge
                  - g4dn.16xlarge
                  - g4dn.2xlarge
                  - g4dn.4xlarge
                  - g4dn.8xlarge
                  - g4dn.metal
                  - g4dn.xlarge
                  - g5.12xlarge
                  - g5.16xlarge
                  - g5.24xlarge
                  - g5.2xlarge
                  - g5.48xlarge
                  - g5.4xlarge
                  - g5.8xlarge
                  - g5.xlarge
                  - g6.12xlarge
                  - g6.16xlarge
                  - g6.24xlarge
                  - g6.2xlarge
                  - g6.48xlarge
                  - g6.4xlarge
                  - g6.8xlarge
                  - g6.xlarge
                  - g6e.12xlarge
                  - g6e.16xlarge
                  - g6e.24xlarge
                  - g6e.2xlarge
                  - g6e.48xlarge
                  - g6e.4xlarge
                  - g6e.8xlarge
                  - g6e.xlarge
                  - gr6.4xlarge
                  - gr6.8xlarge
                  - p2.16xlarge
                  - p2.8xlarge
                  - p2.xlarge
                  - p3.16xlarge
                  - p3.2xlarge
                  - p3.8xlarge
                  - p4d.24xlarge
                  - p5.48xlarge
                  - p5e.48xlarge
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                - key: sagemaker.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - hyperpod
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
        containers:
        - args:
          - -c
          - nv-hostengine -n -b ALL || true; sleep infinity
          command:
          - /bin/sh
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/observability/dcgm-exporter:4.1.1-4.0.4-ubuntu22.04
          imagePullPolicy: IfNotPresent
          name: eks-node-monitoring-agent-dcgm
          ports:
          - containerPort: 5555
            hostPort: 5555
            protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-02T16:39:38Z"
    generation: 1
    labels:
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
    name: ebs-csi-node
    namespace: kube-system
    resourceVersion: "10036274"
    uid: 617429c9-e681-4131-86c2-e2af28f8c035
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ebs-csi-node
        app.kubernetes.io/name: aws-ebs-csi-driver
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ebs-csi-node
          app.kubernetes.io/component: csi-driver
          app.kubernetes.io/managed-by: EKS
          app.kubernetes.io/name: aws-ebs-csi-driver
          app.kubernetes.io/version: 1.48.0
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                  - hybrid
                - key: node.kubernetes.io/instance-type
                  operator: NotIn
                  values:
                  - a1.medium
                  - a1.large
                  - a1.xlarge
                  - a1.2xlarge
                  - a1.4xlarge
        containers:
        - args:
          - node
          - --endpoint=$(CSI_ENDPOINT)
          - --csi-mount-point-prefix=/var/lib/kubelet/plugins/kubernetes.io/csi/ebs.csi.aws.com/
          - --logging-format=text
          - --v=2
          env:
          - name: CSI_ENDPOINT
            value: unix:/csi/csi.sock
          - name: CSI_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/aws-ebs-csi-driver
                - pre-stop-hook
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: ebs-plugin
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /dev
            name: device-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 90
            successThreshold: 1
            timeoutSeconds: 15
          name: node-driver-registrar
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
          - mountPath: /var/lib/kubelet/plugins/ebs.csi.aws.com/
            name: probe-dir
        - args:
          - --csi-address=/csi/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 0
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        serviceAccount: ebs-csi-node-sa
        serviceAccountName: ebs-csi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/ebs.csi.aws.com/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - emptyDir: {}
          name: probe-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-02T16:39:37Z"
    generation: 1
    labels:
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
    name: ebs-csi-node-windows
    namespace: kube-system
    resourceVersion: "1070584"
    uid: 55642693-1f9b-4f8a-a498-b1442f165a39
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ebs-csi-node
        app.kubernetes.io/name: aws-ebs-csi-driver
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ebs-csi-node
          app.kubernetes.io/component: csi-driver
          app.kubernetes.io/managed-by: EKS
          app.kubernetes.io/name: aws-ebs-csi-driver
          app.kubernetes.io/version: 1.48.0
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                  - hybrid
                - key: node.kubernetes.io/instance-type
                  operator: NotIn
                  values:
                  - a1.medium
                  - a1.large
                  - a1.xlarge
                  - a1.2xlarge
                  - a1.4xlarge
        containers:
        - args:
          - node
          - --endpoint=$(CSI_ENDPOINT)
          - --logging-format=text
          - --v=2
          env:
          - name: CSI_ENDPOINT
            value: unix:/csi/csi.sock
          - name: CSI_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/aws-ebs-csi-driver
                - pre-stop-hook
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: ebs-plugin
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            windowsOptions:
              runAsUserName: ContainerAdministrator
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\var\lib\kubelet
            mountPropagation: None
            name: kubelet-dir
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: \\.\pipe\csi-proxy-disk-v1
            name: csi-proxy-disk-pipe
          - mountPath: \\.\pipe\csi-proxy-volume-v1
            name: csi-proxy-volume-pipe
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1
            name: csi-proxy-filesystem-pipe
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: unix:/csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\var\lib\kubelet\plugins\ebs.csi.aws.com\csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-node-driver-registrar:v2.14.0-eksbuild.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar.exe
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 90
            successThreshold: 1
            timeoutSeconds: 15
          name: node-driver-registrar
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: C:\registration
            name: registration-dir
          - mountPath: C:\var\lib\kubelet\plugins\ebs.csi.aws.com
            name: probe-dir
        - args:
          - --csi-address=unix:/csi/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\csi
            name: plugin-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ebs-csi-node-sa
        serviceAccountName: ebs-csi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: C:\var\lib\kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: C:\var\lib\kubelet\plugins\ebs.csi.aws.com
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: C:\var\lib\kubelet\plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1
            type: ""
          name: csi-proxy-disk-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1
            type: ""
          name: csi-proxy-volume-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1
            type: ""
          name: csi-proxy-filesystem-pipe
        - emptyDir: {}
          name: probe-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-02T16:46:56Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: eks-node-monitoring-agent
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: eks-node-monitoring-agent
      app.kubernetes.io/version: 1.4.0
    name: eks-node-monitoring-agent
    namespace: kube-system
    resourceVersion: "10227803"
    uid: cc01585a-fdc1-406e-b514-0e477216d541
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-node-monitoring-agent
        app.kubernetes.io/name: eks-node-monitoring-agent
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: eks-node-monitoring-agent
          app.kubernetes.io/managed-by: EKS
          app.kubernetes.io/name: eks-node-monitoring-agent
          app.kubernetes.io/version: 1.4.0
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                - key: sagemaker.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - hyperpod
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
        containers:
        - args:
          - --probe-address=:8002
          - --metrics-address=:8003
          env:
          - name: HOST_ROOT
            value: /host
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/eks-node-monitoring-agent:v1.4.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8002
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: eks-node-monitoring-agent
          resources:
            limits:
              cpu: 250m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host
            name: host-root
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: eks-node-monitoring-agent
        serviceAccountName: eks-node-monitoring-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /
            type: ""
          name: host-root
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-08-29T14:54:58Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: kube-proxy
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "10032105"
    uid: 340bec0b-f283-4ffe-9480-f4b4751bc845
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
        containers:
        - command:
          - kube-proxy
          - --v=2
          - --config=/var/lib/kube-proxy-config/config
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/kube-proxy:v1.33.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /var/lib/kube-proxy/
            name: kubeconfig
          - mountPath: /var/lib/kube-proxy-config/
            name: config
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kubeconfig
        - configMap:
            defaultMode: 420
            name: kube-proxy-config
          name: config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-02T16:59:18Z"
    generation: 1
    labels:
      app.kubernetes.io/name: sriov-network-metrics-exporter
      app.kubernetes.io/version: 1.1.1-eksbuild.3
    name: sriov-network-metrics-exporter
    namespace: monitoring
    resourceVersion: "1076140"
    uid: 200e1ba3-736c-4641-bc01-1280bc09683a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: sriov-network-metrics-exporter
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: sriov-network-metrics-exporter
          app.kubernetes.io/version: 1.1.1-eksbuild.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - hybrid
                  - auto
        containers:
        - args:
          - --path.kubecgroup=/host/kubecgroup
          - --path.sysbuspci=/host/sys/bus/pci/devices/
          - --path.sysclassnet=/host/sys/class/net/
          - --path.cpucheckpoint=/host/cpu_manager_state
          - --path.kubeletsocket=/host/kubelet.sock
          - --path.nodecpuinfo=/host/sys/devices/system/node/
          - --collector.kubepoddevice=true
          - --collector.kubepodcpu=true
          - --collector.vfstats=true
          - --collector.vfstatspriority=sysfs,netlink
          - --web.rate-limit=1
          - --web.rate-burst=10
          - --web.listen-address=:9808
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/sriov-network-metrics-exporter:v1.1.1-eksbuild.3
          imagePullPolicy: IfNotPresent
          name: sriov-network-metrics-exporter
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/kubelet.sock
            name: kubeletsocket
          - mountPath: /host/sys/bus/pci/devices
            name: sysbuspcidevices
            readOnly: true
          - mountPath: /host/sys/devices
            name: sysdevices
            readOnly: true
          - mountPath: /host/sys/class/net
            name: sysclassnet
            readOnly: true
          - mountPath: /host/kubecgroup
            name: kubecgroup
            readOnly: true
          - mountPath: /host/cpu_manager_state
            name: cpucheckpoint
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          feature.node.kubernetes.io/network-sriov.capable: "true"
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pod-resources/kubelet.sock
            type: Socket
          name: kubeletsocket
        - hostPath:
            path: /sys/fs/cgroup/kubepods.slice/
            type: Directory
          name: kubecgroup
        - hostPath:
            path: /var/lib/kubelet/cpu_manager_state
            type: File
          name: cpucheckpoint
        - hostPath:
            path: /sys/class/net
            type: Directory
          name: sysclassnet
        - hostPath:
            path: /sys/bus/pci/devices
            type: Directory
          name: sysbuspcidevices
        - hostPath:
            path: /sys/devices
            type: Directory
          name: sysdevices
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.1
      helm.sh/chart: prometheus-node-exporter-4.47.3
    name: victoria-metrics-prometheus-node-exporter
    namespace: monitoring
    resourceVersion: "10032125"
    uid: 0720c48b-7001-47ae-aadc-58278352e969
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: victoria-metrics
        app.kubernetes.io/name: prometheus-node-exporter
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-node-exporter
          app.kubernetes.io/part-of: prometheus-node-exporter
          app.kubernetes.io/version: 1.9.1
          helm.sh/chart: prometheus-node-exporter-4.47.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        automountServiceAccountToken: false
        containers:
        - args:
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          - --path.rootfs=/host/root
          - --path.udev.data=/host/root/run/udev/data
          - --web.listen-address=[$(HOST_IP)]:9100
          - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
          - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|erofs|sysfs|tracefs)$
          env:
          - name: HOST_IP
            value: 0.0.0.0
          image: quay.io/prometheus/node-exporter:v1.9.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: node-exporter
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/proc
            name: proc
            readOnly: true
          - mountPath: /host/sys
            name: sys
            readOnly: true
          - mountPath: /host/root
            mountPropagation: HostToContainer
            name: root
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: victoria-metrics-prometheus-node-exporter
        serviceAccountName: victoria-metrics-prometheus-node-exporter
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /proc
            type: ""
          name: proc
        - hostPath:
            path: /sys
            type: ""
          name: sys
        - hostPath:
            path: /
            type: ""
          name: root
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: vlogs
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-19T21:37:12Z"
    generation: 1
    labels:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vector
      app.kubernetes.io/version: 0.44.0-distroless-libc
      helm.sh/chart: vector-0.40.0
    name: vlogs-vector
    namespace: monitoring
    resourceVersion: "10036293"
    uid: 94ff67f0-8645-47b0-bea0-5be72463fa3a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: Agent
        app.kubernetes.io/instance: vlogs
        app.kubernetes.io/name: vector
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: Agent
          app.kubernetes.io/instance: vlogs
          app.kubernetes.io/name: vector
          vector.dev/exclude: "true"
      spec:
        containers:
        - args:
          - -w
          - --config-dir
          - /etc/vector/
          env:
          - name: VECTOR_LOG
            value: info
          - name: VECTOR_SELF_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: VECTOR_SELF_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: VECTOR_SELF_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: PROCFS_ROOT
            value: /host/proc
          - name: SYSFS_ROOT
            value: /host/sys
          image: timberio/vector:0.44.0-distroless-libc
          imagePullPolicy: IfNotPresent
          name: vector
          ports:
          - containerPort: 9090
            name: prom-exporter
            protocol: TCP
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /vector-data-dir
            name: data
          - mountPath: /etc/vector/
            name: config
            readOnly: true
          - mountPath: /var/log/
            name: var-log
            readOnly: true
          - mountPath: /var/lib
            name: var-lib
            readOnly: true
          - mountPath: /host/proc
            name: procfs
            readOnly: true
          - mountPath: /host/sys
            name: sysfs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vlogs-vector
        serviceAccountName: vlogs-vector
        terminationGracePeriodSeconds: 60
        volumes:
        - name: config
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: vl-config
        - hostPath:
            path: /var/lib/vector
            type: ""
          name: data
        - hostPath:
            path: /var/log/
            type: ""
          name: var-log
        - hostPath:
            path: /var/lib/
            type: ""
          name: var-lib
        - hostPath:
            path: /proc
            type: ""
          name: procfs
        - hostPath:
            path: /sys
            type: ""
          name: sysfs
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: aws-loadbalancer-controller
      meta.helm.sh/release-namespace: aws-lbc
    creationTimestamp: "2025-08-30T21:03:06Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: aws-load-balancer-controller
      app.kubernetes.io/version: v2.13.4
      helm.sh/chart: aws-load-balancer-controller-1.13.4
    name: aws-lbc
    namespace: aws-lbc
    resourceVersion: "7825446"
    uid: ee259cfb-6f8f-4e58-a416-da0832add4f6
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: aws-loadbalancer-controller
        app.kubernetes.io/name: aws-load-balancer-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-08-30T16:45:09-05:00"
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-loadbalancer-controller
          app.kubernetes.io/name: aws-load-balancer-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - aws-load-balancer-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --cluster-name=dev-2025
          - --ingress-class=alb
          - --aws-region=us-east-2
          - --aws-vpc-id=vpc-0e580f5ae96de51c7
          - --log-level=error
          - --default-target-type=ip
          - --load-balancer-class=service.k8s.aws/nlb
          image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-load-balancer-controller
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 8080
            name: metrics-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readyz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
        serviceAccount: aws-lbc
        serviceAccountName: aws-lbc
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: aws-load-balancer-tls
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-08-30T21:03:06Z"
      lastUpdateTime: "2025-08-31T17:49:41Z"
      message: ReplicaSet "aws-lbc-868c8d6897" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-19T04:15:31Z"
      lastUpdateTime: "2025-09-19T04:15:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    generation: 5
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: cert-manager
    namespace: cert-manager
    resourceVersion: "10368097"
    uid: 08ecf079-b327-49eb-8c59-edf1a7fca5d6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.18.2
          component: controller
          helm.sh/chart: cert-manager-v1.18.2
      spec:
        containers:
        - args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2
          - --default-issuer-name=le-production
          - --default-issuer-kind=ClusterIssuer
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager
        serviceAccountName: cert-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T18:50:15Z"
      lastUpdateTime: "2025-09-23T18:50:15Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-19T03:50:14Z"
      lastUpdateTime: "2025-09-24T09:40:58Z"
      message: ReplicaSet "cert-manager-867ff9dbb8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    generation: 1
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: cert-manager-cainjector
    namespace: cert-manager
    resourceVersion: "7825244"
    uid: 89f30812-c60d-44cb-bc89-5451cbb93f76
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cainjector
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cainjector
          app.kubernetes.io/component: cainjector
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cainjector
          app.kubernetes.io/version: v1.18.2
          helm.sh/chart: cert-manager-v1.18.2
      spec:
        containers:
        - args:
          - --v=2
          - --leader-election-namespace=kube-system
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-cainjector:v1.18.2
          imagePullPolicy: IfNotPresent
          name: cert-manager-cainjector
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-cainjector
        serviceAccountName: cert-manager-cainjector
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-19T03:50:14Z"
      lastUpdateTime: "2025-09-19T03:50:17Z"
      message: ReplicaSet "cert-manager-cainjector-6dddf8d484" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-19T04:15:20Z"
      lastUpdateTime: "2025-09-19T04:15:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    generation: 1
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      helm.toolkit.fluxcd.io/name: cert-manager
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "7825517"
    uid: 129ddd34-0353-4289-8b98-afccd049b418
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: webhook
          app.kubernetes.io/component: webhook
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: webhook
          app.kubernetes.io/version: v1.18.2
          component: webhook
          helm.sh/chart: cert-manager-v1.18.2
      spec:
        containers:
        - args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
          - --dynamic-serving-dns-names=cert-manager-webhook
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-webhook:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cert-manager-webhook
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          - containerPort: 6080
            name: healthcheck
            protocol: TCP
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-webhook
        serviceAccountName: cert-manager-webhook
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-19T03:50:14Z"
      lastUpdateTime: "2025-09-19T03:55:02Z"
      message: ReplicaSet "cert-manager-webhook-84b958b657" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-19T04:15:40Z"
      lastUpdateTime: "2025-09-19T04:15:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-24T09:33:33Z"
    generation: 2
    labels:
      app: tester
    name: tester
    namespace: cert-manager
    resourceVersion: "10365438"
    uid: fbac1c1d-431d-4aef-9887-55d32035cbd2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: tester
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: tester
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/misc:util-pg16
          imagePullPolicy: IfNotPresent
          name: misc
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cert-manager
        serviceAccountName: cert-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-24T09:33:39Z"
      lastUpdateTime: "2025-09-24T09:33:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-24T09:33:33Z"
      lastUpdateTime: "2025-09-24T09:34:13Z"
      message: ReplicaSet "tester-76fd8fd9d9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2025-09-19T06:01:34Z"
    generation: 10
    labels:
      app: foundation
      component: queue
      env: dev
      kustomize.toolkit.fluxcd.io/name: dev-foundation
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: celery
    namespace: dev-foundation
    resourceVersion: "10382819"
    uid: 61d177c3-3066-4154-8be4-d01d8fba830d
  spec:
    minReadySeconds: 5
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-09-19T06:01:34Z"
      lastUpdateTime: "2025-09-19T06:01:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-19T06:01:34Z"
      lastUpdateTime: "2025-09-24T10:19:18Z"
      message: ReplicaSet "celery-686ff87b74" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 10
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2025-09-19T06:52:02Z"
    generation: 15
    labels:
      app: foundation
      component: django
      env: dev
      kustomize.toolkit.fluxcd.io/name: dev-foundation
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: foundation
    namespace: dev-foundation
    resourceVersion: "10386792"
    uid: c6ae00c8-066b-479b-8999-9170cc269a12
  spec:
    minReadySeconds: 5
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-b5t7dm96f7
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-19T06:58:09Z"
      lastUpdateTime: "2025-09-19T06:58:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-24T10:29:19Z"
      lastUpdateTime: "2025-09-24T10:29:19Z"
      message: ReplicaSet "foundation-576956ff46" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 15
    readyReplicas: 1
    replicas: 2
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: redis
      meta.helm.sh/release-namespace: dev-foundation
    creationTimestamp: "2025-09-19T07:44:28Z"
    generation: 2
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      helm.sh/chart: redis-16.13.0
      helm.toolkit.fluxcd.io/name: redis
      helm.toolkit.fluxcd.io/namespace: dev-foundation
    name: redis-master
    namespace: dev-foundation
    resourceVersion: "10035393"
    uid: 5cb673d8-1be1-4c50-8037-ac6a5c32eab1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: redis
        app.kubernetes.io/name: redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/configmap: bfbcca6a30caf03dc0d5830d5745825cc1419f948971f31682e08f9e8935a62c
          checksum/health: 04e9b0b9fd0b12243a38f8e04b04f67886cf98315eab9f45ffa4e848b2a31f05
          checksum/scripts: 041214bdb4c892bf83f4c9a6f3b97f7d0ba06aefd0b31c222e3810da5752880d
          checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          prometheus.io/port: "9121"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: master
          app.kubernetes.io/instance: redis
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: redis
          helm.sh/chart: redis-16.13.0
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: master
                    app.kubernetes.io/instance: redis
                    app.kubernetes.io/name: redis
                namespaces:
                - dev-foundation
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - -c
          - /opt/bitnami/scripts/start-scripts/start-master.sh
          command:
          - /bin/bash
          env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: REDIS_REPLICATION_MODE
            value: master
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
          - name: REDIS_TLS_ENABLED
            value: "no"
          - name: REDIS_PORT
            value: "6379"
          image: docker.io/bitnami/redis:6.2.7-debian-11-r3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 6
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - /health/ping_readiness_local.sh 1
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/bitnami/scripts/start-scripts
            name: start-scripts
          - mountPath: /health
            name: health
          - mountPath: /data
            name: redis-data
          - mountPath: /opt/bitnami/redis/mounted-etc
            name: config
          - mountPath: /opt/bitnami/redis/etc/
            name: redis-tmp-conf
          - mountPath: /tmp
            name: tmp
        - command:
          - /bin/bash
          - -c
          - |
            if [[ -f '/secrets/redis-password' ]]; then
            export REDIS_PASSWORD=$(cat /secrets/redis-password)
            fi
            redis_exporter
          env:
          - name: REDIS_ALIAS
            value: redis
          image: docker.io/bitnami/redis-exporter:1.40.0-debian-11-r0
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
          - containerPort: 9121
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: redis
        serviceAccountName: redis
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 493
            name: redis-scripts
          name: start-scripts
        - configMap:
            defaultMode: 493
            name: redis-health
          name: health
        - configMap:
            defaultMode: 420
            name: redis-configuration
          name: config
        - emptyDir: {}
          name: redis-tmp-conf
        - emptyDir: {}
          name: tmp
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-redis-master
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-19T07:44:28Z"
      lastUpdateTime: "2025-09-19T07:50:53Z"
      message: ReplicaSet "redis-master-77647c7dcf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T19:04:48Z"
      lastUpdateTime: "2025-09-23T19:04:48Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-19T03:48:12Z"
    generation: 5
    labels:
      app: charts
      kustomize.toolkit.fluxcd.io/name: helm-registry
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      pickles: trout
    name: charts
    namespace: flux-system
    resourceVersion: "10032678"
    uid: 709519f6-30ab-4526-9842-b622849dfaee
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: charts
    strategy:
      rollingUpdate:
        maxSurge: 100%
        maxUnavailable: 50%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: charts
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
          imagePullPolicy: Always
          name: helm-registry
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 500m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-19T04:15:19Z"
      lastUpdateTime: "2025-09-19T04:15:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-19T03:48:12Z"
      lastUpdateTime: "2025-09-19T20:48:38Z"
      message: ReplicaSet "charts-7f5c8564d7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 5
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-08T20:08:16Z"
    generation: 7
    labels:
      app.kubernetes.io/component: helm-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helm-controller
    namespace: flux-system
    resourceVersion: "9539090"
    uid: eafd0077-d5cf-4070-9293-55aeab1d129b
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: helm-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: helm-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - helm-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/helm-controller:v1.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: helm-controller
        serviceAccountName: helm-controller
        terminationGracePeriodSeconds: 600
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-19T04:16:33Z"
      lastUpdateTime: "2025-09-19T04:16:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-08T20:08:16Z"
      lastUpdateTime: "2025-09-22T19:43:56Z"
      message: ReplicaSet "helm-controller-7cfbb6d6c9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-22T19:39:56Z"
    generation: 4
    labels:
      app.kubernetes.io/component: image-automation-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: image-automation-controller
    namespace: flux-system
    resourceVersion: "10032757"
    uid: bf8f81f5-fdc6-4c4e-8c57-b8b77ed0de18
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: image-automation-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: image-automation-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - image-automation-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/image-automation-controller:v0.41.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: image-automation-controller
        serviceAccountName: image-automation-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-22T19:39:56Z"
      lastUpdateTime: "2025-09-22T19:43:52Z"
      message: ReplicaSet "image-automation-controller-78b9bc8df6" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:23Z"
      lastUpdateTime: "2025-09-23T18:58:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-22T19:39:57Z"
    generation: 4
    labels:
      app.kubernetes.io/component: image-reflector-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: image-reflector-controller
    namespace: flux-system
    resourceVersion: "10032750"
    uid: dc4fe98f-73a0-41a8-a1d4-0a28a893b291
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: image-reflector-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: image-reflector-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - image-reflector-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/image-reflector-controller:v0.35.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
          - mountPath: /data
            name: data
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: image-reflector-controller
        serviceAccountName: image-reflector-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
        - emptyDir: {}
          name: data
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-22T19:39:57Z"
      lastUpdateTime: "2025-09-22T19:43:52Z"
      message: ReplicaSet "image-reflector-controller-6cf8b4584c" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:23Z"
      lastUpdateTime: "2025-09-23T18:58:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-08T20:08:36Z"
    generation: 7
    labels:
      app.kubernetes.io/component: kustomize-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: kustomize-controller
    namespace: flux-system
    resourceVersion: "10032723"
    uid: 5c9955b7-c8a6-46f0-a943-8549d98bce78
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kustomize-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: kustomize-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kustomize-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=debug
          - --log-encoding=json
          - --enable-leader-election
          - --requeue-dependency=10s
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: kustomize-controller
        serviceAccountName: kustomize-controller
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-08T20:08:37Z"
      lastUpdateTime: "2025-09-22T19:43:59Z"
      message: ReplicaSet "kustomize-controller-669b8bf874" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:22Z"
      lastUpdateTime: "2025-09-23T18:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-08T20:09:41Z"
    generation: 7
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: notification-controller
    namespace: flux-system
    resourceVersion: "10032701"
    uid: cfd03b31-4110-46db-88f5-84ae2964d2f8
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: notification-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: notification-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - notification-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/notification-controller:v1.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 9292
            name: http-webhook
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: notification-controller
        serviceAccountName: notification-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-08T20:09:41Z"
      lastUpdateTime: "2025-09-22T19:43:55Z"
      message: ReplicaSet "notification-controller-b877689d5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:22Z"
      lastUpdateTime: "2025-09-23T18:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 7
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-08T20:11:42Z"
    generation: 5
    labels:
      app.kubernetes.io/component: source-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: source-controller
    namespace: flux-system
    resourceVersion: "10032710"
    uid: 5189ae58-7a50-43b1-a932-d7695c2f4408
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: source-controller
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: source-controller
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: source-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          - --storage-path=/data
          - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TUF_ROOT
            value: /tmp/.sigstore
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/source-controller:v1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: source-controller
        serviceAccountName: source-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-08T20:11:42Z"
      lastUpdateTime: "2025-09-22T19:40:03Z"
      message: ReplicaSet "source-controller-6d599bb949" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:22Z"
      lastUpdateTime: "2025-09-23T18:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-29T14:54:58Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      kubernetes.io/name: CoreDNS
    name: coredns
    namespace: kube-system
    resourceVersion: "7825173"
    uid: 61f1bb3a-b2d6-4a30-8e1f-a2b87a9d031b
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-08-29T15:30:53Z"
      lastUpdateTime: "2025-08-29T15:30:53Z"
      message: ReplicaSet "coredns-7b8b87fbd8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-19T04:15:19Z"
      lastUpdateTime: "2025-09-19T04:15:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-02T16:39:38Z"
    generation: 1
    labels:
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
    name: ebs-csi-controller
    namespace: kube-system
    resourceVersion: "7825445"
    uid: e5a92e28-f48d-42e9-ac66-a072484ad1a5
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ebs-csi-controller
        app.kubernetes.io/name: aws-ebs-csi-driver
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ebs-csi-controller
          app.kubernetes.io/component: csi-driver
          app.kubernetes.io/managed-by: EKS
          app.kubernetes.io/name: aws-ebs-csi-driver
          app.kubernetes.io/version: 1.48.0
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                  - hybrid
              weight: 1
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ebs-csi-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - controller
          - --endpoint=$(CSI_ENDPOINT)
          - --k8s-tag-cluster-id=dev-2025
          - --batching=true
          - --logging-format=text
          - --user-agent-extra=eks
          - --v=2
          env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          - name: CSI_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: key_id
                name: aws-secret
                optional: true
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: access_key
                name: aws-secret
                optional: true
          - name: AWS_EC2_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: endpoint
                name: aws-meta
                optional: true
          - name: AWS_SAGEMAKER_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: sagemaker_endpoint
                name: aws-meta
                optional: true
          - name: AWS_REGION
            value: us-east-2
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: ebs-plugin
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --timeout=60s
          - --csi-address=$(ADDRESS)
          - --v=2
          - --feature-gates=Topology=true
          - --extra-create-metadata
          - --leader-election=true
          - --default-fstype=ext4
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --worker-threads=100
          - --retry-interval-max=30m
          - --feature-gates=VolumeAttributesClass=true
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner:v5.3.0-eksbuild.4
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --timeout=6m
          - --csi-address=$(ADDRESS)
          - --v=2
          - --leader-election=true
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --worker-threads=100
          - --retry-interval-max=5m
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher:v4.9.0-eksbuild.4
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --leader-election=true
          - --v=2
          - --extra-create-metadata
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --worker-threads=100
          - --retry-interval-max=30m
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter:v8.3.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: csi-snapshotter
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --timeout=60s
          - --extra-modify-metadata
          - --csi-address=$(ADDRESS)
          - --v=2
          - --handle-volume-inuse-error=false
          - --leader-election=true
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --workers=100
          - --retry-interval-max=30m
          - --feature-gates=VolumeAttributesClass=true
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer:v1.14.0-eksbuild.4
          imagePullPolicy: IfNotPresent
          name: csi-resizer
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --csi-address=/csi/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: ebs-csi-controller-sa
        serviceAccountName: ebs-csi-controller-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
          tolerationSeconds: 300
        volumes:
        - emptyDir: {}
          name: socket-dir
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-02T16:39:38Z"
      lastUpdateTime: "2025-09-02T16:39:57Z"
      message: ReplicaSet "ebs-csi-controller-85857479c4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-19T04:15:26Z"
      lastUpdateTime: "2025-09-19T04:15:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-19T03:54:36Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/version: 0.7.2
    name: metrics-server
    namespace: kube-system
    resourceVersion: "7825537"
    uid: 5ba62047-3ff4-4839-abe1-caa49ad486c9
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: metrics-server
        app.kubernetes.io/name: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: metrics-server
          app.kubernetes.io/name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --secure-port=10251
          - --cert-dir=/tmp
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server:v0.8.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10251
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: metrics-server
              app.kubernetes.io/name: metrics-server
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-19T03:54:36Z"
      lastUpdateTime: "2025-09-19T03:55:17Z"
      message: ReplicaSet "metrics-server-7954c754b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-19T04:15:41Z"
      lastUpdateTime: "2025-09-19T04:15:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-02T16:46:59Z"
    generation: 1
    name: snapshot-controller
    namespace: kube-system
    resourceVersion: "7825476"
    uid: 3c8a39b7-6c1d-4473-8baf-df1425911909
  spec:
    minReadySeconds: 15
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: snapshot-controller
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: snapshot-controller
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                  - hybrid
              weight: 1
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - snapshot-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --leader-election=true
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller:v8.3.0-eksbuild.1
          imagePullPolicy: IfNotPresent
          name: snapshot-controller
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: snapshot-controller
        serviceAccountName: snapshot-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
          tolerationSeconds: 300
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-02T16:46:59Z"
      lastUpdateTime: "2025-09-02T16:47:17Z"
      message: ReplicaSet "snapshot-controller-75cc6b99db" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-19T04:15:35Z"
      lastUpdateTime: "2025-09-19T04:15:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-19T21:27:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: "11.5"
      helm.sh/chart: grafana-8.3.6
      helm.toolkit.fluxcd.io/name: grafana
      helm.toolkit.fluxcd.io/namespace: monitoring
    name: grafana
    namespace: monitoring
    resourceVersion: "8167238"
    uid: ca85f8cc-50e3-46f7-a936-6d7fc849d039
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: fb04cde2bf3f497cd0599860d82e95106311c4e667bf85e8e83eefb98134c397
          kubectl.kubernetes.io/default-container: grafana
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          envFrom:
          - secretRef:
              name: grafana-env-46f8b28mk5
          - configMapRef:
              name: grafana-env-k6cb5ffkht
              optional: false
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        initContainers:
        - command:
          - chown
          - -R
          - 472:472
          - /var/lib/grafana
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
          imagePullPolicy: IfNotPresent
          name: init-chown-data
          resources: {}
          securityContext:
            capabilities:
              add:
              - CHOWN
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana
            name: storage
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - name: storage
          persistentVolumeClaim:
            claimName: grafana
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-19T21:28:19Z"
      lastUpdateTime: "2025-09-19T21:28:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-19T21:27:56Z"
      lastUpdateTime: "2025-09-19T21:28:19Z"
      message: ReplicaSet "grafana-749d597bc4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 12.0.2
      helm.sh/chart: grafana-9.2.10
    name: victoria-metrics-grafana
    namespace: monitoring
    resourceVersion: "10032914"
    uid: 6505c128-2373-4641-b2bd-541a96235914
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: victoria-metrics
        app.kubernetes.io/name: grafana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: 89ec8c9c059a6a61286174130a15d183be69b7a486acc8437afbaf5d790a0ddd
          checksum/secret: 198af27b92832f7bd2144d122a318809af6c7290eae061236e639e66373b235e
          kubectl.kubernetes.io/default-container: grafana
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 12.0.2
          helm.sh/chart: grafana-9.2.10
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: METHOD
            value: WATCH
          - name: LABEL
            value: grafana_dashboard
          - name: FOLDER
            value: /var/lib/grafana/dashboards/default
          - name: RESOURCE
            value: both
          - name: REQ_USERNAME
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: victoria-metrics-grafana
          - name: REQ_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: victoria-metrics-grafana
          - name: REQ_URL
            value: http://localhost:3000/api/admin/provisioning/dashboards/reload
          - name: REQ_METHOD
            value: POST
          image: quay.io/kiwigrid/k8s-sidecar:1.30.3
          imagePullPolicy: IfNotPresent
          name: grafana-sc-dashboard
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana/dashboards
            name: sc-dashboard-volume
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: victoria-metrics-grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: victoria-metrics-grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:12.0.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
          - mountPath: /var/lib/grafana/dashboards
            name: sc-dashboard-volume
          - mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
            name: sc-dashboard-provider
            subPath: provider.yaml
          - mountPath: /etc/grafana/provisioning/datasources
            name: sc-datasources-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        initContainers:
        - env:
          - name: METHOD
            value: LIST
          - name: LABEL
            value: grafana_datasource
          - name: FOLDER
            value: /etc/grafana/provisioning/datasources
          - name: RESOURCE
            value: both
          image: quay.io/kiwigrid/k8s-sidecar:1.30.3
          imagePullPolicy: IfNotPresent
          name: grafana-init-sc-datasources
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/provisioning/datasources
            name: sc-datasources-volume
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: victoria-metrics-grafana
        serviceAccountName: victoria-metrics-grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: victoria-metrics-grafana
          name: config
        - emptyDir: {}
          name: storage
        - emptyDir: {}
          name: sc-dashboard-volume
        - configMap:
            defaultMode: 420
            name: victoria-metrics-grafana-config-dashboards
          name: sc-dashboard-provider
        - emptyDir: {}
          name: sc-datasources-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T17:38:29Z"
      lastUpdateTime: "2025-09-23T17:38:45Z"
      message: ReplicaSet "victoria-metrics-grafana-5454674d9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:40Z"
      lastUpdateTime: "2025-09-23T18:58:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-6.0.0
    name: victoria-metrics-kube-state-metrics
    namespace: monitoring
    resourceVersion: "10032861"
    uid: 43370b79-d778-42d4-8fe5-b28fccfc9ee0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: victoria-metrics
        app.kubernetes.io/name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-6.0.0
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: victoria-metrics-kube-state-metrics
        serviceAccountName: victoria-metrics-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T17:38:29Z"
      lastUpdateTime: "2025-09-23T17:38:41Z"
      message: ReplicaSet "victoria-metrics-kube-state-metrics-6bff77c8c9" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:33Z"
      lastUpdateTime: "2025-09-23T18:58:33Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-metrics-operator
      app.kubernetes.io/version: v0.62.0
      helm.sh/chart: victoria-metrics-operator-0.52.1
    name: victoria-metrics-victoria-metrics-operator
    namespace: monitoring
    resourceVersion: "10032893"
    uid: c3675cba-89b5-449d-8994-8ab4dba87c89
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: victoria-metrics
        app.kubernetes.io/name: victoria-metrics-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: victoria-metrics-operator
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --zap-log-level=info
          - --leader-elect
          - --health-probe-bind-address=:8081
          - --webhook.enable=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: victoria-metrics-operator
          - name: VM_ENABLEDPROMETHEUSCONVERTEROWNERREFERENCES
            value: "false"
          image: victoriametrics/operator:v0.62.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            tcpSocket:
              port: probe
            timeoutSeconds: 5
          name: operator
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8081
            name: probe
            protocol: TCP
          - containerPort: 9443
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: probe
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: victoria-metrics-victoria-metrics-operator
        serviceAccountName: victoria-metrics-victoria-metrics-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: victoria-metrics-victoria-metrics-operator-validation
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T17:38:29Z"
      lastUpdateTime: "2025-09-23T17:38:46Z"
      message: ReplicaSet "victoria-metrics-victoria-metrics-operator-689b7d85f" has
        successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:38Z"
      lastUpdateTime: "2025-09-23T18:58:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmagent
      app.kubernetes.io/version: v1.125.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmagent-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMAgent
      name: vm
      uid: d2686826-d5a7-4f29-b546-1f9ba18d1a0e
    resourceVersion: "10001895"
    uid: 675e97fa-75d3-4dfe-911e-7631bbb38b73
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/instance: vm
        app.kubernetes.io/name: vmagent
        managed-by: vm-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring
          app.kubernetes.io/instance: vm
          app.kubernetes.io/name: vmagent
          managed-by: vm-operator
      spec:
        containers:
        - args:
          - --reload-url=http://localhost:8429/-/reload
          - --config-envsubst-file=/etc/vmagent/config_out/vmagent.env.yaml
          - --config-file=/etc/vmagent/config/vmagent.yaml.gz
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
          imagePullPolicy: IfNotPresent
          name: config-reloader
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/vmagent/config_out
            name: config-out
          - mountPath: /etc/vmagent/config
            name: config
        - args:
          - -httpListenAddr=:8429
          - -promscrape.config=/etc/vmagent/config_out/vmagent.env.yaml
          - -promscrape.dropOriginalLabels=true
          - -promscrape.streamParse=true
          - -remoteWrite.maxDiskUsagePerURL=1073741824
          - -remoteWrite.tmpDataPath=/tmp/vmagent-remotewrite-data
          - -remoteWrite.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428/api/v1/write
          image: victoriametrics/vmagent:v1.125.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8429
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: vmagent
          ports:
          - containerPort: 8429
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8429
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp/vmagent-remotewrite-data
            name: persistent-queue-data
          - mountPath: /etc/vmagent/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/vmagent-tls/certs
            name: tls-assets
            readOnly: true
          - mountPath: /etc/vmagent/config
            name: config
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -c
          - gunzip -c /etc/vmagent/config/vmagent.yaml.gz > /etc/vmagent/config_out/vmagent.env.yaml
          command:
          - /bin/sh
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
          imagePullPolicy: IfNotPresent
          name: config-init
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/vmagent/config
            name: config
          - mountPath: /etc/vmagent/config_out
            name: config-out
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vmagent-vm
        serviceAccountName: vmagent-vm
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: persistent-queue-data
        - name: tls-assets
          secret:
            defaultMode: 420
            secretName: tls-assets-vmagent-vm
        - emptyDir: {}
          name: config-out
        - name: config
          secret:
            defaultMode: 420
            secretName: vmagent-vm
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T17:38:51Z"
      lastUpdateTime: "2025-09-23T17:38:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-23T17:38:47Z"
      lastUpdateTime: "2025-09-23T17:38:51Z"
      message: ReplicaSet "vmagent-vm-6d756f7f89" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:48Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmalert
      app.kubernetes.io/version: v1.125.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmalert-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMAlert
      name: vm
      uid: a22e4625-8d95-4d15-8e9e-082176d6a2c9
    resourceVersion: "10032730"
    uid: 08168708-396a-46c4-9644-909705c6255a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/instance: vm
        app.kubernetes.io/name: vmalert
        managed-by: vm-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring
          app.kubernetes.io/instance: vm
          app.kubernetes.io/name: vmalert
          managed-by: vm-operator
      spec:
        containers:
        - args:
          - -datasource.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428
          - -evaluationInterval=20s
          - -external.alert.source=explore?left={"datasource":"VictoriaMetrics","queries":[{"expr":{{
            .Expr|jsonEscape|queryEscape }},"refId":"A"}],"range":{"from":"{{ .ActiveAt.UnixMilli
            }}","to":"now"}}
          - -external.url=http://grafana.domain.com
          - -http.pathPrefix=/
          - -httpListenAddr=:8080
          - -notifier.url=http://vmalertmanager-vm-0.vmalertmanager-vm.monitoring.svc.cluster.local.:9093
          - -remoteRead.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428
          - -remoteWrite.disablePathAppend=true
          - -remoteWrite.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428/api/v1/write
          - -rule="/etc/vmalert/config/vm-vm-rulefiles-0/*.yaml"
          image: victoriametrics/vmalert:v1.125.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: vmalert
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/vmalert/remote_secrets
            name: config
            readOnly: true
          - mountPath: /etc/vmalert-tls/certs
            name: tls-assets
            readOnly: true
          - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
            name: vm-vm-rulefiles-0
        - args:
          - -webhook-url=http://localhost:8080/-/reload
          - -volume-dir=/etc/vmalert/config/vm-vm-rulefiles-0
          image: jimmidyson/configmap-reload:v0.3.0
          imagePullPolicy: IfNotPresent
          name: config-reloader
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
            name: vm-vm-rulefiles-0
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vmalert-vm
        serviceAccountName: vmalert-vm
        terminationGracePeriodSeconds: 30
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: vmalert-vm
        - name: tls-assets
          secret:
            defaultMode: 420
            secretName: tls-assets-vmalert-vm
        - configMap:
            defaultMode: 420
            name: vm-vm-rulefiles-0
          name: vm-vm-rulefiles-0
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T17:38:48Z"
      lastUpdateTime: "2025-09-23T17:38:50Z"
      message: ReplicaSet "vmalert-vm-df4f56c4c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T18:58:22Z"
      lastUpdateTime: "2025-09-23T18:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmsingle
      app.kubernetes.io/version: v1.125.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmsingle-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMSingle
      name: vm
      uid: 5dc8f0c8-b8da-4b46-9e4e-56b1fd01879c
    resourceVersion: "10035263"
    uid: 848b3634-eadc-4116-8b13-efc677671a15
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/instance: vm
        app.kubernetes.io/name: vmsingle
        managed-by: vm-operator
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring
          app.kubernetes.io/instance: vm
          app.kubernetes.io/name: vmsingle
          managed-by: vm-operator
      spec:
        containers:
        - args:
          - -httpListenAddr=:8428
          - -retentionPeriod=7
          - -storageDataPath=/victoria-metrics-data
          - -vmalert.proxyURL=http://vmalert-vm.monitoring.svc.cluster.local.:8080
          image: victoriametrics/victoria-metrics:v1.125.1
          imagePullPolicy: IfNotPresent
          name: vmsingle
          ports:
          - containerPort: 8428
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8428
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1200m
              memory: 1500Mi
            requests:
              cpu: 150m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /victoria-metrics-data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vmsingle-vm
        serviceAccountName: vmsingle-vm
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: vmsingle-vm
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-23T17:38:47Z"
      lastUpdateTime: "2025-09-23T17:38:56Z"
      message: ReplicaSet "vmsingle-vm-586b8b49f9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-23T19:04:29Z"
      lastUpdateTime: "2025-09-23T19:04:29Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aws-loadbalancer-controller
      meta.helm.sh/release-namespace: aws-lbc
    creationTimestamp: "2025-08-30T21:03:06Z"
    generation: 3
    labels:
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/name: aws-load-balancer-controller
      pod-template-hash: 6fbb5b64d8
    name: aws-lbc-6fbb5b64d8
    namespace: aws-lbc
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: aws-lbc
      uid: ee259cfb-6f8f-4e58-a416-da0832add4f6
    resourceVersion: "290086"
    uid: 8eee2f93-9e9d-4d4a-b173-f65cadc88100
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: aws-loadbalancer-controller
        app.kubernetes.io/name: aws-load-balancer-controller
        pod-template-hash: 6fbb5b64d8
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-loadbalancer-controller
          app.kubernetes.io/name: aws-load-balancer-controller
          pod-template-hash: 6fbb5b64d8
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - aws-load-balancer-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --cluster-name=dev-2025
          - --ingress-class=alb
          - --aws-region=us-east-2
          - --aws-vpc-id=vpc-0e580f5ae96de51c7
          image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-load-balancer-controller
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 8080
            name: metrics-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readyz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
        serviceAccount: aws-lbc
        serviceAccountName: aws-lbc
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: aws-load-balancer-tls
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: aws-loadbalancer-controller
      meta.helm.sh/release-namespace: aws-lbc
    creationTimestamp: "2025-08-31T17:49:15Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/name: aws-load-balancer-controller
      pod-template-hash: 868c8d6897
    name: aws-lbc-868c8d6897
    namespace: aws-lbc
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: aws-lbc
      uid: ee259cfb-6f8f-4e58-a416-da0832add4f6
    resourceVersion: "7825444"
    uid: 5f8841ae-a80c-4011-8e47-2f2597eb196c
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/instance: aws-loadbalancer-controller
        app.kubernetes.io/name: aws-load-balancer-controller
        pod-template-hash: 868c8d6897
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-08-30T16:45:09-05:00"
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-loadbalancer-controller
          app.kubernetes.io/name: aws-load-balancer-controller
          pod-template-hash: 868c8d6897
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - aws-load-balancer-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --cluster-name=dev-2025
          - --ingress-class=alb
          - --aws-region=us-east-2
          - --aws-vpc-id=vpc-0e580f5ae96de51c7
          - --log-level=error
          - --default-target-type=ip
          - --load-balancer-class=service.k8s.aws/nlb
          image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-load-balancer-controller
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 8080
            name: metrics-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readyz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
        serviceAccount: aws-lbc
        serviceAccountName: aws-lbc
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: aws-load-balancer-tls
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: aws-loadbalancer-controller
      meta.helm.sh/release-namespace: aws-lbc
    creationTimestamp: "2025-08-30T21:45:09Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: aws-loadbalancer-controller
      app.kubernetes.io/name: aws-load-balancer-controller
      pod-template-hash: 89fbcbfbf
    name: aws-lbc-89fbcbfbf
    namespace: aws-lbc
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: aws-lbc
      uid: ee259cfb-6f8f-4e58-a416-da0832add4f6
    resourceVersion: "524121"
    uid: 689533c0-b820-4b07-942c-f595cfe2b2c4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: aws-loadbalancer-controller
        app.kubernetes.io/name: aws-load-balancer-controller
        pod-template-hash: 89fbcbfbf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-08-30T16:45:09-05:00"
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: aws-loadbalancer-controller
          app.kubernetes.io/name: aws-load-balancer-controller
          pod-template-hash: 89fbcbfbf
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - aws-load-balancer-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --cluster-name=dev-2025
          - --ingress-class=alb
          - --aws-region=us-east-2
          - --aws-vpc-id=vpc-0e580f5ae96de51c7
          image: public.ecr.aws/eks/aws-load-balancer-controller:v2.13.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: aws-load-balancer-controller
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 8080
            name: metrics-server
            protocol: TCP
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readyz
              port: 61779
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
        serviceAccount: aws-lbc
        serviceAccountName: aws-lbc
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: aws-load-balancer-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T07:08:04Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      component: controller
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 64dfc46ffc
    name: cert-manager-64dfc46ffc
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager
      uid: 08ecf079-b327-49eb-8c59-edf1a7fca5d6
    resourceVersion: "10368096"
    uid: 706a2d59-ce40-4ddc-a245-38d431e2cc1c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
        pod-template-hash: 64dfc46ffc
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.18.2
          component: controller
          helm.sh/chart: cert-manager-v1.18.2
          pod-template-hash: 64dfc46ffc
      spec:
        containers:
        - args:
          - --v=5
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2
          - --default-issuer-name=le-production
          - --default-issuer-kind=ClusterIssuer
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T04:19:58Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      component: controller
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 67c997c66
    name: cert-manager-67c997c66
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager
      uid: 08ecf079-b327-49eb-8c59-edf1a7fca5d6
    resourceVersion: "7829683"
    uid: f84d0c76-f7c5-4619-be1d-d8e7462c974b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
        pod-template-hash: 67c997c66
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.18.2
          component: controller
          helm.sh/chart: cert-manager-v1.18.2
          pod-template-hash: 67c997c66
      spec:
        containers:
        - args:
          - --v=4
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2
          - --default-issuer-name=le-production
          - --default-issuer-kind=ClusterIssuer
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T04:27:38Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      component: controller
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 76bc6c784f
    name: cert-manager-76bc6c784f
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager
      uid: 08ecf079-b327-49eb-8c59-edf1a7fca5d6
    resourceVersion: "7884848"
    uid: 10698f89-3fe7-4487-b312-b7715fd75f52
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
        pod-template-hash: 76bc6c784f
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.18.2
          component: controller
          helm.sh/chart: cert-manager-v1.18.2
          pod-template-hash: 76bc6c784f
      spec:
        containers:
        - args:
          - --v=9
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2
          - --default-issuer-name=le-production
          - --default-issuer-kind=ClusterIssuer
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    generation: 2
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      component: controller
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 7dd5b59876
    name: cert-manager-7dd5b59876
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager
      uid: 08ecf079-b327-49eb-8c59-edf1a7fca5d6
    resourceVersion: "7827187"
    uid: b5b65e4f-5655-4287-b751-d8f8dcdf8a0d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
        pod-template-hash: 7dd5b59876
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.18.2
          component: controller
          helm.sh/chart: cert-manager-v1.18.2
          pod-template-hash: 7dd5b59876
      spec:
        containers:
        - args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2
          - --default-issuer-name=le-production
          - --default-issuer-kind=ClusterIssuer
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-24T09:40:56Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.18.2
      component: controller
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 867ff9dbb8
    name: cert-manager-867ff9dbb8
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager
      uid: 08ecf079-b327-49eb-8c59-edf1a7fca5d6
    resourceVersion: "10368083"
    uid: df962b13-fa2c-49cc-829a-1e2ecaec005e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
        pod-template-hash: 867ff9dbb8
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.18.2
          component: controller
          helm.sh/chart: cert-manager-v1.18.2
          pod-template-hash: 867ff9dbb8
      spec:
        containers:
        - args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2
          - --default-issuer-name=le-production
          - --default-issuer-kind=ClusterIssuer
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager
        serviceAccountName: cert-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    generation: 1
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.18.2
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 6dddf8d484
    name: cert-manager-cainjector-6dddf8d484
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager-cainjector
      uid: 89f30812-c60d-44cb-bc89-5451cbb93f76
    resourceVersion: "7825240"
    uid: 83cedd58-9940-4661-a36a-3fbeb5c0c2e4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cainjector
        pod-template-hash: 6dddf8d484
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cainjector
          app.kubernetes.io/component: cainjector
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: cainjector
          app.kubernetes.io/version: v1.18.2
          helm.sh/chart: cert-manager-v1.18.2
          pod-template-hash: 6dddf8d484
      spec:
        containers:
        - args:
          - --v=2
          - --leader-election-namespace=kube-system
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-cainjector:v1.18.2
          imagePullPolicy: IfNotPresent
          name: cert-manager-cainjector
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-cainjector
        serviceAccountName: cert-manager-cainjector
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-09-19T03:50:14Z"
    generation: 1
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.18.2
      component: webhook
      helm.sh/chart: cert-manager-v1.18.2
      pod-template-hash: 84b958b657
    name: cert-manager-webhook-84b958b657
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager-webhook
      uid: 129ddd34-0353-4289-8b98-afccd049b418
    resourceVersion: "7825516"
    uid: 185aa557-400e-4d9b-9ad9-4e1c9a81142a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: webhook
        pod-template-hash: 84b958b657
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: webhook
          app.kubernetes.io/component: webhook
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: webhook
          app.kubernetes.io/version: v1.18.2
          component: webhook
          helm.sh/chart: cert-manager-v1.18.2
          pod-template-hash: 84b958b657
      spec:
        containers:
        - args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
          - --dynamic-serving-dns-names=cert-manager-webhook
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-webhook:v1.18.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cert-manager-webhook
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          - containerPort: 6080
            name: healthcheck
            protocol: TCP
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthcheck
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-webhook
        serviceAccountName: cert-manager-webhook
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-24T09:33:33Z"
    generation: 2
    labels:
      app: tester
      pod-template-hash: 768db6f649
    name: tester-768db6f649
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: tester
      uid: fbac1c1d-431d-4aef-9887-55d32035cbd2
    resourceVersion: "10365437"
    uid: 62f98a1d-65cf-4856-a919-cd64cc2dc99d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: tester
        pod-template-hash: 768db6f649
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: tester
          pod-template-hash: 768db6f649
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/misc:util-pg16
          imagePullPolicy: IfNotPresent
          name: misc
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-24T09:34:11Z"
    generation: 1
    labels:
      app: tester
      pod-template-hash: 76fd8fd9d9
    name: tester-76fd8fd9d9
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: tester
      uid: fbac1c1d-431d-4aef-9887-55d32035cbd2
    resourceVersion: "10365427"
    uid: 89f40ab9-483e-4522-815f-0a5297c36b65
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: tester
        pod-template-hash: 76fd8fd9d9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: tester
          pod-template-hash: 76fd8fd9d9
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/misc:util-pg16
          imagePullPolicy: IfNotPresent
          name: misc
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cert-manager
        serviceAccountName: cert-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2025-09-24T10:19:18Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 686ff87b74
    name: celery-686ff87b74
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "10382808"
    uid: bb55f22e-12e8-487c-bb63-9925c6443ec1
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 686ff87b74
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 686ff87b74
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-09-19T07:25:56Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 698495fddc
    name: celery-698495fddc
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7890994"
    uid: 989049bc-e92e-4aba-9f91-6e2f1514ca20
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 698495fddc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 698495fddc
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-19T06:01:34Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 698c854595
    name: celery-698c854595
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7860938"
    uid: 9dfbcc91-761e-4148-b861-97d40eb02ee5
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 698c854595
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 698c854595
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:v0.0.23
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "9"
      deployment.kubernetes.io/revision-history: "7"
    creationTimestamp: "2025-09-19T07:52:17Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 69944fd866
    name: celery-69944fd866
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7959000"
    uid: 8119733d-d053-4572-a5bb-76d1f54be154
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 69944fd866
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 69944fd866
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-2mmtb52hhc
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-19T06:10:23Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 6bdf7b79b
    name: celery-6bdf7b79b
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7864150"
    uid: a7b56f8a-18c9-49f3-b3b6-a85029d431ff
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 6bdf7b79b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 6bdf7b79b
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2025-09-19T10:35:58Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 744dbd5977
    name: celery-744dbd5977
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7953574"
    uid: 231aea37-e945-40cb-8a6d-42ff5a89f475
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 744dbd5977
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 744dbd5977
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-h2kbh5k9fm
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-19T06:30:49Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 7ccc567654
    name: celery-7ccc567654
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7871372"
    uid: a3d7d438-f46a-480a-ba02-2cfac037c233
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 7ccc567654
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 7ccc567654
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-19T06:19:28Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 7dd646746d
    name: celery-7dd646746d
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7867298"
    uid: 5692668c-e26c-4c72-bdec-cbe929021b74
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 7dd646746d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 7dd646746d
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-19T06:04:05Z"
    generation: 1
    labels:
      app: foundation
      component: queue
      env: dev
      pod-template-hash: 7f7df58445
    name: celery-7f7df58445
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: celery
      uid: 61d177c3-3066-4154-8be4-d01d8fba830d
    resourceVersion: "7861894"
    uid: 58355433-7cc0-4f10-862f-52682b48bcf7
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: queue
        env: dev
        pod-template-hash: 7f7df58445
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: queue
          env: dev
          pod-template-hash: 7f7df58445
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - -A
          - core
          - worker
          - -l
          - info
          command:
          - celery
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        priorityClassName: celery-default
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2025-09-24T10:19:18Z"
    generation: 1
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 576956ff46
    name: foundation-576956ff46
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "10382835"
    uid: 9eedeb50-2190-4213-843c-ce52dfd1de04
  spec:
    minReadySeconds: 5
    replicas: 1
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 576956ff46
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 576956ff46
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-cfhd8296kk
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-b5t7dm96f7
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-09-19T07:02:41Z"
    generation: 3
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 5998db9bcf
    name: foundation-5998db9bcf
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7883291"
    uid: 710c5376-e967-459d-bfa8-b7820431f574
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 5998db9bcf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 5998db9bcf
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-8btmt7cmtf
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-19T07:01:17Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 5f9755555
    name: foundation-5f9755555
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7882839"
    uid: 4a6d14b0-7818-4cad-8a5b-ce10ac3874d0
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 5f9755555
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 5f9755555
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-5m8bm992ch
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2025-09-19T10:52:09Z"
    generation: 1
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 5fd4b8f9bb
    name: foundation-5fd4b8f9bb
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7959119"
    uid: 8e3d8c84-7f8f-4833-847d-1095e495e26d
  spec:
    minReadySeconds: 5
    replicas: 1
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 5fd4b8f9bb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 5fd4b8f9bb
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-2mmtb52hhc
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-2mmtb52hhc
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-2mmtb52hhc
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-b5t7dm96f7
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2025-09-19T10:39:49Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 64f97fff5
    name: foundation-64f97fff5
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7959131"
    uid: fe934d07-24de-4ae8-8b06-ba1c33e6bdea
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 64f97fff5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 64f97fff5
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-h2kbh5k9fm
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-h2kbh5k9fm
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-h2kbh5k9fm
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-b5t7dm96f7
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "7"
    creationTimestamp: "2025-09-19T07:05:43Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 66547769bf
    name: foundation-66547769bf
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7887963"
    uid: 695669b5-53de-4407-844c-a2c5d4bd80b4
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 66547769bf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 66547769bf
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-8btmt7cmtf
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2025-09-19T10:35:58Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 69d6ddc4b5
    name: foundation-69d6ddc4b5
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7955032"
    uid: d2760a72-4157-43f3-8d2c-789115b06044
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 69d6ddc4b5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 69d6ddc4b5
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-h2kbh5k9fm
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-h2kbh5k9fm
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-h2kbh5k9fm
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-24789gfh24
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2025-09-19T07:25:56Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 748bc7699f
    name: foundation-748bc7699f
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7900328"
    uid: 29047f38-471c-4ed2-803c-cafd85193cd8
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 748bc7699f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 748bc7699f
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-24789gfh24
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-09-19T07:03:51Z"
    generation: 3
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 765f8dccb8
    name: foundation-765f8dccb8
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7884105"
    uid: f0de35f0-07df-41e3-9901-1bfc359a019a
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 765f8dccb8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 765f8dccb8
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - command:
          - sleep
          - inf
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-8btmt7cmtf
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2025-09-19T07:18:48Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 7756cd6f8
    name: foundation-7756cd6f8
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7891288"
    uid: b36d0527-201a-4ac2-8fa9-54c1b0709c97
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 7756cd6f8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 7756cd6f8
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-24789gfh24
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2025-09-19T07:16:45Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 7b865b799
    name: foundation-7b865b799
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7888718"
    uid: 1caf562f-92d9-43bd-885b-4c7aa75172c3
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 7b865b799
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 7b865b799
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-m447kc9c2m
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.55
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-c2ghd69g5g
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2025-09-19T07:52:17Z"
    generation: 2
    labels:
      app: foundation
      component: django
      env: dev
      pod-template-hash: 7dc585476
    name: foundation-7dc585476
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: foundation
      uid: c6ae00c8-066b-479b-8999-9170cc269a12
    resourceVersion: "7953692"
    uid: 027de174-9385-49ad-a95a-d69b4d2f0abb
  spec:
    minReadySeconds: 5
    replicas: 0
    selector:
      matchLabels:
        app: foundation
        component: django
        env: dev
        pod-template-hash: 7dc585476
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: foundation
          component: django
          env: dev
          pod-template-hash: 7dc585476
      spec:
        automountServiceAccountToken: false
        containers:
        - envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-2mmtb52hhc
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              memory: 640Mi
            requests:
              cpu: 450m
              memory: 640Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /code/deployed_static
            name: static
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/nginx:1.29.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run
            name: run
          - mountPath: /etc/nginx/nginx.conf
            name: proxy-config
            subPath: nginx.conf
          - mountPath: /code/deployed_static
            name: static
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        initContainers:
        - args:
          - migrate
          - --no-input
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-2mmtb52hhc
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: migrate
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - collectstatic
          - --noinput
          command:
          - django-admin
          envFrom:
          - secretRef:
              name: env-thk9f96mkk
          - configMapRef:
              name: env-2mmtb52hhc
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/foundation:0.0.54b
          imagePullPolicy: IfNotPresent
          name: collectstatic
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /code/deployed_static
            name: static
        priorityClassName: django
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache
        - configMap:
            defaultMode: 416
            name: proxy-config-24789gfh24
            optional: false
          name: proxy-config
        - emptyDir: {}
          name: run
        - emptyDir: {}
          name: static
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: redis
      meta.helm.sh/release-namespace: dev-foundation
    creationTimestamp: "2025-09-19T07:49:29Z"
    generation: 1
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      helm.sh/chart: redis-16.13.0
      pod-template-hash: 77647c7dcf
    name: redis-master-77647c7dcf
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-master
      uid: 5cb673d8-1be1-4c50-8037-ac6a5c32eab1
    resourceVersion: "10035391"
    uid: 84b866fa-83bf-4132-8661-c8af22e417c7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: redis
        app.kubernetes.io/name: redis
        pod-template-hash: 77647c7dcf
    template:
      metadata:
        annotations:
          checksum/configmap: bfbcca6a30caf03dc0d5830d5745825cc1419f948971f31682e08f9e8935a62c
          checksum/health: 04e9b0b9fd0b12243a38f8e04b04f67886cf98315eab9f45ffa4e848b2a31f05
          checksum/scripts: 041214bdb4c892bf83f4c9a6f3b97f7d0ba06aefd0b31c222e3810da5752880d
          checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          prometheus.io/port: "9121"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: master
          app.kubernetes.io/instance: redis
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: redis
          helm.sh/chart: redis-16.13.0
          pod-template-hash: 77647c7dcf
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: master
                    app.kubernetes.io/instance: redis
                    app.kubernetes.io/name: redis
                namespaces:
                - dev-foundation
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - -c
          - /opt/bitnami/scripts/start-scripts/start-master.sh
          command:
          - /bin/bash
          env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: REDIS_REPLICATION_MODE
            value: master
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
          - name: REDIS_TLS_ENABLED
            value: "no"
          - name: REDIS_PORT
            value: "6379"
          image: docker.io/bitnami/redis:6.2.7-debian-11-r3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 6
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - /health/ping_readiness_local.sh 1
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/bitnami/scripts/start-scripts
            name: start-scripts
          - mountPath: /health
            name: health
          - mountPath: /data
            name: redis-data
          - mountPath: /opt/bitnami/redis/mounted-etc
            name: config
          - mountPath: /opt/bitnami/redis/etc/
            name: redis-tmp-conf
          - mountPath: /tmp
            name: tmp
        - command:
          - /bin/bash
          - -c
          - |
            if [[ -f '/secrets/redis-password' ]]; then
            export REDIS_PASSWORD=$(cat /secrets/redis-password)
            fi
            redis_exporter
          env:
          - name: REDIS_ALIAS
            value: redis
          image: docker.io/bitnami/redis-exporter:1.40.0-debian-11-r0
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
          - containerPort: 9121
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: redis
        serviceAccountName: redis
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 493
            name: redis-scripts
          name: start-scripts
        - configMap:
            defaultMode: 493
            name: redis-health
          name: health
        - configMap:
            defaultMode: 420
            name: redis-configuration
          name: config
        - emptyDir: {}
          name: redis-tmp-conf
        - emptyDir: {}
          name: tmp
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-redis-master
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: redis
      meta.helm.sh/release-namespace: dev-foundation
    creationTimestamp: "2025-09-19T07:44:28Z"
    generation: 2
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      helm.sh/chart: redis-16.13.0
      pod-template-hash: 85bb5f496c
    name: redis-master-85bb5f496c
    namespace: dev-foundation
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-master
      uid: 5cb673d8-1be1-4c50-8037-ac6a5c32eab1
    resourceVersion: "7899697"
    uid: 0c4f72fe-5301-41c5-b58a-88ffa40c356c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: redis
        app.kubernetes.io/name: redis
        pod-template-hash: 85bb5f496c
    template:
      metadata:
        annotations:
          checksum/configmap: bfbcca6a30caf03dc0d5830d5745825cc1419f948971f31682e08f9e8935a62c
          checksum/health: 04e9b0b9fd0b12243a38f8e04b04f67886cf98315eab9f45ffa4e848b2a31f05
          checksum/scripts: 041214bdb4c892bf83f4c9a6f3b97f7d0ba06aefd0b31c222e3810da5752880d
          checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
          prometheus.io/port: "9121"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: master
          app.kubernetes.io/instance: redis
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: redis
          helm.sh/chart: redis-16.13.0
          pod-template-hash: 85bb5f496c
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: master
                    app.kubernetes.io/instance: redis
                    app.kubernetes.io/name: redis
                namespaces:
                - dev-foundation
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - -c
          - /opt/bitnami/scripts/start-scripts/start-master.sh
          command:
          - /bin/bash
          env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: REDIS_REPLICATION_MODE
            value: master
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
          - name: REDIS_TLS_ENABLED
            value: "no"
          - name: REDIS_PORT
            value: "6379"
          image: docker.io/bitnami/redis:6.2.7-debian-11-r3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 6
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - /health/ping_readiness_local.sh 1
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/bitnami/scripts/start-scripts
            name: start-scripts
          - mountPath: /health
            name: health
          - mountPath: /data
            name: redis-data
          - mountPath: /opt/bitnami/redis/mounted-etc
            name: config
          - mountPath: /opt/bitnami/redis/etc/
            name: redis-tmp-conf
          - mountPath: /tmp
            name: tmp
        - command:
          - /bin/bash
          - -c
          - |
            if [[ -f '/secrets/redis-password' ]]; then
            export REDIS_PASSWORD=$(cat /secrets/redis-password)
            fi
            redis_exporter
          env:
          - name: REDIS_ALIAS
            value: redis
          image: docker.io/bitnami/redis-exporter:1.40.0-debian-11-r0
          imagePullPolicy: IfNotPresent
          name: metrics
          ports:
          - containerPort: 9121
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - image: docker.io/bitnami/bitnami-shell:11-debian-11-r3
          imagePullPolicy: IfNotPresent
          name: init-sysctl
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: redis
        serviceAccountName: redis
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 493
            name: redis-scripts
          name: start-scripts
        - configMap:
            defaultMode: 493
            name: redis-health
          name: health
        - configMap:
            defaultMode: 420
            name: redis-configuration
          name: config
        - emptyDir: {}
          name: redis-tmp-conf
        - emptyDir: {}
          name: tmp
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-redis-master
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-19T07:44:06Z"
    generation: 3
    labels:
      app: charts
      pod-template-hash: 59b48b7d64
    name: charts-59b48b7d64
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: charts
      uid: 709519f6-30ab-4526-9842-b622849dfaee
    resourceVersion: "8151626"
    uid: 31dbbcce-4542-4192-a3e9-337e943ec13d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: charts
        pod-template-hash: 59b48b7d64
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-19T02:44:06-05:00"
        creationTimestamp: null
        labels:
          app: charts
          pod-template-hash: 59b48b7d64
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
          imagePullPolicy: Always
          name: helm-registry
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 500m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-19T20:44:20Z"
    generation: 3
    labels:
      app: charts
      pod-template-hash: 6fbc96cff6
    name: charts-6fbc96cff6
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: charts
      uid: 709519f6-30ab-4526-9842-b622849dfaee
    resourceVersion: "8153176"
    uid: d9a2bf81-7c8f-4d22-88ce-07273f39ccf1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: charts
        pod-template-hash: 6fbc96cff6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-19T15:44:20-05:00"
        creationTimestamp: null
        labels:
          app: charts
          pod-template-hash: 6fbc96cff6
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
          imagePullPolicy: Always
          name: helm-registry
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 500m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "5"
      deployment.kubernetes.io/revision-history: "1"
    creationTimestamp: "2025-09-19T03:48:12Z"
    generation: 4
    labels:
      app: charts
      pod-template-hash: 7f5c8564d7
    name: charts-7f5c8564d7
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: charts
      uid: 709519f6-30ab-4526-9842-b622849dfaee
    resourceVersion: "10032673"
    uid: d746d617-35ed-40da-834c-51f7b2fce60c
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: charts
        pod-template-hash: 7f5c8564d7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: charts
          pod-template-hash: 7f5c8564d7
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
          imagePullPolicy: Always
          name: helm-registry
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 500m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 4
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-19T07:37:25Z"
    generation: 3
    labels:
      app: charts
      pod-template-hash: 7f85f594cc
    name: charts-7f85f594cc
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: charts
      uid: 709519f6-30ab-4526-9842-b622849dfaee
    resourceVersion: "7897214"
    uid: f5061273-1173-49ff-af29-20c5540a139f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: charts
        pod-template-hash: 7f85f594cc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-09-19T02:37:25-05:00"
        creationTimestamp: null
        labels:
          app: charts
          pod-template-hash: 7f85f594cc
      spec:
        containers:
        - image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/helm-registry:latest
          imagePullPolicy: Always
          name: helm-registry
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 500m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-22T19:39:55Z"
    generation: 4
    labels:
      app: helm-controller
      pod-template-hash: 74c9dd9fb9
    name: helm-controller-74c9dd9fb9
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: helm-controller
      uid: eafd0077-d5cf-4070-9293-55aeab1d129b
    resourceVersion: "9539089"
    uid: e37770df-6b0b-4889-a493-c70a34998134
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: helm-controller
        pod-template-hash: 74c9dd9fb9
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: helm-controller
          pod-template-hash: 74c9dd9fb9
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - helm-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/helm-controller:v1.1.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: helm-controller
        serviceAccountName: helm-controller
        terminationGracePeriodSeconds: 600
        volumes:
        - emptyDir: {}
          name: temp
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-08T20:10:14Z"
    generation: 2
    labels:
      app: helm-controller
      pod-template-hash: 796dc4787
    name: helm-controller-796dc4787
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: helm-controller
      uid: eafd0077-d5cf-4070-9293-55aeab1d129b
    resourceVersion: "3324295"
    uid: 786488d6-d06b-46c1-9ab5-ac4ababde1b2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: helm-controller
        pod-template-hash: 796dc4787
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: helm-controller
          pod-template-hash: 796dc4787
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - helm-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/helm-controller:v1.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          eks.amazonaws.com/nodegroup: util
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: helm-controller
        serviceAccountName: helm-controller
        terminationGracePeriodSeconds: 600
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
        volumes:
        - emptyDir: {}
          name: temp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      deployment.kubernetes.io/revision-history: 1,3
    creationTimestamp: "2025-09-08T20:08:16Z"
    generation: 5
    labels:
      app: helm-controller
      pod-template-hash: 7cfbb6d6c9
    name: helm-controller-7cfbb6d6c9
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: helm-controller
      uid: eafd0077-d5cf-4070-9293-55aeab1d129b
    resourceVersion: "9539081"
    uid: e0f9951e-a66a-43a1-bffd-e232be460dff
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: helm-controller
        pod-template-hash: 7cfbb6d6c9
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: helm-controller
          pod-template-hash: 7cfbb6d6c9
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - helm-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/helm-controller:v1.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: helm-controller
        serviceAccountName: helm-controller
        terminationGracePeriodSeconds: 600
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 5
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-22T19:43:51Z"
    generation: 2
    labels:
      app: image-automation-controller
      pod-template-hash: 78b9bc8df6
    name: image-automation-controller-78b9bc8df6
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: image-automation-controller
      uid: bf8f81f5-fdc6-4c4e-8c57-b8b77ed0de18
    resourceVersion: "10032753"
    uid: abeb6181-4c9a-4bc0-a057-d2a9d40e9989
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: image-automation-controller
        pod-template-hash: 78b9bc8df6
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: image-automation-controller
          pod-template-hash: 78b9bc8df6
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - image-automation-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/image-automation-controller:v0.41.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: image-automation-controller
        serviceAccountName: image-automation-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-22T19:39:56Z"
    generation: 1
    labels:
      app: image-automation-controller
      pod-template-hash: 86f7bb74fc
    name: image-automation-controller-86f7bb74fc
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: image-automation-controller
      uid: bf8f81f5-fdc6-4c4e-8c57-b8b77ed0de18
    resourceVersion: "9536901"
    uid: 5f4b9583-3cac-4db1-9178-27537386c7eb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: image-automation-controller
        pod-template-hash: 86f7bb74fc
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: image-automation-controller
          pod-template-hash: 86f7bb74fc
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - image-automation-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/image-automation-controller:v0.39.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: image-automation-controller
        serviceAccountName: image-automation-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-22T19:39:57Z"
    generation: 1
    labels:
      app: image-reflector-controller
      pod-template-hash: 685f8d65cf
    name: image-reflector-controller-685f8d65cf
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: image-reflector-controller
      uid: dc4fe98f-73a0-41a8-a1d4-0a28a893b291
    resourceVersion: "9536910"
    uid: 8493aedc-a078-4cbf-965a-da28dd54ae8d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: image-reflector-controller
        pod-template-hash: 685f8d65cf
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: image-reflector-controller
          pod-template-hash: 685f8d65cf
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - image-reflector-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/image-reflector-controller:v0.33.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
          - mountPath: /data
            name: data
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: image-reflector-controller
        serviceAccountName: image-reflector-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
        - emptyDir: {}
          name: data
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-22T19:43:51Z"
    generation: 2
    labels:
      app: image-reflector-controller
      pod-template-hash: 6cf8b4584c
    name: image-reflector-controller-6cf8b4584c
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: image-reflector-controller
      uid: dc4fe98f-73a0-41a8-a1d4-0a28a893b291
    resourceVersion: "10032749"
    uid: 3d35b3e1-0739-4a9c-9a4b-354108f4226c
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: image-reflector-controller
        pod-template-hash: 6cf8b4584c
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: image-reflector-controller
          pod-template-hash: 6cf8b4584c
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - image-reflector-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/image-reflector-controller:v0.35.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
          - mountPath: /data
            name: data
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: image-reflector-controller
        serviceAccountName: image-reflector-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
        - emptyDir: {}
          name: data
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-22T19:39:57Z"
    generation: 4
    labels:
      app: kustomize-controller
      pod-template-hash: 5654f874ff
    name: kustomize-controller-5654f874ff
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kustomize-controller
      uid: 5c9955b7-c8a6-46f0-a943-8549d98bce78
    resourceVersion: "9539143"
    uid: 1954d9d3-53e6-4d12-9577-174d4b01fe4c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kustomize-controller
        pod-template-hash: 5654f874ff
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: kustomize-controller
          pod-template-hash: 5654f874ff
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kustomize-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=debug
          - --log-encoding=json
          - --enable-leader-election
          - --requeue-dependency=10s
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/kustomize-controller:v1.4.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: kustomize-controller
        serviceAccountName: kustomize-controller
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: temp
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      deployment.kubernetes.io/revision-history: 1,3
    creationTimestamp: "2025-09-08T20:08:37Z"
    generation: 5
    labels:
      app: kustomize-controller
      pod-template-hash: 669b8bf874
    name: kustomize-controller-669b8bf874
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kustomize-controller
      uid: 5c9955b7-c8a6-46f0-a943-8549d98bce78
    resourceVersion: "10032714"
    uid: f900cd0e-7e45-444c-b52c-319b47a663db
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: kustomize-controller
        pod-template-hash: 669b8bf874
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: kustomize-controller
          pod-template-hash: 669b8bf874
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kustomize-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=debug
          - --log-encoding=json
          - --enable-leader-election
          - --requeue-dependency=10s
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: kustomize-controller
        serviceAccountName: kustomize-controller
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 5
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-08T20:10:14Z"
    generation: 2
    labels:
      app: kustomize-controller
      pod-template-hash: 7c67689d84
    name: kustomize-controller-7c67689d84
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kustomize-controller
      uid: 5c9955b7-c8a6-46f0-a943-8549d98bce78
    resourceVersion: "3324297"
    uid: 45a4eb25-59e4-45ff-9a96-b462dd8946a3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: kustomize-controller
        pod-template-hash: 7c67689d84
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: kustomize-controller
          pod-template-hash: 7c67689d84
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kustomize-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=debug
          - --log-encoding=json
          - --enable-leader-election
          - --requeue-dependency=10s
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          eks.amazonaws.com/nodegroup: util
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: kustomize-controller
        serviceAccountName: kustomize-controller
        terminationGracePeriodSeconds: 60
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
        volumes:
        - emptyDir: {}
          name: temp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-22T19:39:58Z"
    generation: 4
    labels:
      app: notification-controller
      pod-template-hash: 7b54f8895f
    name: notification-controller-7b54f8895f
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: notification-controller
      uid: cfd03b31-4110-46db-88f5-84ae2964d2f8
    resourceVersion: "9539065"
    uid: 1a6b584e-e346-4769-b76f-7f1ecf7c40ad
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-controller
        pod-template-hash: 7b54f8895f
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: notification-controller
          pod-template-hash: 7b54f8895f
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - notification-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/notification-controller:v1.4.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 9292
            name: http-webhook
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: notification-controller
        serviceAccountName: notification-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-08T20:10:14Z"
    generation: 2
    labels:
      app: notification-controller
      pod-template-hash: 84fb845ccf
    name: notification-controller-84fb845ccf
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: notification-controller
      uid: cfd03b31-4110-46db-88f5-84ae2964d2f8
    resourceVersion: "3324301"
    uid: faa2b27d-b3eb-4b74-bcbc-d6190fb8db99
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: notification-controller
        pod-template-hash: 84fb845ccf
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: notification-controller
          pod-template-hash: 84fb845ccf
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - notification-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/notification-controller:v1.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 9292
            name: http-webhook
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          eks.amazonaws.com/nodegroup: util
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: notification-controller
        serviceAccountName: notification-controller
        terminationGracePeriodSeconds: 10
        tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: util
        volumes:
        - emptyDir: {}
          name: temp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      deployment.kubernetes.io/revision-history: 1,3
    creationTimestamp: "2025-09-08T20:09:41Z"
    generation: 5
    labels:
      app: notification-controller
      pod-template-hash: b877689d5
    name: notification-controller-b877689d5
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: notification-controller
      uid: cfd03b31-4110-46db-88f5-84ae2964d2f8
    resourceVersion: "10032689"
    uid: faf509a8-d5b6-49ce-bc3e-517c35029605
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: notification-controller
        pod-template-hash: b877689d5
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: notification-controller
          pod-template-hash: b877689d5
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - notification-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/notification-controller:v1.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 9292
            name: http-webhook
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: notification-controller
        serviceAccountName: notification-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 5
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "3"
      deployment.kubernetes.io/revision-history: "1"
    creationTimestamp: "2025-09-08T20:11:42Z"
    generation: 3
    labels:
      app: source-controller
      pod-template-hash: 58466bbdb4
    name: source-controller-58466bbdb4
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: source-controller
      uid: 5189ae58-7a50-43b1-a932-d7695c2f4408
    resourceVersion: "10032705"
    uid: a9aa91b7-9048-49eb-85f8-44c5715c6250
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: source-controller
        pod-template-hash: 58466bbdb4
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: source-controller
          pod-template-hash: 58466bbdb4
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: source-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          - --storage-path=/data
          - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TUF_ROOT
            value: /tmp/.sigstore
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/source-controller:v1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: source-controller
        serviceAccountName: source-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-22T19:39:59Z"
    generation: 2
    labels:
      app: source-controller
      pod-template-hash: 6d599bb949
    name: source-controller-6d599bb949
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: source-controller
      uid: 5189ae58-7a50-43b1-a932-d7695c2f4408
    resourceVersion: "9538853"
    uid: 91ff4b19-80fa-4d17-90f6-2ab72e512c94
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: source-controller
        pod-template-hash: 6d599bb949
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: source-controller
          pod-template-hash: 6d599bb949
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: source-controller
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          - --storage-path=/data
          - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TUF_ROOT
            value: /tmp/.sigstore
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/source-controller:v1.4.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: source-controller
        serviceAccountName: source-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-08-29T14:54:58Z"
    generation: 1
    labels:
      eks.amazonaws.com/component: coredns
      k8s-app: kube-dns
      pod-template-hash: 7b8b87fbd8
    name: coredns-7b8b87fbd8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 61f1bb3a-b2d6-4a30-8e1f-a2b87a9d031b
    resourceVersion: "7825168"
    uid: b445a4c4-a03e-4495-946b-f3e52930528d
  spec:
    replicas: 2
    selector:
      matchLabels:
        eks.amazonaws.com/component: coredns
        k8s-app: kube-dns
        pod-template-hash: 7b8b87fbd8
    template:
      metadata:
        creationTimestamp: null
        labels:
          eks.amazonaws.com/component: coredns
          k8s-app: kube-dns
          pod-template-hash: 7b8b87fbd8
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/coredns:v1.12.1-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kube-dns
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-02T16:39:38Z"
    generation: 1
    labels:
      app: ebs-csi-controller
      app.kubernetes.io/component: csi-driver
      app.kubernetes.io/managed-by: EKS
      app.kubernetes.io/name: aws-ebs-csi-driver
      app.kubernetes.io/version: 1.48.0
      pod-template-hash: 85857479c4
    name: ebs-csi-controller-85857479c4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ebs-csi-controller
      uid: e5a92e28-f48d-42e9-ac66-a072484ad1a5
    resourceVersion: "7825438"
    uid: 69e3616f-ac15-4918-9ff3-7e5449ce9e7c
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: ebs-csi-controller
        app.kubernetes.io/name: aws-ebs-csi-driver
        pod-template-hash: 85857479c4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ebs-csi-controller
          app.kubernetes.io/component: csi-driver
          app.kubernetes.io/managed-by: EKS
          app.kubernetes.io/name: aws-ebs-csi-driver
          app.kubernetes.io/version: 1.48.0
          pod-template-hash: 85857479c4
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                  - hybrid
              weight: 1
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ebs-csi-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - controller
          - --endpoint=$(CSI_ENDPOINT)
          - --k8s-tag-cluster-id=dev-2025
          - --batching=true
          - --logging-format=text
          - --user-agent-extra=eks
          - --v=2
          env:
          - name: CSI_ENDPOINT
            value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          - name: CSI_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: key_id
                name: aws-secret
                optional: true
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: access_key
                name: aws-secret
                optional: true
          - name: AWS_EC2_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: endpoint
                name: aws-meta
                optional: true
          - name: AWS_SAGEMAKER_ENDPOINT
            valueFrom:
              configMapKeyRef:
                key: sagemaker_endpoint
                name: aws-meta
                optional: true
          - name: AWS_REGION
            value: us-east-2
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/aws-ebs-csi-driver:v1.48.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: ebs-plugin
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --timeout=60s
          - --csi-address=$(ADDRESS)
          - --v=2
          - --feature-gates=Topology=true
          - --extra-create-metadata
          - --leader-election=true
          - --default-fstype=ext4
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --worker-threads=100
          - --retry-interval-max=30m
          - --feature-gates=VolumeAttributesClass=true
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-provisioner:v5.3.0-eksbuild.4
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --timeout=6m
          - --csi-address=$(ADDRESS)
          - --v=2
          - --leader-election=true
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --worker-threads=100
          - --retry-interval-max=5m
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-attacher:v4.9.0-eksbuild.4
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --leader-election=true
          - --v=2
          - --extra-create-metadata
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --worker-threads=100
          - --retry-interval-max=30m
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-snapshotter:v8.3.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          name: csi-snapshotter
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --timeout=60s
          - --extra-modify-metadata
          - --csi-address=$(ADDRESS)
          - --v=2
          - --handle-volume-inuse-error=false
          - --leader-election=true
          - --kube-api-qps=20
          - --kube-api-burst=100
          - --workers=100
          - --retry-interval-max=30m
          - --feature-gates=VolumeAttributesClass=true
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/csi-resizer:v1.14.0-eksbuild.4
          imagePullPolicy: IfNotPresent
          name: csi-resizer
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - args:
          - --csi-address=/csi/csi.sock
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/livenessprobe:v2.16.0-eksbuild.5
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: ebs-csi-controller-sa
        serviceAccountName: ebs-csi-controller-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
          tolerationSeconds: 300
        volumes:
        - emptyDir: {}
          name: socket-dir
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-19T03:54:36Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/name: metrics-server
      pod-template-hash: 7954c754b
    name: metrics-server-7954c754b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 5ba62047-3ff4-4839-abe1-caa49ad486c9
    resourceVersion: "7825536"
    uid: cdc8c876-c5f2-45e5-a4a4-5e4793f7aaa2
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/instance: metrics-server
        app.kubernetes.io/name: metrics-server
        pod-template-hash: 7954c754b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: metrics-server
          app.kubernetes.io/name: metrics-server
          pod-template-hash: 7954c754b
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --secure-port=10251
          - --cert-dir=/tmp
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/metrics-server:v0.8.0-eksbuild.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10251
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: metrics-server
              app.kubernetes.io/name: metrics-server
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-02T16:46:59Z"
    generation: 1
    labels:
      app: snapshot-controller
      pod-template-hash: 75cc6b99db
    name: snapshot-controller-75cc6b99db
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: snapshot-controller
      uid: 3c8a39b7-6c1d-4473-8baf-df1425911909
    resourceVersion: "7825475"
    uid: c55f44b7-5b31-452a-bde0-1a9d3269912c
  spec:
    minReadySeconds: 15
    replicas: 2
    selector:
      matchLabels:
        app: snapshot-controller
        pod-template-hash: 75cc6b99db
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: snapshot-controller
          pod-template-hash: 75cc6b99db
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                  - auto
                  - hybrid
              weight: 1
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - snapshot-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --leader-election=true
          image: 602401143452.dkr.ecr.us-east-2.amazonaws.com/eks/snapshot-controller:v8.3.0-eksbuild.1
          imagePullPolicy: IfNotPresent
          name: snapshot-controller
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: snapshot-controller
        serviceAccountName: snapshot-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
          tolerationSeconds: 300
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-19T21:27:56Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      pod-template-hash: 749d597bc4
    name: grafana-749d597bc4
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: ca85f8cc-50e3-46f7-a936-6d7fc849d039
    resourceVersion: "8167237"
    uid: 3e7019b3-86cf-4772-acbd-06d43bc0fc48
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 749d597bc4
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: fb04cde2bf3f497cd0599860d82e95106311c4e667bf85e8e83eefb98134c397
          kubectl.kubernetes.io/default-container: grafana
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          pod-template-hash: 749d597bc4
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          envFrom:
          - secretRef:
              name: grafana-env-46f8b28mk5
          - configMapRef:
              name: grafana-env-k6cb5ffkht
              optional: false
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        initContainers:
        - command:
          - chown
          - -R
          - 472:472
          - /var/lib/grafana
          image: 572430232445.dkr.ecr.us-east-2.amazonaws.com/grafana:11.5
          imagePullPolicy: IfNotPresent
          name: init-chown-data
          resources: {}
          securityContext:
            capabilities:
              add:
              - CHOWN
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana
            name: storage
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - name: storage
          persistentVolumeClaim:
            claimName: grafana
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 12.0.2
      helm.sh/chart: grafana-9.2.10
      pod-template-hash: 5454674d9b
    name: victoria-metrics-grafana-5454674d9b
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: victoria-metrics-grafana
      uid: 6505c128-2373-4641-b2bd-541a96235914
    resourceVersion: "10032913"
    uid: 36ac5788-9ae9-430f-9321-4e70e1e70a17
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: victoria-metrics
        app.kubernetes.io/name: grafana
        pod-template-hash: 5454674d9b
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: 89ec8c9c059a6a61286174130a15d183be69b7a486acc8437afbaf5d790a0ddd
          checksum/secret: 198af27b92832f7bd2144d122a318809af6c7290eae061236e639e66373b235e
          kubectl.kubernetes.io/default-container: grafana
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 12.0.2
          helm.sh/chart: grafana-9.2.10
          pod-template-hash: 5454674d9b
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: METHOD
            value: WATCH
          - name: LABEL
            value: grafana_dashboard
          - name: FOLDER
            value: /var/lib/grafana/dashboards/default
          - name: RESOURCE
            value: both
          - name: REQ_USERNAME
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: victoria-metrics-grafana
          - name: REQ_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: victoria-metrics-grafana
          - name: REQ_URL
            value: http://localhost:3000/api/admin/provisioning/dashboards/reload
          - name: REQ_METHOD
            value: POST
          image: quay.io/kiwigrid/k8s-sidecar:1.30.3
          imagePullPolicy: IfNotPresent
          name: grafana-sc-dashboard
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana/dashboards
            name: sc-dashboard-volume
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: victoria-metrics-grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: victoria-metrics-grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:12.0.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
          - mountPath: /var/lib/grafana/dashboards
            name: sc-dashboard-volume
          - mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
            name: sc-dashboard-provider
            subPath: provider.yaml
          - mountPath: /etc/grafana/provisioning/datasources
            name: sc-datasources-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        initContainers:
        - env:
          - name: METHOD
            value: LIST
          - name: LABEL
            value: grafana_datasource
          - name: FOLDER
            value: /etc/grafana/provisioning/datasources
          - name: RESOURCE
            value: both
          image: quay.io/kiwigrid/k8s-sidecar:1.30.3
          imagePullPolicy: IfNotPresent
          name: grafana-init-sc-datasources
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/provisioning/datasources
            name: sc-datasources-volume
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: victoria-metrics-grafana
        serviceAccountName: victoria-metrics-grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: victoria-metrics-grafana
          name: config
        - emptyDir: {}
          name: storage
        - emptyDir: {}
          name: sc-dashboard-volume
        - configMap:
            defaultMode: 420
            name: victoria-metrics-grafana-config-dashboards
          name: sc-dashboard-provider
        - emptyDir: {}
          name: sc-datasources-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-6.0.0
      pod-template-hash: 6bff77c8c9
    name: victoria-metrics-kube-state-metrics-6bff77c8c9
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: victoria-metrics-kube-state-metrics
      uid: 43370b79-d778-42d4-8fe5-b28fccfc9ee0
    resourceVersion: "10032860"
    uid: c5228166-b5c8-4297-a654-7a5c14c88f94
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: victoria-metrics
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 6bff77c8c9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-6.0.0
          pod-template-hash: 6bff77c8c9
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: victoria-metrics-kube-state-metrics
        serviceAccountName: victoria-metrics-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:29Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-metrics-operator
      pod-template-hash: 689b7d85f
    name: victoria-metrics-victoria-metrics-operator-689b7d85f
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: victoria-metrics-victoria-metrics-operator
      uid: c3675cba-89b5-449d-8994-8ab4dba87c89
    resourceVersion: "10032892"
    uid: dfd45432-911d-4d02-ac73-8cbbd281e0a0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: victoria-metrics
        app.kubernetes.io/name: victoria-metrics-operator
        pod-template-hash: 689b7d85f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: victoria-metrics-operator
          pod-template-hash: 689b7d85f
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --zap-log-level=info
          - --leader-elect
          - --health-probe-bind-address=:8081
          - --webhook.enable=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: victoria-metrics-operator
          - name: VM_ENABLEDPROMETHEUSCONVERTEROWNERREFERENCES
            value: "false"
          image: victoriametrics/operator:v0.62.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            tcpSocket:
              port: probe
            timeoutSeconds: 5
          name: operator
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8081
            name: probe
            protocol: TCP
          - containerPort: 9443
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: probe
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: victoria-metrics-victoria-metrics-operator
        serviceAccountName: victoria-metrics-victoria-metrics-operator
        terminationGracePeriodSeconds: 30
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: victoria-metrics-victoria-metrics-operator-validation
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmagent
      managed-by: vm-operator
      pod-template-hash: 6d756f7f89
    name: vmagent-vm-6d756f7f89
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: vmagent-vm
      uid: 675e97fa-75d3-4dfe-911e-7631bbb38b73
    resourceVersion: "10001893"
    uid: 090961ff-cab9-46df-8341-d6ffa7bbe8b4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/instance: vm
        app.kubernetes.io/name: vmagent
        managed-by: vm-operator
        pod-template-hash: 6d756f7f89
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring
          app.kubernetes.io/instance: vm
          app.kubernetes.io/name: vmagent
          managed-by: vm-operator
          pod-template-hash: 6d756f7f89
      spec:
        containers:
        - args:
          - --reload-url=http://localhost:8429/-/reload
          - --config-envsubst-file=/etc/vmagent/config_out/vmagent.env.yaml
          - --config-file=/etc/vmagent/config/vmagent.yaml.gz
          command:
          - /bin/prometheus-config-reloader
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
          imagePullPolicy: IfNotPresent
          name: config-reloader
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/vmagent/config_out
            name: config-out
          - mountPath: /etc/vmagent/config
            name: config
        - args:
          - -httpListenAddr=:8429
          - -promscrape.config=/etc/vmagent/config_out/vmagent.env.yaml
          - -promscrape.dropOriginalLabels=true
          - -promscrape.streamParse=true
          - -remoteWrite.maxDiskUsagePerURL=1073741824
          - -remoteWrite.tmpDataPath=/tmp/vmagent-remotewrite-data
          - -remoteWrite.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428/api/v1/write
          image: victoriametrics/vmagent:v1.125.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8429
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: vmagent
          ports:
          - containerPort: 8429
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8429
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp/vmagent-remotewrite-data
            name: persistent-queue-data
          - mountPath: /etc/vmagent/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/vmagent-tls/certs
            name: tls-assets
            readOnly: true
          - mountPath: /etc/vmagent/config
            name: config
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -c
          - gunzip -c /etc/vmagent/config/vmagent.yaml.gz > /etc/vmagent/config_out/vmagent.env.yaml
          command:
          - /bin/sh
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.1
          imagePullPolicy: IfNotPresent
          name: config-init
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/vmagent/config
            name: config
          - mountPath: /etc/vmagent/config_out
            name: config-out
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vmagent-vm
        serviceAccountName: vmagent-vm
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: persistent-queue-data
        - name: tls-assets
          secret:
            defaultMode: 420
            secretName: tls-assets-vmagent-vm
        - emptyDir: {}
          name: config-out
        - name: config
          secret:
            defaultMode: 420
            secretName: vmagent-vm
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:48Z"
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmalert
      managed-by: vm-operator
      pod-template-hash: df4f56c4c
    name: vmalert-vm-df4f56c4c
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: vmalert-vm
      uid: 08168708-396a-46c4-9644-909705c6255a
    resourceVersion: "10032725"
    uid: 136e2488-3988-44ca-ad7a-4fe77b0f5d1a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/instance: vm
        app.kubernetes.io/name: vmalert
        managed-by: vm-operator
        pod-template-hash: df4f56c4c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring
          app.kubernetes.io/instance: vm
          app.kubernetes.io/name: vmalert
          managed-by: vm-operator
          pod-template-hash: df4f56c4c
      spec:
        containers:
        - args:
          - -datasource.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428
          - -evaluationInterval=20s
          - -external.alert.source=explore?left={"datasource":"VictoriaMetrics","queries":[{"expr":{{
            .Expr|jsonEscape|queryEscape }},"refId":"A"}],"range":{"from":"{{ .ActiveAt.UnixMilli
            }}","to":"now"}}
          - -external.url=http://grafana.domain.com
          - -http.pathPrefix=/
          - -httpListenAddr=:8080
          - -notifier.url=http://vmalertmanager-vm-0.vmalertmanager-vm.monitoring.svc.cluster.local.:9093
          - -remoteRead.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428
          - -remoteWrite.disablePathAppend=true
          - -remoteWrite.url=http://vmsingle-vm.monitoring.svc.cluster.local.:8428/api/v1/write
          - -rule="/etc/vmalert/config/vm-vm-rulefiles-0/*.yaml"
          image: victoriametrics/vmalert:v1.125.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: vmalert
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/vmalert/remote_secrets
            name: config
            readOnly: true
          - mountPath: /etc/vmalert-tls/certs
            name: tls-assets
            readOnly: true
          - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
            name: vm-vm-rulefiles-0
        - args:
          - -webhook-url=http://localhost:8080/-/reload
          - -volume-dir=/etc/vmalert/config/vm-vm-rulefiles-0
          image: jimmidyson/configmap-reload:v0.3.0
          imagePullPolicy: IfNotPresent
          name: config-reloader
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/vmalert/config/vm-vm-rulefiles-0
            name: vm-vm-rulefiles-0
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vmalert-vm
        serviceAccountName: vmalert-vm
        terminationGracePeriodSeconds: 30
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: vmalert-vm
        - name: tls-assets
          secret:
            defaultMode: 420
            secretName: tls-assets-vmalert-vm
        - configMap:
            defaultMode: 420
            name: vm-vm-rulefiles-0
          name: vm-vm-rulefiles-0
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/name: vmsingle
      managed-by: vm-operator
      pod-template-hash: 586b8b49f9
    name: vmsingle-vm-586b8b49f9
    namespace: monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: vmsingle-vm
      uid: 848b3634-eadc-4116-8b13-efc677671a15
    resourceVersion: "10035262"
    uid: 6e271978-975d-46c9-9f1f-bb68592d326e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/instance: vm
        app.kubernetes.io/name: vmsingle
        managed-by: vm-operator
        pod-template-hash: 586b8b49f9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring
          app.kubernetes.io/instance: vm
          app.kubernetes.io/name: vmsingle
          managed-by: vm-operator
          pod-template-hash: 586b8b49f9
      spec:
        containers:
        - args:
          - -httpListenAddr=:8428
          - -retentionPeriod=7
          - -storageDataPath=/victoria-metrics-data
          - -vmalert.proxyURL=http://vmalert-vm.monitoring.svc.cluster.local.:8080
          image: victoriametrics/victoria-metrics:v1.125.1
          imagePullPolicy: IfNotPresent
          name: vmsingle
          ports:
          - containerPort: 8428
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8428
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1200m
              memory: 1500Mi
            requests:
              cpu: 150m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /victoria-metrics-data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vmsingle-vm
        serviceAccountName: vmsingle-vm
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: vmsingle-vm
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: vlogs
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-19T21:37:12Z"
    generation: 1
    labels:
      app: server
      app.kubernetes.io/instance: vlogs
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-logs-single
      app.kubernetes.io/version: v1.33.0
      helm.sh/chart: victoria-logs-single-0.11.8
    name: vlogs-server
    namespace: monitoring
    resourceVersion: "8170324"
    uid: 2d965a92-bc40-47de-80a4-4a3de4f42b53
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: server
        app.kubernetes.io/instance: vlogs
        app.kubernetes.io/name: victoria-logs-single
    serviceName: vlogs-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: server
          app.kubernetes.io/instance: vlogs
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: victoria-logs-single
      spec:
        containers:
        - args:
          - --envflag.enable
          - --envflag.prefix=VM_
          - --http.shutdownDelay=15s
          - --httpListenAddr=:9428
          - --loggerFormat=json
          - --retentionPeriod=1
          - --storageDataPath=/storage
          image: victoriametrics/victoria-logs:v1.33.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: vlogs
          ports:
          - containerPort: 9428
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 51Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: server-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 60
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: server-volume
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: vlogs-server-f67cc647
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: vlogs-server-f67cc647
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: victoria-metrics
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-09-23T17:38:47Z"
    finalizers:
    - apps.victoriametrics.com/finalizer
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring
      app.kubernetes.io/instance: vm
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vmalertmanager
      app.kubernetes.io/version: v0.28.1
      helm.sh/chart: victoria-metrics-k8s-stack-0.59.5
      managed-by: vm-operator
    name: vmalertmanager-vm
    namespace: monitoring
    ownerReferences:
    - apiVersion: operator.victoriametrics.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: VMAlertmanager
      name: vm
      uid: 0ab751ff-ac8e-4ecb-95cc-21ce14e208c4
    resourceVersion: "10032759"
    uid: f2e295c4-9d83-4b4c-8173-246fde0e302c
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/instance: vm
        app.kubernetes.io/name: vmalertmanager
        managed-by: vm-operator
    serviceName: vmalertmanager-vm
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring
          app.kubernetes.io/instance: vm
          app.kubernetes.io/name: vmalertmanager
          managed-by: vm-operator
      spec:
        containers:
        - args:
          - --cluster.listen-address=
          - --cluster.peer=vmalertmanager-vm-0.vmalertmanager-vm:9094
          - --config.file=/etc/alertmanager/config/alertmanager.yaml
          - --data.retention=120h
          - --enable-feature=utf8-strict-mode
          - --storage.path=/alertmanager
          - --web.listen-address=:9093
          - --web.route-prefix=/
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: prom/alertmanager:v0.28.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: alertmanager
          ports:
          - containerPort: 9093
            name: web
            protocol: TCP
          - containerPort: 9094
            name: mesh-tcp
            protocol: TCP
          - containerPort: 9094
            name: mesh-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 30m
              memory: 56Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/alertmanager/config
            name: config-volume
            readOnly: true
          - mountPath: /alertmanager
            name: vmalertmanager-vm-db
          - mountPath: /etc/alertmanager/tls_assets
            name: tls-assets
            readOnly: true
          - mountPath: /etc/vm/templates/vmalertmanager-vm-monzo-tpl
            name: templates-vmalertmanager-vm-monzo-tpl
            readOnly: true
        - args:
          - -webhook-url=http://127.0.0.1:9093/-/reload
          - -volume-dir=/etc/alertmanager/config
          - -volume-dir=/etc/alertmanager/tls_assets
          - -volume-dir=/etc/vm/templates/vmalertmanager-vm-monzo-tpl
          image: jimmidyson/configmap-reload:v0.3.0
          imagePullPolicy: IfNotPresent
          name: config-reloader
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/alertmanager/config
            name: config-volume
          - mountPath: /etc/alertmanager/tls_assets
            name: tls-assets
            readOnly: true
          - mountPath: /etc/vm/templates/vmalertmanager-vm-monzo-tpl
            name: templates-vmalertmanager-vm-monzo-tpl
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: vmalertmanager-vm
        serviceAccountName: vmalertmanager-vm
        terminationGracePeriodSeconds: 120
        volumes:
        - name: config-volume
          secret:
            defaultMode: 420
            secretName: vmalertmanager-vm-config
        - name: tls-assets
          secret:
            defaultMode: 420
            secretName: vmalertmanager-vm-config
        - configMap:
            defaultMode: 420
            name: vmalertmanager-vm-monzo-tpl
          name: templates-vmalertmanager-vm-monzo-tpl
        - emptyDir: {}
          name: vmalertmanager-vm-db
    updateStrategy:
      type: OnDelete
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: vmalertmanager-vm-74fc667858
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: vmalertmanager-vm-74fc667858
    updatedReplicas: 1
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      helm.sh/hook: pre-delete
      helm.sh/hook-delete-policy: before-hook-creation
      helm.sh/hook-weight: "-3"
    creationTimestamp: "2025-09-23T17:37:21Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: victoria-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: victoria-metrics-operator
      app.kubernetes.io/version: v0.62.0
      helm.sh/chart: victoria-metrics-operator-0.52.1
    name: victoria-metrics-victoria-metrics-operator-cleanup-hook
    namespace: monitoring
    resourceVersion: "10000867"
    uid: bd1c7b1e-9fb9-4ef1-8686-22f35efdd492
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: bd1c7b1e-9fb9-4ef1-8686-22f35efdd492
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: victoria-metrics
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: victoria-metrics-operator
          app.kubernetes.io/version: v0.62.0
          batch.kubernetes.io/controller-uid: bd1c7b1e-9fb9-4ef1-8686-22f35efdd492
          batch.kubernetes.io/job-name: victoria-metrics-victoria-metrics-operator-cleanup-hook
          controller-uid: bd1c7b1e-9fb9-4ef1-8686-22f35efdd492
          helm.sh/chart: victoria-metrics-operator-0.52.1
          job-name: victoria-metrics-victoria-metrics-operator-cleanup-hook
        name: victoria-metrics-victoria-metrics-operator
      spec:
        containers:
        - args:
          - delete
          - vlagent,vlcluster,vlogs,vlsingle,vmagent,vmalert,vmalertmanager,vmalertmanagerconfig,vmanomaly,vmauth,vmcluster,vmnodescrape,vmpodscrape,vmprobe,vmrule,vmservicescrape,vmsingle,vmstaticscrape,vmuser
          - --all
          - --ignore-not-found=true
          image: rancher/kubectl:v1.33.3
          imagePullPolicy: IfNotPresent
          name: kubectl
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 56Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: victoria-metrics-victoria-metrics-operator-cleanup-hook
        serviceAccountName: victoria-metrics-victoria-metrics-operator-cleanup-hook
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2025-09-23T17:37:34Z"
    conditions:
    - lastProbeTime: "2025-09-23T17:37:34Z"
      lastTransitionTime: "2025-09-23T17:37:34Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: SuccessCriteriaMet
    - lastProbeTime: "2025-09-23T17:37:34Z"
      lastTransitionTime: "2025-09-23T17:37:34Z"
      message: Reached expected number of succeeded pods
      reason: CompletionsReached
      status: "True"
      type: Complete
    ready: 0
    startTime: "2025-09-23T17:37:21Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
